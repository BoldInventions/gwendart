// Generated by dart2js, the Dart to JavaScript compiler version: 1.0.0.10_r30798.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
(function($) {
var A = {};
delete A.x;
var B = {};
delete B.x;
var C = {};
delete C.x;
var D = {};
delete D.x;
var E = {};
delete E.x;
var F = {};
delete F.x;
var G = {};
delete G.x;
var H = {};
delete H.x;
var J = {};
delete J.x;
var K = {};
delete K.x;
var L = {};
delete L.x;
var M = {};
delete M.x;
var N = {};
delete N.x;
var O = {};
delete O.x;
var P = {};
delete P.x;
var Q = {};
delete Q.x;
var R = {};
delete R.x;
var S = {};
delete S.x;
var T = {};
delete T.x;
var U = {};
delete U.x;
var V = {};
delete V.x;
var W = {};
delete W.x;
var X = {};
delete X.x;
var Y = {};
delete Y.x;
var Z = {};
delete Z.x;
function Isolate() {}
init();

$ = Isolate.$isolateProperties;
var $$ = {};

// Native classes
// Method closures
$$.BoundClosure$i0 = [H, {"": "BoundClosure;_self,_target,_receiver,__js_helper$_name",
  call$0: function() {
    return this._target.call(this._self, this._receiver);
  }
}];

$$.BoundClosure$1 = [H, {"": "BoundClosure;_self,_target,_receiver,__js_helper$_name",
  call$1: function(p0) {
    return this._target.call(this._self, p0);
  },
  $is_args1: true
}];

$$.BoundClosure$2 = [P, {"": "BoundClosure;_self,_target,_receiver,__js_helper$_name",
  call$2: function(p0, p1) {
    return this._target.call(this._self, p0, p1);
  },
  call$1: function(p0) {
    return this.call$2(p0, null);
  },
  $is_args2: true,
  $is_args1: true
}];

$$.BoundClosure$i1 = [P, {"": "BoundClosure;_self,_target,_receiver,__js_helper$_name",
  call$1: function(p0) {
    return this._target.call(this._self, this._receiver, p0);
  },
  $is_args1: true
}];

$$.BoundClosure$0 = [P, {"": "BoundClosure;_self,_target,_receiver,__js_helper$_name",
  call$0: function() {
    return this._target.call(this._self);
  }
}];

$$.BoundClosure$20 = [X, {"": "BoundClosure;_self,_target,_receiver,__js_helper$_name",
  call$2: function(p0, p1) {
    return this._target.call(this._self, p0, p1);
  },
  $is_args2: true
}];

$$.Closure$2 = [H, {"": "Closure;call$2,$name", $is_args2: true}];

$$.Closure$0 = [H, {"": "Closure;call$0,$name"}];

$$.Closure$7 = [H, {"": "Closure;call$7,$name"}];

$$.Closure$1 = [P, {"": "Closure;call$1,$name", $is_args1: true}];

$$.Closure$20 = [P, {"": "Closure;call$2,$name",
  call$1: function(p0) {
    return this.call$2(p0, null);
  },
  $is_args2: true,
  $is_args1: true
}];

(function (reflectionData) {
  function map(x){x={x:x};delete x.x;return x}
  if (!init.libraries) init.libraries = [];
  if (!init.mangledNames) init.mangledNames = map();
  if (!init.mangledGlobalNames) init.mangledGlobalNames = map();
  if (!init.statics) init.statics = map();
  if (!init.typeInformation) init.typeInformation = map();
  if (!init.globalFunctions) init.globalFunctions = map();
  var libraries = init.libraries;
  var mangledNames = init.mangledNames;
  var mangledGlobalNames = init.mangledGlobalNames;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var length = reflectionData.length;
  for (var i = 0; i < length; i++) {
    var data = reflectionData[i];
    var name = data[0];
    var uri = data[1];
    var metadata = data[2];
    var globalObject = data[3];
    var descriptor = data[4];
    var isRoot = !!data[5];
    var fields = descriptor && descriptor[""];
    var classes = [];
    var functions = [];
    function processStatics(descriptor) {
      for (var property in descriptor) {
        if (!hasOwnProperty.call(descriptor, property)) continue;
        if (property === "") continue;
        var element = descriptor[property];
        var firstChar = property.substring(0, 1);
        var previousProperty;
        if (firstChar === "+") {
          mangledGlobalNames[previousProperty] = property.substring(1);
          if (descriptor[property] == 1) descriptor[previousProperty].$reflectable = 1;
          if (element && element.length) init.typeInformation[previousProperty] = element;
        } else if (firstChar === "@") {
          property = property.substring(1);
          $[property]["@"] = element;
        } else if (firstChar === "*") {
          globalObject[previousProperty].$defaultValues = element;
          var optionalMethods = descriptor.$methodsWithOptionalArguments;
          if (!optionalMethods) {
            descriptor.$methodsWithOptionalArguments = optionalMethods = {}
          }
          optionalMethods[property] = previousProperty;
        } else if (typeof element === "function") {
          globalObject[previousProperty = property] = element;
          functions.push(property);
          init.globalFunctions[property] = element;
        } else {
          previousProperty = property;
          var newDesc = {};
          var previousProp;
          for (var prop in element) {
            if (!hasOwnProperty.call(element, prop)) continue;
            firstChar = prop.substring(0, 1);
            if (prop === "static") {
              processStatics(init.statics[property] = element[prop]);
            } else if (firstChar === "+") {
              mangledNames[previousProp] = prop.substring(1);
              if (element[prop] == 1) element[previousProp].$reflectable = 1;
            } else if (firstChar === "@" && prop !== "@") {
              newDesc[prop.substring(1)]["@"] = element[prop];
            } else if (firstChar === "*") {
              newDesc[previousProp].$defaultValues = element[prop];
              var optionalMethods = newDesc.$methodsWithOptionalArguments;
              if (!optionalMethods) {
                newDesc.$methodsWithOptionalArguments = optionalMethods={}
              }
              optionalMethods[prop] = previousProp;
            } else {
              newDesc[previousProp = prop] = element[prop];
            }
          }
          $$[property] = [globalObject, newDesc];
          classes.push(property);
        }
      }
    }
    processStatics(descriptor);
    libraries.push([name, uri, classes, functions, metadata, fields, isRoot,
                    globalObject]);
  }
})([
["_foreign_helper", "dart:_foreign_helper", , H, {
JS_CONST: {"": "Object;code"}}],
["_interceptors", "dart:_interceptors", , J, {
getInterceptor: function(object) {
  return void 0;
},

makeDispatchRecord: function(interceptor, proto, extension, indexability) {
  return {i: interceptor, p: proto, e: extension, x: indexability};
},

getNativeInterceptor: function(object) {
  var record, proto, objectProto, interceptor;
  record = object[init.dispatchPropertyName];
  if (record == null)
    if ($.initNativeDispatchFlag == null) {
      H.initNativeDispatch();
      record = object[init.dispatchPropertyName];
    }
  if (record != null) {
    proto = record.p;
    if (false === proto)
      return record.i;
    if (true === proto)
      return object;
    objectProto = Object.getPrototypeOf(object);
    if (proto === objectProto)
      return record.i;
    if (record.e === objectProto)
      throw H.wrapException(P.UnimplementedError$("Return interceptor for " + H.S(proto(object, record))));
  }
  interceptor = H.lookupAndCacheInterceptor(object);
  if (interceptor == null)
    return C.UnknownJavaScriptObject_methods;
  return interceptor;
},

Interceptor: {"": "Object;",
  $eq: function(receiver, other) {
    return receiver === other;
  },
  get$hashCode: function(receiver) {
    return H.Primitives_objectHashCode(receiver);
  },
  toString$0: function(receiver) {
    return H.Primitives_objectToString(receiver);
  },
  "%": "ArrayBuffer|Blob|CanvasGradient|CanvasPattern|DOMError|File|FileError|MediaError|MediaKeyError|Navigator|NavigatorUserMediaError|PositionError|SQLError|SVGAnimatedLength|SVGAnimatedLengthList|SVGAnimatedNumber|SVGAnimatedNumberList|WebGLBuffer|WebGLProgram|WebGLShader|WebGLTexture|WebGLUniformLocation"
},

JSBool: {"": "bool/Interceptor;",
  toString$0: function(receiver) {
    return String(receiver);
  },
  get$hashCode: function(receiver) {
    return receiver ? 519018 : 218159;
  },
  $isbool: true
},

JSNull: {"": "Interceptor;",
  $eq: function(receiver, other) {
    return null == other;
  },
  toString$0: function(receiver) {
    return "null";
  },
  get$hashCode: function(receiver) {
    return 0;
  }
},

JavaScriptObject: {"": "Interceptor;",
  get$hashCode: function(_) {
    return 0;
  }
},

PlainJavaScriptObject: {"": "JavaScriptObject;"},

UnknownJavaScriptObject: {"": "JavaScriptObject;"},

JSArray: {"": "List/Interceptor;",
  remove$1: function(receiver, element) {
    var i;
    if (!!receiver.fixed$length)
      H.throwExpression(P.UnsupportedError$("remove"));
    for (i = 0; i < receiver.length; ++i)
      if (J.$eq(receiver[i], element)) {
        receiver.splice(i, 1);
        return true;
      }
    return false;
  },
  forEach$1: function(receiver, f) {
    return H.IterableMixinWorkaround_forEach(receiver, f);
  },
  elementAt$1: function(receiver, index) {
    if (index < 0 || index >= receiver.length)
      throw H.ioore(receiver, index);
    return receiver[index];
  },
  contains$1: function(receiver, other) {
    var i;
    for (i = 0; i < receiver.length; ++i)
      if (J.$eq(receiver[i], other))
        return true;
    return false;
  },
  toString$0: function(receiver) {
    return H.IterableMixinWorkaround_toStringIterable(receiver, "[", "]");
  },
  get$iterator: function(receiver) {
    return new H.ListIterator(receiver, receiver.length, 0, null);
  },
  get$hashCode: function(receiver) {
    return H.Primitives_objectHashCode(receiver);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  set$length: function(receiver, newLength) {
    if (newLength < 0)
      throw H.wrapException(P.RangeError$value(newLength));
    if (!!receiver.fixed$length)
      H.throwExpression(P.UnsupportedError$("set length"));
    receiver.length = newLength;
  },
  $index: function(receiver, index) {
    if (typeof index !== "number" || Math.floor(index) !== index)
      throw H.wrapException(new P.ArgumentError(index));
    if (index >= receiver.length || index < 0)
      throw H.wrapException(P.RangeError$value(index));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    if (!!receiver.immutable$list)
      H.throwExpression(P.UnsupportedError$("indexed set"));
    if (typeof index !== "number" || Math.floor(index) !== index)
      throw H.wrapException(new P.ArgumentError(index));
    if (index >= receiver.length || index < 0)
      throw H.wrapException(P.RangeError$value(index));
    receiver[index] = value;
  },
  $isList: true,
  $asList: null,
  $isList: true,
  $isEfficientLength: true
},

JSMutableArray: {"": "JSArray;", $isJSMutableArray: true,
  $asJSArray: function() {
    return [null];
  },
  $asList: function() {
    return [null];
  }
},

JSFixedArray: {"": "JSMutableArray;"},

JSExtendableArray: {"": "JSMutableArray;", $isJSExtendableArray: true},

JSNumber: {"": "num/Interceptor;",
  get$isNegative: function(receiver) {
    return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
  },
  get$isNaN: function(receiver) {
    return isNaN(receiver);
  },
  remainder$1: function(receiver, b) {
    return receiver % b;
  },
  abs$0: function(receiver) {
    return Math.abs(receiver);
  },
  toInt$0: function(receiver) {
    var t1;
    if (receiver >= -2147483648 && receiver <= 2147483647)
      return receiver | 0;
    if (isFinite(receiver)) {
      t1 = receiver < 0 ? Math.ceil(receiver) : Math.floor(receiver);
      return t1 + 0;
    }
    throw H.wrapException(P.UnsupportedError$('' + receiver));
  },
  ceil$0: function(receiver) {
    return this.toInt$0(Math.ceil(receiver));
  },
  round$0: function(receiver) {
    return this.toInt$0(this.roundToDouble$0(receiver));
  },
  roundToDouble$0: function(receiver) {
    if (receiver < 0)
      return -Math.round(-receiver);
    else
      return Math.round(receiver);
  },
  toDouble$0: function(receiver) {
    return receiver;
  },
  toString$0: function(receiver) {
    if (receiver === 0 && 1 / receiver < 0)
      return "-0.0";
    else
      return "" + receiver;
  },
  get$hashCode: function(receiver) {
    return receiver & 0x1FFFFFFF;
  },
  $negate: function(receiver) {
    return -receiver;
  },
  $add: function(receiver, other) {
    if (typeof other !== "number")
      throw H.wrapException(new P.ArgumentError(other));
    return receiver + other;
  },
  $sub: function(receiver, other) {
    if (typeof other !== "number")
      throw H.wrapException(new P.ArgumentError(other));
    return receiver - other;
  },
  $div: function(receiver, other) {
    return receiver / other;
  },
  $mul: function(receiver, other) {
    if (typeof other !== "number")
      throw H.wrapException(new P.ArgumentError(other));
    return receiver * other;
  },
  $mod: function(receiver, other) {
    var result = receiver % other;
    if (result === 0)
      return 0;
    if (result > 0)
      return result;
    if (other < 0)
      return result - other;
    else
      return result + other;
  },
  $tdiv: function(receiver, other) {
    if ((receiver | 0) === receiver && (other | 0) === other && 0 !== other && -1 !== other)
      return receiver / other | 0;
    else
      return this._slowTdiv$1(receiver, other);
  },
  _slowTdiv$1: function(receiver, other) {
    return this.toInt$0(receiver / other);
  },
  $shr: function(receiver, other) {
    if (other < 0)
      throw H.wrapException(P.ArgumentError$(other));
    if (receiver > 0) {
      if (other > 31)
        return 0;
      return receiver >>> other;
    }
    if (other > 31)
      other = 31;
    return receiver >> other >>> 0;
  },
  $lt: function(receiver, other) {
    if (typeof other !== "number")
      throw H.wrapException(P.ArgumentError$(other));
    return receiver < other;
  },
  $gt: function(receiver, other) {
    if (typeof other !== "number")
      throw H.wrapException(P.ArgumentError$(other));
    return receiver > other;
  },
  $ge: function(receiver, other) {
    if (typeof other !== "number")
      throw H.wrapException(P.ArgumentError$(other));
    return receiver >= other;
  },
  $isnum: true,
  static: {
"": "JSNumber__MIN_INT32,JSNumber__MAX_INT32",
}

},

JSInt: {"": "int/JSNumber;", $isdouble: true, $isnum: true, $isint: true},

JSDouble: {"": "double/JSNumber;", $isdouble: true, $isnum: true},

JSString: {"": "String/Interceptor;",
  codeUnitAt$1: function(receiver, index) {
    if (typeof index !== "number" || Math.floor(index) !== index)
      throw H.wrapException(P.ArgumentError$(index));
    if (index < 0)
      throw H.wrapException(P.RangeError$value(index));
    if (index >= receiver.length)
      throw H.wrapException(P.RangeError$value(index));
    return receiver.charCodeAt(index);
  },
  $add: function(receiver, other) {
    if (typeof other !== "string")
      throw H.wrapException(new P.ArgumentError(other));
    return receiver + other;
  },
  substring$2: function(receiver, startIndex, endIndex) {
    if (typeof startIndex !== "number" || Math.floor(startIndex) !== startIndex)
      H.throwExpression(P.ArgumentError$(startIndex));
    if (endIndex == null)
      endIndex = receiver.length;
    if (typeof endIndex !== "number" || Math.floor(endIndex) !== endIndex)
      H.throwExpression(P.ArgumentError$(endIndex));
    if (startIndex < 0)
      throw H.wrapException(P.RangeError$value(startIndex));
    if (typeof endIndex !== "number")
      throw H.iae(endIndex);
    if (startIndex > endIndex)
      throw H.wrapException(P.RangeError$value(startIndex));
    if (endIndex > receiver.length)
      throw H.wrapException(P.RangeError$value(endIndex));
    return receiver.substring(startIndex, endIndex);
  },
  substring$1: function($receiver, startIndex) {
    return this.substring$2($receiver, startIndex, null);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  toString$0: function(receiver) {
    return receiver;
  },
  get$hashCode: function(receiver) {
    var t1, hash, i;
    for (t1 = receiver.length, hash = 0, i = 0; i < t1; ++i) {
      hash = 536870911 & hash + receiver.charCodeAt(i);
      hash = 536870911 & hash + ((524287 & hash) << 10 >>> 0);
      hash ^= hash >> 6;
    }
    hash = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
    hash ^= hash >> 11;
    return 536870911 & hash + ((16383 & hash) << 15 >>> 0);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    if (typeof index !== "number" || Math.floor(index) !== index)
      throw H.wrapException(new P.ArgumentError(index));
    if (index >= receiver.length || index < 0)
      throw H.wrapException(P.RangeError$value(index));
    return receiver[index];
  },
  $isString: true
}}],
["_isolate_helper", "dart:_isolate_helper", , H, {
_callInIsolate: function(isolate, $function) {
  var result = isolate.eval$1($function);
  $globalState.topEventLoop.run$0();
  return result;
},

startRootIsolate: function(entry) {
  var rootContext;
  $globalState = H._Manager$(entry);
  if ($globalState.isWorker === true)
    return;
  rootContext = H._IsolateContext$();
  $globalState.rootContext = rootContext;
  $globalState.currentContext = rootContext;
  if (!!entry.$is_args1)
    rootContext.eval$1(new H.startRootIsolate_closure(entry));
  else if (!!entry.$is_args2)
    rootContext.eval$1(new H.startRootIsolate_closure0(entry));
  else
    rootContext.eval$1(entry);
  $globalState.topEventLoop.run$0();
},

IsolateNatives_computeThisScript: function() {
  var currentScript = init.currentScript;
  if (currentScript != null)
    return String(currentScript.src);
  if (typeof version == "function" && typeof os == "object" && "system" in os)
    return H.IsolateNatives_computeThisScriptD8();
  if (typeof version == "function" && typeof system == "function")
    return thisFilename();
  return;
},

IsolateNatives_computeThisScriptD8: function() {
  var stack, matches;
  stack = new Error().stack;
  if (stack == null) {
    stack = (function() {try { throw new Error() } catch(e) { return e.stack }})();
    if (stack == null)
      throw H.wrapException(P.UnsupportedError$("No stack trace"));
  }
  matches = stack.match(new RegExp("^ *at [^(]*\\((.*):[0-9]*:[0-9]*\\)$", "m"));
  if (matches != null)
    return matches[1];
  matches = stack.match(new RegExp("^[^@]*@(.*):[0-9]*$", "m"));
  if (matches != null)
    return matches[1];
  throw H.wrapException(P.UnsupportedError$("Cannot extract URI from \"" + stack + "\""));
},

IsolateNatives__processWorkerMessage: function(sender, e) {
  var msg, t1, functionName, entryPoint, args, message, isSpawnUri, replyTo, context, t2;
  msg = H._deserializeMessage(e.data);
  t1 = J.getInterceptor$asx(msg);
  switch (t1.$index(msg, "command")) {
    case "start":
      $globalState.currentManagerId = t1.$index(msg, "id");
      functionName = t1.$index(msg, "functionName");
      entryPoint = functionName == null ? $globalState.entry : init.globalFunctions[functionName];
      args = t1.$index(msg, "args");
      message = H._deserializeMessage(t1.$index(msg, "msg"));
      isSpawnUri = t1.$index(msg, "isSpawnUri");
      replyTo = H._deserializeMessage(t1.$index(msg, "replyTo"));
      context = H._IsolateContext$();
      $globalState.topEventLoop.events._add$1(new H._IsolateEvent(context, new H.IsolateNatives__processWorkerMessage_closure(entryPoint, args, message, isSpawnUri, replyTo), "worker-start"));
      $globalState.currentContext = context;
      $globalState.topEventLoop.run$0();
      break;
    case "spawn-worker":
      H.IsolateNatives__spawnWorker(t1.$index(msg, "functionName"), t1.$index(msg, "uri"), t1.$index(msg, "args"), t1.$index(msg, "msg"), t1.$index(msg, "isSpawnUri"), t1.$index(msg, "replyPort"));
      break;
    case "message":
      if (t1.$index(msg, "port") != null)
        t1.$index(msg, "port").send$1(t1.$index(msg, "msg"));
      $globalState.topEventLoop.run$0();
      break;
    case "close":
      t1 = $globalState.managers;
      t2 = $.get$IsolateNatives_workerIds();
      t1.remove$1(t1, t2.$index(t2, sender));
      sender.terminate();
      $globalState.topEventLoop.run$0();
      break;
    case "log":
      H.IsolateNatives__log(t1.$index(msg, "msg"));
      break;
    case "print":
      if ($globalState.isWorker === true) {
        t1 = $globalState.mainManager;
        t2 = H._serializeMessage(H.fillLiteralMap(["command", "print", "msg", msg], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
        t1.toString;
        self.postMessage(t2);
      } else
        P.print(t1.$index(msg, "msg"));
      break;
    case "error":
      throw H.wrapException(t1.$index(msg, "msg"));
    default:
  }
},

IsolateNatives__log: function(msg) {
  var trace, t1, t2, exception;
  if ($globalState.isWorker === true) {
    t1 = $globalState.mainManager;
    t2 = H._serializeMessage(H.fillLiteralMap(["command", "log", "msg", msg], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
    t1.toString;
    self.postMessage(t2);
  } else
    try {
      $.get$globalThis().console.log(msg);
    } catch (exception) {
      H.unwrapException(exception);
      trace = new H._StackTrace(exception, null);
      throw H.wrapException(P.Exception_Exception(trace));
    }

},

IsolateNatives__startIsolate: function(topLevel, args, message, isSpawnUri, replyTo) {
  var t1;
  H.Primitives_initializeStatics($globalState.currentContext.id);
  $.lazyPort = H.ReceivePortImpl$();
  t1 = $.lazyPort;
  t1.toString;
  replyTo.send$1(["spawned", new H._NativeJsSendPort(t1, $globalState.currentContext.id)]);
  if (isSpawnUri !== true)
    topLevel.call$1(message);
  else {
    t1 = J.getInterceptor(topLevel);
    if (!!t1.$is_args2)
      topLevel.call$2(args, message);
    else if (!!t1.$is_args1)
      topLevel.call$1(args);
    else
      topLevel.call$0();
  }
},

IsolateNatives__spawnWorker: function(functionName, uri, args, message, isSpawnUri, replyPort) {
  var worker, t1, workerId;
  if (uri == null)
    uri = $.get$IsolateNatives_thisScript();
  worker = new Worker(uri);
  worker.onmessage = function(e) { H.IsolateNatives__processWorkerMessage$closure.call$2(worker, e); };
  t1 = $globalState;
  workerId = t1.nextManagerId;
  t1.nextManagerId = workerId + 1;
  t1 = $.get$IsolateNatives_workerIds();
  t1.$indexSet(t1, worker, workerId);
  t1 = $globalState.managers;
  t1.$indexSet(t1, workerId, worker);
  worker.postMessage(H._serializeMessage(H.fillLiteralMap(["command", "start", "id", workerId, "replyTo", H._serializeMessage(replyPort), "args", args, "msg", H._serializeMessage(message), "isSpawnUri", isSpawnUri, "functionName", functionName], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))));
},

_waitForPendingPorts: function(message, callback) {
  var finder = H._PendingSendPortFinder$();
  finder.traverse$1(message);
  P.Future_wait(finder.ports).then$1(new H._waitForPendingPorts_closure(callback));
},

_serializeMessage: function(message) {
  var t1;
  if ($globalState.supportsWorkers === true) {
    t1 = new H._JsSerializer(0, new H._MessageTraverserVisitedMap());
    t1._visited = new H._JsVisitedMap(null);
    return t1.traverse$1(message);
  } else {
    t1 = new H._JsCopier(new H._MessageTraverserVisitedMap());
    t1._visited = new H._JsVisitedMap(null);
    return t1.traverse$1(message);
  }
},

_deserializeMessage: function(message) {
  if ($globalState.supportsWorkers === true)
    return new H._JsDeserializer(null).deserialize$1(message);
  else
    return message;
},

_MessageTraverser_isPrimitive: function(x) {
  return x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean";
},

_Deserializer_isPrimitive: function(x) {
  return x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean";
},

startRootIsolate_closure: {"": "Closure;entry_0",
  call$0: function() {
    this.entry_0.call$1([]);
  }
},

startRootIsolate_closure0: {"": "Closure;entry_1",
  call$0: function() {
    this.entry_1.call$2([], null);
  }
},

_Manager: {"": "Object;nextIsolateId,currentManagerId,nextManagerId,currentContext,rootContext,topEventLoop,fromCommandLine,isWorker,supportsWorkers,isolates,mainManager,managers,entry",
  _nativeDetectEnvironment$0: function() {
    var t1, t2;
    t1 = $.get$globalWindow() == null;
    t2 = $.get$globalWorker();
    this.isWorker = t1 && $.get$globalPostMessageDefined() === true;
    if (this.isWorker !== true)
      t2 = t2 != null && $.get$IsolateNatives_thisScript() != null;
    else
      t2 = true;
    this.supportsWorkers = t2;
    this.fromCommandLine = t1 && this.isWorker !== true;
  },
  _nativeInitWorkerMessageHandler$0: function() {
    var $function = function (e) { H.IsolateNatives__processWorkerMessage$closure.call$2(this.mainManager, e); };
    $.get$globalThis().onmessage = $function;
    $.get$globalThis().dartPrint = function (object) {};
  },
  _Manager$1: function(entry) {
    this._nativeDetectEnvironment$0();
    this.topEventLoop = new H._EventLoop(P.ListQueue$(null, H._IsolateEvent), 0);
    this.isolates = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSInt, H._IsolateContext);
    this.managers = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSInt, null);
    if (this.isWorker === true) {
      this.mainManager = new H._MainManagerStub();
      this._nativeInitWorkerMessageHandler$0();
    }
  },
  static: {
_Manager$: function(entry) {
  var t1 = new H._Manager(0, 0, 1, null, null, null, null, null, null, null, null, null, entry);
  t1._Manager$1(entry);
  return t1;
}}

},

_IsolateContext: {"": "Object;id,ports,isolateStatics<",
  eval$1: function(code) {
    var old, result;
    old = $globalState.currentContext;
    $globalState.currentContext = this;
    $ = this.isolateStatics;
    result = null;
    try {
      result = code.call$0();
    } finally {
      $globalState.currentContext = old;
      if (old != null)
        $ = old.get$isolateStatics();
    }
    return result;
  },
  lookup$1: function(portId) {
    var t1 = this.ports;
    return t1.$index(t1, portId);
  },
  register$2: function(_, portId, port) {
    var t1;
    if (this.ports.containsKey$1(portId))
      throw H.wrapException(P.Exception_Exception("Registry: ports must be registered only once."));
    t1 = this.ports;
    t1.$indexSet(t1, portId, port);
    t1 = $globalState.isolates;
    t1.$indexSet(t1, this.id, this);
  },
  unregister$1: function(portId) {
    var t1 = this.ports;
    t1.remove$1(t1, portId);
    if (this.ports._collection$_length === 0) {
      t1 = $globalState.isolates;
      t1.remove$1(t1, this.id);
    }
  },
  _IsolateContext$0: function() {
    var t1, t2;
    t1 = $globalState;
    t2 = t1.nextIsolateId;
    t1.nextIsolateId = t2 + 1;
    this.id = t2;
    this.ports = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSInt, P.ReceivePort);
    this.isolateStatics = new Isolate();
  },
  static: {
_IsolateContext$: function() {
  var t1 = new H._IsolateContext(null, null, null);
  t1._IsolateContext$0();
  return t1;
}}

},

_EventLoop: {"": "Object;events,activeTimerCount",
  dequeue$0: function() {
    var t1 = this.events;
    if (t1._head === t1._tail)
      return;
    return t1.removeFirst$0();
  },
  checkOpenReceivePortsFromCommandLine$0: function() {
    if ($globalState.rootContext != null && $globalState.isolates.containsKey$1($globalState.rootContext.id) && $globalState.fromCommandLine === true && $globalState.rootContext.ports._collection$_length === 0)
      throw H.wrapException(P.Exception_Exception("Program exited with open ReceivePorts."));
  },
  runIteration$0: function() {
    var $event, t1, t2;
    $event = this.dequeue$0();
    if ($event == null) {
      this.checkOpenReceivePortsFromCommandLine$0();
      t1 = $globalState;
      if (t1.isWorker === true && t1.isolates._collection$_length === 0 && t1.topEventLoop.activeTimerCount === 0) {
        t1 = t1.mainManager;
        t2 = H._serializeMessage(H.fillLiteralMap(["command", "close"], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
        t1.toString;
        self.postMessage(t2);
      }
      return false;
    }
    $event.process$0();
    return true;
  },
  _runHelper$0: function() {
    if ($.get$globalWindow() != null)
      new H._EventLoop__runHelper_next(this).call$0();
    else
      for (; this.runIteration$0();)
        ;
  },
  run$0: function() {
    var e, trace, exception, t1, t2;
    if ($globalState.isWorker !== true)
      this._runHelper$0();
    else
      try {
        this._runHelper$0();
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        trace = new H._StackTrace(exception, null);
        t1 = $globalState.mainManager;
        t2 = H._serializeMessage(H.fillLiteralMap(["command", "error", "msg", H.S(e) + "\n" + H.S(trace)], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
        t1.toString;
        self.postMessage(t2);
      }

  }
},

_EventLoop__runHelper_next: {"": "Closure;this_0",
  call$0: function() {
    if (!this.this_0.runIteration$0())
      return;
    P.Timer_Timer(C.Duration_0, this);
  }
},

_IsolateEvent: {"": "Object;isolate,fn,message",
  process$0: function() {
    this.isolate.eval$1(this.fn);
  }
},

_MainManagerStub: {"": "Object;"},

IsolateNatives__processWorkerMessage_closure: {"": "Closure;entryPoint_0,args_1,message_2,isSpawnUri_3,replyTo_4",
  call$0: function() {
    H.IsolateNatives__startIsolate(this.entryPoint_0, this.args_1, this.message_2, this.isSpawnUri_3, this.replyTo_4);
  }
},

_BaseSendPort: {"": "Object;", $isSendPort: true},

_NativeJsSendPort: {"": "_BaseSendPort;_receivePort,_isolateId",
  send$1: function(message) {
    H._waitForPendingPorts(message, new H._NativeJsSendPort_send_closure(this, message));
  },
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    t1 = J.getInterceptor(other);
    return typeof other === "object" && other !== null && !!t1.$is_NativeJsSendPort && J.$eq(this._receivePort, other._receivePort);
  },
  get$hashCode: function(_) {
    return this._receivePort.get$_id();
  },
  $is_NativeJsSendPort: true,
  $isSendPort: true
},

_NativeJsSendPort_send_closure: {"": "Closure;this_1,message_2",
  call$0: function() {
    var t1, t2, t3, t4, isolate, shouldSerialize, msg;
    t1 = {};
    t2 = $globalState.isolates;
    t3 = this.this_1;
    t4 = t3._isolateId;
    isolate = t2.$index(t2, t4);
    if (isolate == null)
      return;
    if ((t3._receivePort.get$_controller()._state & 4) !== 0)
      return;
    shouldSerialize = $globalState.currentContext != null && $globalState.currentContext.id !== t4;
    msg = this.message_2;
    t1.msg_0 = msg;
    if (shouldSerialize)
      t1.msg_0 = H._serializeMessage(t1.msg_0);
    t2 = $globalState.topEventLoop;
    t4 = "receive " + H.S(msg);
    t2.events._add$1(new H._IsolateEvent(isolate, new H._NativeJsSendPort_send__closure(t1, t3, shouldSerialize), t4));
  }
},

_NativeJsSendPort_send__closure: {"": "Closure;box_0,this_3,shouldSerialize_4",
  call$0: function() {
    var t1, t2;
    t1 = this.this_3._receivePort;
    if ((t1.get$_controller()._state & 4) === 0) {
      if (this.shouldSerialize_4) {
        t2 = this.box_0;
        t2.msg_0 = H._deserializeMessage(t2.msg_0);
      }
      t1 = t1._controller;
      t2 = this.box_0.msg_0;
      if (t1._state >= 4)
        H.throwExpression(t1._badEventState$0());
      t1._async$_add$1(t2);
    }
  }
},

_WorkerSendPort: {"": "_BaseSendPort;_workerId,_receivePortId,_isolateId",
  send$1: function(message) {
    H._waitForPendingPorts(message, new H._WorkerSendPort_send_closure(this, message));
  },
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    t1 = J.getInterceptor(other);
    return typeof other === "object" && other !== null && !!t1.$is_WorkerSendPort && J.$eq(this._workerId, other._workerId) && J.$eq(this._isolateId, other._isolateId) && J.$eq(this._receivePortId, other._receivePortId);
  },
  get$hashCode: function(_) {
    var t1, t2, t3;
    t1 = this._workerId;
    if (typeof t1 !== "number")
      throw t1.$shl();
    t2 = this._isolateId;
    if (typeof t2 !== "number")
      throw t2.$shl();
    t3 = this._receivePortId;
    if (typeof t3 !== "number")
      throw H.iae(t3);
    return (t1 << 16 ^ t2 << 8 ^ t3) >>> 0;
  },
  $is_WorkerSendPort: true,
  $isSendPort: true
},

_WorkerSendPort_send_closure: {"": "Closure;this_0,message_1",
  call$0: function() {
    var t1, workerMessage, t2, manager;
    t1 = this.this_0;
    workerMessage = H._serializeMessage(H.fillLiteralMap(["command", "message", "port", t1, "msg", this.message_1], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
    if ($globalState.isWorker === true) {
      $globalState.mainManager.toString;
      self.postMessage(workerMessage);
    } else {
      t2 = $globalState.managers;
      manager = t2.$index(t2, t1._workerId);
      if (manager != null)
        manager.postMessage(workerMessage);
    }
  }
},

ReceivePortImpl: {"": "Stream;_id<,_controller<",
  listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
    var t1 = this._controller;
    t1.toString;
    t1 = new P._ControllerStream(t1);
    H.setRuntimeTypeInfo(t1, [null]);
    return t1.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError);
  },
  close$0: function(_) {
    var t1 = this._controller;
    if ((t1._state & 4) !== 0)
      return;
    t1.close$0(t1);
    $globalState.currentContext.unregister$1(this._id);
  },
  get$close: function(_receiver) {
    return new H.BoundClosure$i0(this, H.ReceivePortImpl.prototype.close$0, _receiver, "close$0");
  },
  ReceivePortImpl$0: function() {
    this._controller = P.StreamController_StreamController(this.get$close(this), null, null, null, true, null);
    var t1 = $globalState.currentContext;
    t1.register$2(t1, this._id, this);
  },
  static: {
"": "ReceivePortImpl__nextFreeId",
ReceivePortImpl$: function() {
  var t1 = $.ReceivePortImpl__nextFreeId;
  $.ReceivePortImpl__nextFreeId = t1 + 1;
  t1 = new H.ReceivePortImpl(t1, null);
  t1.ReceivePortImpl$0();
  return t1;
}}

},

_waitForPendingPorts_closure: {"": "Closure;callback_0",
  call$1: function(_) {
    return this.callback_0.call$0();
  },
  $is_args1: true
},

_PendingSendPortFinder: {"": "_MessageTraverser;ports,_visited",
  visitPrimitive$1: function(x) {
  },
  visitList$1: function(list) {
    var t1 = this._visited;
    if (t1.$index(t1, list) != null)
      return;
    t1 = this._visited;
    t1.$indexSet(t1, list, true);
    J.forEach$1$ax(list, this.get$_dispatch());
  },
  visitMap$1: function(map) {
    var t1 = this._visited;
    if (t1.$index(t1, map) != null)
      return;
    t1 = this._visited;
    t1.$indexSet(t1, map, true);
    t1 = map.get$values(map);
    t1.forEach$1(t1, this.get$_dispatch());
  },
  visitSendPort$1: function(port) {
  },
  _PendingSendPortFinder$0: function() {
    this._visited = new H._JsVisitedMap(null);
  },
  static: {
_PendingSendPortFinder$: function() {
  var t1 = new H._PendingSendPortFinder([], new H._MessageTraverserVisitedMap());
  t1._PendingSendPortFinder$0();
  return t1;
}}

},

_JsSerializer: {"": "_Serializer;_nextFreeRefId,_visited",
  visitSendPort$1: function(x) {
    if (!!x.$is_NativeJsSendPort)
      return ["sendport", $globalState.currentManagerId, x._isolateId, x._receivePort.get$_id()];
    if (!!x.$is_WorkerSendPort)
      return ["sendport", x._workerId, x._isolateId, x._receivePortId];
    throw H.wrapException("Illegal underlying port " + H.S(x));
  }
},

_JsCopier: {"": "_Copier;_visited",
  visitSendPort$1: function(x) {
    if (!!x.$is_NativeJsSendPort)
      return new H._NativeJsSendPort(x._receivePort, x._isolateId);
    if (!!x.$is_WorkerSendPort)
      return new H._WorkerSendPort(x._workerId, x._receivePortId, x._isolateId);
    throw H.wrapException("Illegal underlying port " + H.S(x));
  }
},

_JsDeserializer: {"": "_Deserializer;_deserialized",
  deserializeSendPort$1: function(list) {
    var t1, managerId, isolateId, receivePortId, isolate, receivePort;
    t1 = J.getInterceptor$asx(list);
    managerId = t1.$index(list, 1);
    isolateId = t1.$index(list, 2);
    receivePortId = t1.$index(list, 3);
    if (J.$eq(managerId, $globalState.currentManagerId)) {
      t1 = $globalState.isolates;
      isolate = t1.$index(t1, isolateId);
      if (isolate == null)
        return;
      receivePort = isolate.lookup$1(receivePortId);
      if (receivePort == null)
        return;
      return new H._NativeJsSendPort(receivePort, isolateId);
    } else
      return new H._WorkerSendPort(managerId, receivePortId, isolateId);
  }
},

_JsVisitedMap: {"": "Object;tagged",
  $index: function(_, object) {
    return object.__MessageTraverser__attached_info__;
  },
  $indexSet: function(_, object, info) {
    this.tagged.push(object);
    object.__MessageTraverser__attached_info__ = info;
  },
  reset$0: function(_) {
    this.tagged = P.List_List(null, null);
  },
  cleanup$0: function() {
    var $length, i, t1;
    for ($length = this.tagged.length, i = 0; i < $length; ++i) {
      t1 = this.tagged;
      if (i >= t1.length)
        throw H.ioore(t1, i);
      t1[i].__MessageTraverser__attached_info__ = null;
    }
    this.tagged = null;
  }
},

_MessageTraverserVisitedMap: {"": "Object;",
  $index: function(_, object) {
    return;
  },
  $indexSet: function(_, object, info) {
  },
  reset$0: function(_) {
  },
  cleanup$0: function() {
  }
},

_MessageTraverser: {"": "Object;",
  traverse$1: function(x) {
    var result, t1;
    if (H._MessageTraverser_isPrimitive(x))
      return this.visitPrimitive$1(x);
    t1 = this._visited;
    t1.reset$0(t1);
    result = null;
    try {
      result = this._dispatch$1(x);
    } finally {
      this._visited.cleanup$0();
    }
    return result;
  },
  _dispatch$1: function(x) {
    var t1;
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return this.visitPrimitive$1(x);
    t1 = J.getInterceptor(x);
    if (typeof x === "object" && x !== null && (x.constructor === Array || !!t1.$isList))
      return this.visitList$1(x);
    if (typeof x === "object" && x !== null && !!t1.$isMap)
      return this.visitMap$1(x);
    if (typeof x === "object" && x !== null && !!t1.$isSendPort)
      return this.visitSendPort$1(x);
    return this.visitObject$1(x);
  },
  get$_dispatch: function() {
    return new H.BoundClosure$1(this, H._MessageTraverser.prototype._dispatch$1, null, "_dispatch$1");
  },
  visitObject$1: function(x) {
    throw H.wrapException("Message serialization: Illegal value " + H.S(x) + " passed");
  }
},

_Copier: {"": "_MessageTraverser;",
  visitPrimitive$1: function(x) {
    return x;
  },
  visitList$1: function(list) {
    var t1, copy, len, t2, i;
    t1 = this._visited;
    copy = t1.$index(t1, list);
    if (copy != null)
      return copy;
    t1 = J.getInterceptor$asx(list);
    len = t1.get$length(list);
    copy = P.List_List(len, null);
    t2 = this._visited;
    t2.$indexSet(t2, list, copy);
    for (i = 0; i < len; ++i) {
      t2 = this._dispatch$1(t1.$index(list, i));
      if (i >= len)
        throw H.ioore(copy, i);
      copy[i] = t2;
    }
    return copy;
  },
  visitMap$1: function(map) {
    var t1, t2;
    t1 = {};
    t2 = this._visited;
    t1.copy_0 = t2.$index(t2, map);
    t2 = t1.copy_0;
    if (t2 != null)
      return t2;
    t1.copy_0 = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
    t2 = this._visited;
    t2.$indexSet(t2, map, t1.copy_0);
    map.forEach$1(map, new H._Copier_visitMap_closure(t1, this));
    return t1.copy_0;
  }
},

_Copier_visitMap_closure: {"": "Closure;box_0,this_1",
  call$2: function(key, val) {
    var t1 = this.this_1;
    J.$indexSet$ax(this.box_0.copy_0, t1._dispatch$1(key), t1._dispatch$1(val));
  },
  $is_args2: true
},

_Serializer: {"": "_MessageTraverser;",
  visitPrimitive$1: function(x) {
    return x;
  },
  visitList$1: function(list) {
    var t1, copyId, id;
    t1 = this._visited;
    copyId = t1.$index(t1, list);
    if (copyId != null)
      return ["ref", copyId];
    id = this._nextFreeRefId;
    this._nextFreeRefId = id + 1;
    t1 = this._visited;
    t1.$indexSet(t1, list, id);
    return ["list", id, this._serializeList$1(list)];
  },
  visitMap$1: function(map) {
    var t1, copyId, id, keys;
    t1 = this._visited;
    copyId = t1.$index(t1, map);
    if (copyId != null)
      return ["ref", copyId];
    id = this._nextFreeRefId;
    this._nextFreeRefId = id + 1;
    t1 = this._visited;
    t1.$indexSet(t1, map, id);
    t1 = map.get$keys();
    keys = this._serializeList$1(P.List_List$from(t1, true, H.getRuntimeTypeArgument(t1, "IterableBase", 0)));
    t1 = map.get$values(map);
    return ["map", id, keys, this._serializeList$1(P.List_List$from(t1, true, H.getRuntimeTypeArgument(t1, "IterableBase", 0)))];
  },
  _serializeList$1: function(list) {
    var t1, len, result, i, t2;
    t1 = J.getInterceptor$asx(list);
    len = t1.get$length(list);
    result = P.List_List(len, null);
    for (i = 0; i < len; ++i) {
      t2 = this._dispatch$1(t1.$index(list, i));
      if (i >= len)
        throw H.ioore(result, i);
      result[i] = t2;
    }
    return result;
  }
},

_Deserializer: {"": "Object;",
  deserialize$1: function(x) {
    if (H._Deserializer_isPrimitive(x))
      return x;
    this._deserialized = P.HashMap_HashMap(null, null, null, null, null);
    return this._deserializeHelper$1(x);
  },
  _deserializeHelper$1: function(x) {
    var t1, id;
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return x;
    t1 = J.getInterceptor$asx(x);
    switch (t1.$index(x, 0)) {
      case "ref":
        id = t1.$index(x, 1);
        t1 = this._deserialized;
        return t1.$index(t1, id);
      case "list":
        return this._deserializeList$1(x);
      case "map":
        return this._deserializeMap$1(x);
      case "sendport":
        return this.deserializeSendPort$1(x);
      default:
        return this.deserializeObject$1(x);
    }
  },
  _deserializeList$1: function(x) {
    var t1, id, dartList, len, i;
    t1 = J.getInterceptor$asx(x);
    id = t1.$index(x, 1);
    dartList = t1.$index(x, 2);
    t1 = this._deserialized;
    t1.$indexSet(t1, id, dartList);
    t1 = J.getInterceptor$asx(dartList);
    len = t1.get$length(dartList);
    if (typeof len !== "number")
      throw H.iae(len);
    i = 0;
    for (; i < len; ++i)
      t1.$indexSet(dartList, i, this._deserializeHelper$1(t1.$index(dartList, i)));
    return dartList;
  },
  _deserializeMap$1: function(x) {
    var result, t1, id, t2, keys, values, len, i;
    result = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
    t1 = J.getInterceptor$asx(x);
    id = t1.$index(x, 1);
    t2 = this._deserialized;
    t2.$indexSet(t2, id, result);
    keys = t1.$index(x, 2);
    values = t1.$index(x, 3);
    t1 = J.getInterceptor$asx(keys);
    len = t1.get$length(keys);
    if (typeof len !== "number")
      throw H.iae(len);
    t2 = J.getInterceptor$asx(values);
    i = 0;
    for (; i < len; ++i)
      result.$indexSet(result, this._deserializeHelper$1(t1.$index(keys, i)), this._deserializeHelper$1(t2.$index(values, i)));
    return result;
  },
  deserializeObject$1: function(x) {
    throw H.wrapException("Unexpected serialized object");
  }
},

TimerImpl: {"": "Object;_once,_inEventLoop,_handle",
  TimerImpl$2: function(milliseconds, callback) {
    var t1, t2;
    if (milliseconds === 0)
      t1 = $.get$globalThis().setTimeout == null || $globalState.isWorker === true;
    else
      t1 = false;
    if (t1) {
      this._handle = 1;
      t1 = $globalState.topEventLoop;
      t2 = $globalState.currentContext;
      t1.events._add$1(new H._IsolateEvent(t2, new H.TimerImpl_internalCallback(this, callback), "timer"));
      this._inEventLoop = true;
    } else if ($.get$globalThis().setTimeout != null) {
      t1 = $globalState.topEventLoop;
      t1.activeTimerCount = t1.activeTimerCount + 1;
      this._handle = $.get$globalThis().setTimeout(H.convertDartClosureToJS(new H.TimerImpl_internalCallback0(this, callback), 0), milliseconds);
    } else
      throw H.wrapException(P.UnsupportedError$("Timer greater than 0."));
  },
  static: {
TimerImpl$: function(milliseconds, callback) {
  var t1 = new H.TimerImpl(true, false, null);
  t1.TimerImpl$2(milliseconds, callback);
  return t1;
}}

},

TimerImpl_internalCallback: {"": "Closure;this_0,callback_1",
  call$0: function() {
    this.this_0._handle = null;
    this.callback_1.call$0();
  }
},

TimerImpl_internalCallback0: {"": "Closure;this_2,callback_3",
  call$0: function() {
    this.this_2._handle = null;
    var t1 = $globalState.topEventLoop;
    t1.activeTimerCount = t1.activeTimerCount - 1;
    this.callback_3.call$0();
  }
}}],
["_js_helper", "dart:_js_helper", , H, {
isJsIndexable: function(object, record) {
  var result, t1;
  if (record != null) {
    result = record.x;
    if (result != null)
      return result;
  }
  t1 = J.getInterceptor(object);
  return typeof object === "object" && object !== null && !!t1.$isJavaScriptIndexingBehavior;
},

S: function(value) {
  var res;
  if (typeof value === "string")
    return value;
  if (typeof value === "number") {
    if (value !== 0)
      return "" + value;
  } else if (true === value)
    return "true";
  else if (false === value)
    return "false";
  else if (value == null)
    return "null";
  res = J.toString$0(value);
  if (typeof res !== "string")
    throw H.wrapException(P.ArgumentError$(value));
  return res;
},

Primitives_initializeStatics: function(id) {
  $.Primitives_mirrorFunctionCacheName = $.Primitives_mirrorFunctionCacheName + ("_" + H.S(id));
  $.Primitives_mirrorInvokeCacheName = $.Primitives_mirrorInvokeCacheName + ("_" + H.S(id));
},

Primitives_objectHashCode: function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = Math.random() * 0x3fffffff | 0;
    object.$identityHash = hash;
  }
  return hash;
},

Primitives_objectTypeName: function(object) {
  var $name, decompiled;
  $name = C.JS_CONST_86y(J.getInterceptor(object));
  if ($name === "Object") {
    decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === "string")
      $name = decompiled;
  }
  if (J.getInterceptor$s($name).codeUnitAt$1($name, 0) === 36)
    $name = C.JSString_methods.substring$1($name, 1);
  return $name + H.joinArguments(H.getRuntimeTypeInfo(object), 0, null);
},

Primitives_objectToString: function(object) {
  return "Instance of '" + H.Primitives_objectTypeName(object) + "'";
},

Primitives_newFixedList: function($length) {
  var result = new Array($length);
  result.fixed$length = true;
  return result;
},

Primitives__fromCharCodeApply: function(array) {
  var end, t1, result, i, subarray, t2;
  end = array.length;
  for (t1 = end <= 500, result = "", i = 0; i < end; i += 500) {
    if (t1)
      subarray = array;
    else {
      t2 = i + 500;
      t2 = t2 < end ? t2 : end;
      subarray = array.slice(i, t2);
    }
    result += String.fromCharCode.apply(null, subarray);
  }
  return result;
},

Primitives_stringFromCodePoints: function(codePoints) {
  var a, t1, i;
  a = [];
  a.$builtinTypeInfo = [J.JSInt];
  for (t1 = new H.ListIterator(codePoints, codePoints.length, 0, null); t1.moveNext$0();) {
    i = t1._current;
    if (typeof i !== "number" || Math.floor(i) !== i)
      throw H.wrapException(P.ArgumentError$(i));
    if (i <= 65535)
      a.push(i);
    else if (i <= 1114111) {
      a.push(55296 + (C.JSInt_methods.$shr(i - 65536, 10) & 1023));
      a.push(56320 + (i & 1023));
    } else
      throw H.wrapException(P.ArgumentError$(i));
  }
  return H.Primitives__fromCharCodeApply(a);
},

Primitives_stringFromCharCodes: function(charCodes) {
  var t1, i;
  for (t1 = new H.ListIterator(charCodes, charCodes.length, 0, null); t1.moveNext$0();) {
    i = t1._current;
    if (typeof i !== "number" || Math.floor(i) !== i)
      throw H.wrapException(P.ArgumentError$(i));
    if (i < 0)
      throw H.wrapException(P.ArgumentError$(i));
    if (i > 65535)
      return H.Primitives_stringFromCodePoints(charCodes);
  }
  return H.Primitives__fromCharCodeApply(charCodes);
},

Primitives_lazyAsJsDate: function(receiver) {
  if (receiver.date === void 0)
    receiver.date = new Date(receiver.millisecondsSinceEpoch);
  return receiver.date;
},

Primitives_getYear: function(receiver) {
  return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0 : H.Primitives_lazyAsJsDate(receiver).getFullYear() + 0;
},

Primitives_getMonth: function(receiver) {
  return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : H.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
},

Primitives_getDay: function(receiver) {
  return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0 : H.Primitives_lazyAsJsDate(receiver).getDate() + 0;
},

Primitives_getHours: function(receiver) {
  return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0 : H.Primitives_lazyAsJsDate(receiver).getHours() + 0;
},

Primitives_getMinutes: function(receiver) {
  return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0 : H.Primitives_lazyAsJsDate(receiver).getMinutes() + 0;
},

Primitives_getSeconds: function(receiver) {
  return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0 : H.Primitives_lazyAsJsDate(receiver).getSeconds() + 0;
},

Primitives_getMilliseconds: function(receiver) {
  return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0 : H.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0;
},

Primitives_getProperty: function(object, key) {
  if (object == null || typeof object === "boolean" || typeof object === "number" || typeof object === "string")
    throw H.wrapException(new P.ArgumentError(object));
  return object[key];
},

Primitives_setProperty: function(object, key, value) {
  if (object == null || typeof object === "boolean" || typeof object === "number" || typeof object === "string")
    throw H.wrapException(new P.ArgumentError(object));
  object[key] = value;
},

iae: function(argument) {
  throw H.wrapException(P.ArgumentError$(argument));
},

ioore: function(receiver, index) {
  if (receiver == null)
    J.get$length$asx(receiver);
  if (typeof index !== "number" || Math.floor(index) !== index)
    H.iae(index);
  throw H.wrapException(P.RangeError$value(index));
},

wrapException: function(ex) {
  var wrapper;
  if (ex == null)
    ex = new P.NullThrownError();
  wrapper = new Error();
  wrapper.dartException = ex;
  if ("defineProperty" in Object) {
    Object.defineProperty(wrapper, "message", { get: H.toStringWrapper$closure.call$0 });
    wrapper.name = "";
  } else
    wrapper.toString = H.toStringWrapper$closure.call$0;
  return wrapper;
},

toStringWrapper: function() {
  return J.toString$0(this.dartException);
},

throwExpression: function(ex) {
  throw H.wrapException(ex);
},

unwrapException: function(ex) {
  var t1, message, number, ieErrorCode, t2, t3, t4, nullLiteralCall, t5, t6, t7, t8, t9, match;
  t1 = new H.unwrapException_saveStackTrace(ex);
  if (ex == null)
    return;
  if (typeof ex !== "object")
    return ex;
  if ("dartException" in ex)
    return t1.call$1(ex.dartException);
  else if (!("message" in ex))
    return ex;
  message = ex.message;
  if ("number" in ex && typeof ex.number == "number") {
    number = ex.number;
    ieErrorCode = number & 65535;
    if ((C.JSInt_methods.$shr(number, 16) & 8191) === 10)
      switch (ieErrorCode) {
        case 438:
          return t1.call$1(H.JsNoSuchMethodError$(H.S(message) + " (Error " + ieErrorCode + ")", null));
        case 445:
        case 5007:
          t2 = H.S(message) + " (Error " + ieErrorCode + ")";
          return t1.call$1(new H.NullError(t2, null));
        default:
      }
  }
  if (ex instanceof TypeError) {
    t2 = $.get$TypeErrorDecoder_noSuchMethodPattern();
    t3 = $.get$TypeErrorDecoder_notClosurePattern();
    t4 = $.get$TypeErrorDecoder_nullCallPattern();
    nullLiteralCall = $.get$TypeErrorDecoder_nullLiteralCallPattern();
    t5 = $.get$TypeErrorDecoder_undefinedCallPattern();
    t6 = $.get$TypeErrorDecoder_undefinedLiteralCallPattern();
    t7 = $.get$TypeErrorDecoder_nullPropertyPattern();
    $.get$TypeErrorDecoder_nullLiteralPropertyPattern();
    t8 = $.get$TypeErrorDecoder_undefinedPropertyPattern();
    t9 = $.get$TypeErrorDecoder_undefinedLiteralPropertyPattern();
    match = t2.matchTypeError$1(message);
    if (match != null)
      return t1.call$1(H.JsNoSuchMethodError$(message, match));
    else {
      match = t3.matchTypeError$1(message);
      if (match != null) {
        match.method = "call";
        return t1.call$1(H.JsNoSuchMethodError$(message, match));
      } else {
        match = t4.matchTypeError$1(message);
        if (match == null) {
          match = nullLiteralCall.matchTypeError$1(message);
          if (match == null) {
            match = t5.matchTypeError$1(message);
            if (match == null) {
              match = t6.matchTypeError$1(message);
              if (match == null) {
                match = t7.matchTypeError$1(message);
                if (match == null) {
                  match = nullLiteralCall.matchTypeError$1(message);
                  if (match == null) {
                    match = t8.matchTypeError$1(message);
                    if (match == null) {
                      match = t9.matchTypeError$1(message);
                      t2 = match != null;
                    } else
                      t2 = true;
                  } else
                    t2 = true;
                } else
                  t2 = true;
              } else
                t2 = true;
            } else
              t2 = true;
          } else
            t2 = true;
        } else
          t2 = true;
        if (t2) {
          t2 = match == null ? null : match.method;
          return t1.call$1(new H.NullError(message, t2));
        }
      }
    }
    t2 = typeof message === "string" ? message : "";
    return t1.call$1(new H.UnknownJsTypeError(t2));
  }
  if (ex instanceof RangeError) {
    if (typeof message === "string" && message.indexOf("call stack") !== -1)
      return new P.StackOverflowError();
    return t1.call$1(new P.ArgumentError(null));
  }
  if (typeof InternalError == "function" && ex instanceof InternalError)
    if (typeof message === "string" && message === "too much recursion")
      return new P.StackOverflowError();
  return ex;
},

objectHashCode: function(object) {
  if (object == null || typeof object != 'object')
    return J.get$hashCode$(object);
  else
    return H.Primitives_objectHashCode(object);
},

fillLiteralMap: function(keyValuePairs, result) {
  var $length, index, index0, index1;
  $length = keyValuePairs.length;
  for (index = 0; index < $length; index = index1) {
    index0 = index + 1;
    index1 = index0 + 1;
    result.$indexSet(result, keyValuePairs[index], keyValuePairs[index0]);
  }
  return result;
},

invokeClosure: function(closure, isolate, numberOfArguments, arg1, arg2, arg3, arg4) {
  var t1 = J.getInterceptor(numberOfArguments);
  if (t1.$eq(numberOfArguments, 0))
    return H._callInIsolate(isolate, new H.invokeClosure_closure(closure));
  else if (t1.$eq(numberOfArguments, 1))
    return H._callInIsolate(isolate, new H.invokeClosure_closure0(closure, arg1));
  else if (t1.$eq(numberOfArguments, 2))
    return H._callInIsolate(isolate, new H.invokeClosure_closure1(closure, arg1, arg2));
  else if (t1.$eq(numberOfArguments, 3))
    return H._callInIsolate(isolate, new H.invokeClosure_closure2(closure, arg1, arg2, arg3));
  else if (t1.$eq(numberOfArguments, 4))
    return H._callInIsolate(isolate, new H.invokeClosure_closure3(closure, arg1, arg2, arg3, arg4));
  else
    throw H.wrapException(P.Exception_Exception("Unsupported number of arguments for wrapped closure"));
},

convertDartClosureToJS: function(closure, arity) {
  var $function;
  if (closure == null)
    return;
  $function = closure.$identity;
  if (!!$function)
    return $function;
  $function = (function(closure, arity, context, invoke) {  return function(a1, a2, a3, a4) {     return invoke(closure, context, arity, a1, a2, a3, a4);  };})(closure,arity,$globalState.currentContext,H.invokeClosure$closure.call$7);
  closure.$identity = $function;
  return $function;
},

propertyTypeCastError: function(value, property) {
  var t1 = J.getInterceptor$asx(property);
  throw H.wrapException(H.CastErrorImplementation$(H.Primitives_objectTypeName(value), t1.substring$2(property, 3, t1.get$length(property))));
},

interceptedTypeCast: function(value, property) {
  var t1;
  if (value != null)
    t1 = typeof value === "object" && J.getInterceptor(value)[property];
  else
    t1 = true;
  if (t1)
    return value;
  H.propertyTypeCastError(value, property);
},

throwCyclicInit: function(staticName) {
  throw H.wrapException(P.CyclicInitializationError$("Cyclic initialization for static " + H.S(staticName)));
},

createRuntimeType: function($name) {
  return new H.TypeImpl($name, null);
},

setRuntimeTypeInfo: function(target, typeInfo) {
  if (target != null)
    target.$builtinTypeInfo = typeInfo;
  return target;
},

getRuntimeTypeInfo: function(target) {
  if (target == null)
    return;
  return target.$builtinTypeInfo;
},

getRuntimeTypeArguments: function(target, substitutionName) {
  return H.substitute(target["$as" + H.S(substitutionName)], H.getRuntimeTypeInfo(target));
},

getRuntimeTypeArgument: function(target, substitutionName, index) {
  var $arguments = H.getRuntimeTypeArguments(target, substitutionName);
  return $arguments == null ? null : $arguments[index];
},

getRuntimeTypeAsString: function(runtimeType, onTypeVariable) {
  return runtimeType[0].builtin$cls + H.joinArguments(runtimeType, 1, onTypeVariable);
},

runtimeTypeToString: function(type, onTypeVariable) {
  if (type == null)
    return "dynamic";
  else if (typeof type === "object" && type !== null && type.constructor === Array)
    return H.getRuntimeTypeAsString(type, onTypeVariable);
  else if (typeof type == "function")
    return type.builtin$cls;
  else if (typeof type === "number" && Math.floor(type) === type)
    return C.JSInt_methods.toString$0(type);
  else
    return;
},

joinArguments: function(types, startIndex, onTypeVariable) {
  var buffer, index, firstArgument, allDynamic, argument, str;
  if (types == null)
    return "";
  buffer = P.StringBuffer$("");
  for (index = startIndex, firstArgument = true, allDynamic = true; index < types.length; ++index) {
    if (firstArgument)
      firstArgument = false;
    else
      buffer._contents = buffer._contents + ", ";
    argument = types[index];
    if (argument != null)
      allDynamic = false;
    str = H.runtimeTypeToString(argument, onTypeVariable);
    str = typeof str === "string" ? str : H.S(str);
    buffer._contents = buffer._contents + str;
  }
  return allDynamic ? "" : "<" + H.S(buffer) + ">";
},

substitute: function(substitution, $arguments) {
  if (typeof substitution === "object" && substitution !== null && substitution.constructor === Array)
    $arguments = substitution;
  else if (typeof substitution == "function") {
    substitution = H.invokeOn(substitution, null, $arguments);
    if (typeof substitution === "object" && substitution !== null && substitution.constructor === Array)
      $arguments = substitution;
    else if (typeof substitution == "function")
      $arguments = H.invokeOn(substitution, null, $arguments);
  }
  return $arguments;
},

computeSignature: function(signature, context, contextName) {
  return H.invokeOn(signature, context, H.getRuntimeTypeArguments(context, contextName));
},

invokeOn: function($function, receiver, $arguments) {
  return $function.apply(receiver, $arguments);
},

toStringForNativeObject: function(obj) {
  var t1 = $.getTagFunction;
  return "Instance of " + (t1 == null ? "<Unknown>" : t1.call$1(obj));
},

hashCodeForNativeObject: function(object) {
  return H.Primitives_objectHashCode(object);
},

defineProperty: function(obj, property, value) {
  Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
},

lookupAndCacheInterceptor: function(obj) {
  var tag, record, interceptor, interceptorClass, mark, t1;
  tag = $.getTagFunction.call$1(obj);
  record = $.dispatchRecordsForInstanceTags[tag];
  if (record != null) {
    Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
    return record.i;
  }
  interceptor = $.interceptorsForUncacheableTags[tag];
  if (interceptor != null)
    return interceptor;
  interceptorClass = init.interceptorsByTag[tag];
  if (interceptorClass == null) {
    tag = $.alternateTagFunction.call$2(obj, tag);
    if (tag != null) {
      record = $.dispatchRecordsForInstanceTags[tag];
      if (record != null) {
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      interceptor = $.interceptorsForUncacheableTags[tag];
      if (interceptor != null)
        return interceptor;
      interceptorClass = init.interceptorsByTag[tag];
    }
  }
  if (interceptorClass == null)
    return;
  interceptor = interceptorClass.prototype;
  mark = tag[0];
  if (mark === "!") {
    record = H.makeLeafDispatchRecord(interceptor);
    $.dispatchRecordsForInstanceTags[tag] = record;
    Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
    return record.i;
  }
  if (mark === "~") {
    $.interceptorsForUncacheableTags[tag] = interceptor;
    return interceptor;
  }
  if (mark === "-") {
    t1 = H.makeLeafDispatchRecord(interceptor);
    Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
    return t1.i;
  }
  if (mark === "+")
    return H.patchInteriorProto(obj, interceptor);
  if (mark === "*")
    throw H.wrapException(P.UnimplementedError$(tag));
  if (init.leafTags[tag] === true) {
    t1 = H.makeLeafDispatchRecord(interceptor);
    Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
    return t1.i;
  } else
    return H.patchInteriorProto(obj, interceptor);
},

patchInteriorProto: function(obj, interceptor) {
  var proto, record;
  proto = Object.getPrototypeOf(obj);
  record = J.makeDispatchRecord(interceptor, proto, null, null);
  Object.defineProperty(proto, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
  return interceptor;
},

makeLeafDispatchRecord: function(interceptor) {
  return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
},

makeDefaultDispatchRecord: function(tag, interceptorClass, proto) {
  var interceptor = interceptorClass.prototype;
  if (init.leafTags[tag] === true)
    return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
  else
    return J.makeDispatchRecord(interceptor, proto, null, null);
},

initNativeDispatch: function() {
  if (true === $.initNativeDispatchFlag)
    return;
  $.initNativeDispatchFlag = true;
  H.initNativeDispatchContinue();
},

initNativeDispatchContinue: function() {
  var map, tags, i, tag, proto, record, interceptorClass;
  $.dispatchRecordsForInstanceTags = Object.create(null);
  $.interceptorsForUncacheableTags = Object.create(null);
  H.initHooks();
  map = init.interceptorsByTag;
  tags = Object.getOwnPropertyNames(map);
  if (typeof window != "undefined") {
    window;
    for (i = 0; i < tags.length; ++i) {
      tag = tags[i];
      proto = $.prototypeForTagFunction.call$1(tag);
      if (proto != null) {
        record = H.makeDefaultDispatchRecord(tag, map[tag], proto);
        if (record != null)
          Object.defineProperty(proto, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
      }
    }
  }
  for (i = 0; i < tags.length; ++i) {
    tag = tags[i];
    if (/^[A-Za-z_]/.test(tag)) {
      interceptorClass = map[tag];
      map["!" + tag] = interceptorClass;
      map["~" + tag] = interceptorClass;
      map["-" + tag] = interceptorClass;
      map["+" + tag] = interceptorClass;
      map["*" + tag] = interceptorClass;
    }
  }
},

initHooks: function() {
  var hooks, transformers, i, transformer, getTag, getUnknownTag, prototypeForTag;
  hooks = C.JS_CONST_TtD();
  hooks = H.applyHooksTransformer(C.JS_CONST_0, H.applyHooksTransformer(C.JS_CONST_Fs4, H.applyHooksTransformer(C.JS_CONST_Fs4, H.applyHooksTransformer(C.JS_CONST_rD3, H.applyHooksTransformer(C.JS_CONST_6qb, H.applyHooksTransformer(C.JS_CONST_Cbr(C.JS_CONST_86y), hooks))))));
  if (typeof dartNativeDispatchHooksTransformer != "undefined") {
    transformers = dartNativeDispatchHooksTransformer;
    if (typeof transformers == "function")
      transformers = [transformers];
    if (transformers.constructor == Array)
      for (i = 0; i < transformers.length; ++i) {
        transformer = transformers[i];
        if (typeof transformer == "function")
          hooks = transformer(hooks) || hooks;
      }
  }
  getTag = hooks.getTag;
  getUnknownTag = hooks.getUnknownTag;
  prototypeForTag = hooks.prototypeForTag;
  $.getTagFunction = new H.initHooks_closure(getTag);
  $.alternateTagFunction = new H.initHooks_closure0(getUnknownTag);
  $.prototypeForTagFunction = new H.initHooks_closure1(prototypeForTag);
},

applyHooksTransformer: function(transformer, hooks) {
  return transformer(hooks) || hooks;
},

TypeErrorDecoder: {"": "Object;_pattern,_arguments,_argumentsExpr,_expr,_method,_receiver",
  matchTypeError$1: function(message) {
    var match, result, t1;
    match = new RegExp(this._pattern).exec(message);
    if (match == null)
      return;
    result = {};
    t1 = this._arguments;
    if (t1 !== -1)
      result.arguments = match[t1 + 1];
    t1 = this._argumentsExpr;
    if (t1 !== -1)
      result.argumentsExpr = match[t1 + 1];
    t1 = this._expr;
    if (t1 !== -1)
      result.expr = match[t1 + 1];
    t1 = this._method;
    if (t1 !== -1)
      result.method = match[t1 + 1];
    t1 = this._receiver;
    if (t1 !== -1)
      result.receiver = match[t1 + 1];
    return result;
  },
  static: {
"": "TypeErrorDecoder_noSuchMethodPattern,TypeErrorDecoder_notClosurePattern,TypeErrorDecoder_nullCallPattern,TypeErrorDecoder_nullLiteralCallPattern,TypeErrorDecoder_undefinedCallPattern,TypeErrorDecoder_undefinedLiteralCallPattern,TypeErrorDecoder_nullPropertyPattern,TypeErrorDecoder_nullLiteralPropertyPattern,TypeErrorDecoder_undefinedPropertyPattern,TypeErrorDecoder_undefinedLiteralPropertyPattern",
TypeErrorDecoder_extractPattern: function(message) {
  var match, $arguments, argumentsExpr, expr, method, receiver;
  message = message.replace(String({}), '$receiver$').replace(new RegExp("[[\\]{}()*+?.\\\\^$|]", 'g'), '\\$&');
  match = message.match(/\\\$[a-zA-Z]+\\\$/g);
  if (match == null)
    match = [];
  $arguments = match.indexOf("\\$arguments\\$");
  argumentsExpr = match.indexOf("\\$argumentsExpr\\$");
  expr = match.indexOf("\\$expr\\$");
  method = match.indexOf("\\$method\\$");
  receiver = match.indexOf("\\$receiver\\$");
  return new H.TypeErrorDecoder(message.replace('\\$arguments\\$', '((?:x|[^x])*)').replace('\\$argumentsExpr\\$', '((?:x|[^x])*)').replace('\\$expr\\$', '((?:x|[^x])*)').replace('\\$method\\$', '((?:x|[^x])*)').replace('\\$receiver\\$', '((?:x|[^x])*)'), $arguments, argumentsExpr, expr, method, receiver);
},

TypeErrorDecoder_provokeCallErrorOn: function(expression) {
  return function($expr$) {
  var $argumentsExpr$ = '$arguments$'
  try {
    $expr$.$method$($argumentsExpr$);
  } catch (e) {
    return e.message;
  }
}(expression);
},

TypeErrorDecoder_provokeCallErrorOnNull: function() {
  return function() {
  var $argumentsExpr$ = '$arguments$'
  try {
    null.$method$($argumentsExpr$);
  } catch (e) {
    return e.message;
  }
}();
},

TypeErrorDecoder_provokeCallErrorOnUndefined: function() {
  return function() {
  var $argumentsExpr$ = '$arguments$'
  try {
    (void 0).$method$($argumentsExpr$);
  } catch (e) {
    return e.message;
  }
}();
},

TypeErrorDecoder_provokePropertyErrorOn: function(expression) {
  return function($expr$) {
  try {
    $expr$.$method$;
  } catch (e) {
    return e.message;
  }
}(expression);
},

TypeErrorDecoder_provokePropertyErrorOnNull: function() {
  return function() {
  try {
    null.$method$;
  } catch (e) {
    return e.message;
  }
}();
},

TypeErrorDecoder_provokePropertyErrorOnUndefined: function() {
  return function() {
  try {
    (void 0).$method$;
  } catch (e) {
    return e.message;
  }
}();
}}

},

NullError: {"": "Error;_message,_method",
  toString$0: function(_) {
    var t1 = this._method;
    if (t1 == null)
      return "NullError: " + H.S(this._message);
    return "NullError: Cannot call \"" + H.S(t1) + "\" on null";
  },
  $isError: true
},

JsNoSuchMethodError: {"": "Error;_message,_method,_receiver",
  toString$0: function(_) {
    var t1, t2;
    t1 = this._method;
    if (t1 == null)
      return "NoSuchMethodError: " + H.S(this._message);
    t2 = this._receiver;
    if (t2 == null)
      return "NoSuchMethodError: Cannot call \"" + t1 + "\" (" + H.S(this._message) + ")";
    return "NoSuchMethodError: Cannot call \"" + t1 + "\" on \"" + t2 + "\" (" + H.S(this._message) + ")";
  },
  $isError: true,
  static: {
JsNoSuchMethodError$: function(_message, match) {
  var t1, t2;
  t1 = match == null;
  t2 = t1 ? null : match.method;
  t1 = t1 ? null : match.receiver;
  return new H.JsNoSuchMethodError(_message, t2, t1);
}}

},

UnknownJsTypeError: {"": "Error;_message",
  toString$0: function(_) {
    var t1 = this._message;
    return C.JSString_methods.get$isEmpty(t1) ? "Error" : "Error: " + t1;
  }
},

unwrapException_saveStackTrace: {"": "Closure;ex_0",
  call$1: function(error) {
    var t1 = J.getInterceptor(error);
    if (typeof error === "object" && error !== null && !!t1.$isError)
      if (error.$thrownJsError == null)
        error.$thrownJsError = this.ex_0;
    return error;
  },
  $is_args1: true
},

_StackTrace: {"": "Object;_exception,_trace",
  toString$0: function(_) {
    var t1, trace;
    t1 = this._trace;
    if (t1 != null)
      return t1;
    t1 = this._exception;
    trace = typeof t1 === "object" ? t1.stack : null;
    t1 = trace == null ? "" : trace;
    this._trace = t1;
    return t1;
  }
},

invokeClosure_closure: {"": "Closure;closure_0",
  call$0: function() {
    return this.closure_0.call$0();
  }
},

invokeClosure_closure0: {"": "Closure;closure_1,arg1_2",
  call$0: function() {
    return this.closure_1.call$1(this.arg1_2);
  }
},

invokeClosure_closure1: {"": "Closure;closure_3,arg1_4,arg2_5",
  call$0: function() {
    return this.closure_3.call$2(this.arg1_4, this.arg2_5);
  }
},

invokeClosure_closure2: {"": "Closure;closure_6,arg1_7,arg2_8,arg3_9",
  call$0: function() {
    return this.closure_6.call$3(this.arg1_7, this.arg2_8, this.arg3_9);
  }
},

invokeClosure_closure3: {"": "Closure;closure_10,arg1_11,arg2_12,arg3_13,arg4_14",
  call$0: function() {
    return this.closure_10.call$4(this.arg1_11, this.arg2_12, this.arg3_13, this.arg4_14);
  }
},

Closure: {"": "Object;",
  toString$0: function(_) {
    return "Closure";
  }
},

BoundClosure: {"": "Closure;_self,_target,_receiver,__js_helper$_name",
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    if (this === other)
      return true;
    t1 = J.getInterceptor(other);
    if (typeof other !== "object" || other === null || !t1.$isBoundClosure)
      return false;
    return this._self === other._self && this._target === other._target && this._receiver === other._receiver;
  },
  get$hashCode: function(_) {
    var t1, receiverHashCode;
    t1 = this._receiver;
    if (t1 == null)
      receiverHashCode = H.Primitives_objectHashCode(this._self);
    else
      receiverHashCode = typeof t1 !== "object" ? J.get$hashCode$(t1) : H.Primitives_objectHashCode(t1);
    return (receiverHashCode ^ H.Primitives_objectHashCode(this._target)) >>> 0;
  },
  $isBoundClosure: true
},

CastErrorImplementation: {"": "Error;message",
  toString$0: function(_) {
    return this.message;
  },
  $isError: true,
  static: {
CastErrorImplementation$: function(actualType, expectedType) {
  return new H.CastErrorImplementation("CastError: Casting value of type " + actualType + " to incompatible type " + H.S(expectedType));
}}

},

TypeImpl: {"": "Object;_typeName,_unmangledName",
  toString$0: function(_) {
    var t1, unmangledName, unmangledName0;
    t1 = this._unmangledName;
    if (t1 != null)
      return t1;
    unmangledName = this._typeName;
    unmangledName0 = H.unmangleGlobalNameIfPreservedAnyways(unmangledName);
    unmangledName = unmangledName0 == null ? unmangledName : unmangledName0;
    this._unmangledName = unmangledName;
    return unmangledName;
  },
  get$hashCode: function(_) {
    return J.get$hashCode$(this._typeName);
  },
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    t1 = J.getInterceptor(other);
    return typeof other === "object" && other !== null && !!t1.$isTypeImpl && J.$eq(this._typeName, other._typeName);
  },
  $isTypeImpl: true
},

initHooks_closure: {"": "Closure;getTag_0",
  call$1: function(o) {
    return this.getTag_0(o);
  },
  $is_args1: true
},

initHooks_closure0: {"": "Closure;getUnknownTag_1",
  call$2: function(o, tag) {
    return this.getUnknownTag_1(o, tag);
  },
  $is_args2: true
},

initHooks_closure1: {"": "Closure;prototypeForTag_2",
  call$1: function(tag) {
    return this.prototypeForTag_2(tag);
  },
  $is_args1: true
}}],
["dart._collection.dev", "dart:_collection-dev", , H, {
Arrays_copy: function(src, srcStart, dst, dstStart, count) {
  var i, j, t1;
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1; i >= srcStart; --i, --j) {
      if (i < 0 || i >= src.length)
        throw H.ioore(src, i);
      C.JSArray_methods.$indexSet(dst, j, src[i]);
    }
  else
    for (t1 = srcStart + count, j = dstStart, i = srcStart; i < t1; ++i, ++j) {
      if (i < 0 || i >= src.length)
        throw H.ioore(src, i);
      C.JSArray_methods.$indexSet(dst, j, src[i]);
    }
},

IterableMixinWorkaround_forEach: function(iterable, f) {
  var t1;
  for (t1 = new H.ListIterator(iterable, iterable.length, 0, null); t1.moveNext$0();)
    f.call$1(t1._current);
},

IterableMixinWorkaround_toStringIterable: function(iterable, leftDelimiter, rightDelimiter) {
  var result, i, t1;
  for (i = 0; i < $.get$IterableMixinWorkaround__toStringList().length; ++i) {
    t1 = $.get$IterableMixinWorkaround__toStringList();
    if (i >= t1.length)
      throw H.ioore(t1, i);
    if (t1[i] === iterable)
      return H.S(leftDelimiter) + "..." + H.S(rightDelimiter);
  }
  result = P.StringBuffer$("");
  try {
    $.get$IterableMixinWorkaround__toStringList().push(iterable);
    result.write$1(leftDelimiter);
    result.writeAll$2(iterable, ", ");
    result.write$1(rightDelimiter);
  } finally {
    t1 = $.get$IterableMixinWorkaround__toStringList();
    if (0 >= t1.length)
      throw H.ioore(t1, 0);
    t1.pop();
  }
  return result.get$_contents();
},

IterableMixinWorkaround__rangeCheck: function(list, start, end) {
  if (start < 0 || start > list.length)
    throw H.wrapException(P.RangeError$range(start, 0, list.length));
  if (end < start || end > list.length)
    throw H.wrapException(P.RangeError$range(end, start, list.length));
},

IterableMixinWorkaround_setRangeList: function(list, start, end, from, skipCount) {
  var $length;
  H.IterableMixinWorkaround__rangeCheck(list, start, end);
  $length = end - start;
  if ($length === 0)
    return;
  if (skipCount < 0)
    throw H.wrapException(new P.ArgumentError(skipCount));
  if (skipCount + $length > from.length)
    throw H.wrapException(P.StateError$("Not enough elements"));
  H.Arrays_copy(from, skipCount, list, start, $length);
},

printToConsole: function(line) {
  if (typeof dartPrint == "function") {
    dartPrint(line);
    return;
  }
  if (typeof console == "object" && typeof console.log == "function") {
    console.log(line);
    return;
  }
  if (typeof window == "object")
    return;
  if (typeof print == "function") {
    print(line);
    return;
  }
  throw "Unable to print message: " + String(line);
},

Symbol_getName: function(symbol) {
  return symbol.get$_name();
},

ListIterator: {"": "Object;_iterable,_length,_index,_current",
  get$current: function() {
    return this._current;
  },
  moveNext$0: function() {
    var t1, t2, $length, t3;
    t1 = this._iterable;
    t2 = J.getInterceptor$asx(t1);
    $length = t2.get$length(t1);
    if (this._length !== $length)
      throw H.wrapException(P.ConcurrentModificationError$(t1));
    t3 = this._index;
    if (t3 >= $length) {
      this._current = null;
      return false;
    }
    this._current = t2.elementAt$1(t1, t3);
    this._index = this._index + 1;
    return true;
  }
},

MappedIterable: {"": "IterableBase;_iterable,_f",
  get$iterator: function(_) {
    var t1 = this._iterable;
    t1 = t1.get$iterator(t1);
    t1 = new H.MappedIterator(null, t1, this._f);
    H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(this, "MappedIterable", 0), H.getRuntimeTypeArgument(this, "MappedIterable", 1)]);
    return t1;
  },
  get$length: function(_) {
    var t1 = this._iterable;
    return t1.get$length(t1);
  },
  $asIterableBase: function($S, $T) {
    return [$T];
  },
  static: {
MappedIterable_MappedIterable: function(iterable, $function, $S, $T) {
  var t1;
  if (!!iterable.$isEfficientLength) {
    t1 = new H.EfficientLengthMappedIterable(iterable, $function);
    H.setRuntimeTypeInfo(t1, [$S, $T]);
    return t1;
  }
  t1 = new H.MappedIterable(iterable, $function);
  H.setRuntimeTypeInfo(t1, [$S, $T]);
  return t1;
}}

},

EfficientLengthMappedIterable: {"": "MappedIterable;_iterable,_f", $asMappedIterable: null, $isEfficientLength: true},

MappedIterator: {"": "Iterator;_current,_iterator,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  moveNext$0: function() {
    var t1 = this._iterator;
    if (t1.moveNext$0()) {
      this._current = this._f$1(t1.get$current());
      return true;
    }
    this._current = null;
    return false;
  },
  get$current: function() {
    return this._current;
  },
  $asIterator: function($S, $T) {
    return [$T];
  }
},

FixedLengthListMixin: {"": "Object;"}}],
["dart._js_names", "dart:_js_names", , H, {
unmangleGlobalNameIfPreservedAnyways: function($name) {
  return init.mangledGlobalNames[$name];
}}],
["dart.async", "dart:async", , P, {
_invokeErrorHandler: function(errorHandler, error, stackTrace) {
  var t1 = J.getInterceptor(errorHandler);
  if (!!t1.$is_args2)
    return errorHandler.call$2(error, stackTrace);
  else
    return errorHandler.call$1(error);
},

_registerErrorHandler: function(errorHandler, zone) {
  var t1 = J.getInterceptor(errorHandler);
  zone.toString;
  if (!!t1.$is_args2)
    return errorHandler;
  else
    return errorHandler;
},

Future_Future: function(computation, $T) {
  var result = P._Future$($T);
  P.Timer_Timer(C.Duration_0, new P.Future_Future_closure(computation, result));
  return result;
},

Future_wait: function(futures) {
  var t1, t2, t3, future, pos, t4, t5, result, completer;
  t1 = {};
  t1.completer_0 = null;
  t1.values_1 = null;
  t2 = new P.Future_wait_handleError(t1);
  t1.remaining_2 = 0;
  for (t3 = new H.ListIterator(futures, futures.length, 0, null); t3.moveNext$0();) {
    future = t3._current;
    pos = t1.remaining_2;
    t1.remaining_2 = pos + 1;
    t4 = future.catchError$1(t2);
    t5 = $.Zone__current;
    t5.toString;
    result = new P._Future(0, t5, null, null, new P.Future_wait_closure(t1, pos), null, P._registerErrorHandler(null, t5), null);
    result.$builtinTypeInfo = [null];
    t4._addListener$1(result);
  }
  t2 = t1.remaining_2;
  if (t2 === 0)
    return P._Future$immediate(C.List_empty, null);
  t1.values_1 = P.List_List(t2, null);
  t2 = J.JSArray;
  completer = new P._AsyncCompleter(P._Future$(t2));
  H.setRuntimeTypeInfo(completer, [t2]);
  t1.completer_0 = completer;
  return t1.completer_0.future;
},

_asyncRunCallback: function() {
  var callback, t1, exception, milliseconds;
  for (; t1 = $.get$_asyncCallbacks(), t1._head !== t1._tail;) {
    callback = $.get$_asyncCallbacks().removeFirst$0();
    try {
      callback.call$0();
    } catch (exception) {
      H.unwrapException(exception);
      milliseconds = C.JSNumber_methods.$tdiv(C.Duration_0._duration, 1000);
      H.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, P._asyncRunCallback$closure);
      throw exception;
    }

  }
  $._callbacksAreEnqueued = false;
},

_scheduleAsyncCallback: function(callback) {
  $.get$_asyncCallbacks()._add$1(callback);
  if (!$._callbacksAreEnqueued) {
    P._createTimer(C.Duration_0, P._asyncRunCallback$closure);
    $._callbacksAreEnqueued = true;
  }
},

scheduleMicrotask: function(callback) {
  var t1 = $.Zone__current;
  if (t1 === C.C__RootZone) {
    t1.toString;
    P._scheduleAsyncCallback(callback);
    return;
  }
  P._scheduleAsyncCallback(t1.bindCallback$2$runGuarded(callback, true));
},

StreamController_StreamController: function(onCancel, onListen, onPause, onResume, sync, $T) {
  var t1;
  if (sync) {
    t1 = new P._SyncStreamController(onListen, onPause, onResume, onCancel, null, 0, null);
    H.setRuntimeTypeInfo(t1, [$T]);
  } else {
    t1 = new P._AsyncStreamController(onListen, onPause, onResume, onCancel, null, 0, null);
    H.setRuntimeTypeInfo(t1, [$T]);
  }
  return t1;
},

_runGuarded: function(notificationHandler) {
  var result, e, s, t1, t2, exception;
  if (notificationHandler == null)
    return;
  try {
    result = notificationHandler.call$0();
    t1 = result;
    t2 = J.getInterceptor(t1);
    if (typeof t1 === "object" && t1 !== null && !!t2.$isFuture)
      return result;
    return;
  } catch (exception) {
    t1 = H.unwrapException(exception);
    e = t1;
    s = new H._StackTrace(exception, null);
    t1 = $.Zone__current;
    t1.toString;
    P._rootHandleUncaughtError(t1, null, t1, e, s);
  }

},

_nullDataHandler: function(value) {
},

_nullErrorHandler: function(error, stackTrace) {
  var t1 = $.Zone__current;
  t1.toString;
  P._rootHandleUncaughtError(t1, null, t1, error, stackTrace);
},

_nullDoneHandler: function() {
},

_runUserCode: function(userCode, onSuccess, onError) {
  var e, s, exception, t1;
  try {
    onSuccess.call$1(userCode.call$0());
  } catch (exception) {
    t1 = H.unwrapException(exception);
    e = t1;
    s = new H._StackTrace(exception, null);
    onError.call$2(e, s);
  }

},

_cancelAndError: function(subscription, future, error, stackTrace) {
  var cancelFuture, t1;
  cancelFuture = subscription.cancel$0();
  t1 = J.getInterceptor(cancelFuture);
  if (typeof cancelFuture === "object" && cancelFuture !== null && !!t1.$isFuture)
    cancelFuture.whenComplete$1(new P._cancelAndError_closure(future, error, stackTrace));
  else
    future._completeError$2(error, stackTrace);
},

_cancelAndErrorClosure: function(subscription, future) {
  return new P._cancelAndErrorClosure_closure(subscription, future);
},

Timer_Timer: function(duration, callback) {
  var t1 = $.Zone__current;
  if (t1 === C.C__RootZone) {
    t1.toString;
    return P._createTimer(duration, callback);
  }
  return P._createTimer(duration, t1.bindCallback$2$runGuarded(callback, true));
},

_createTimer: function(duration, callback) {
  var milliseconds = C.JSNumber_methods.$tdiv(duration._duration, 1000);
  return H.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, callback);
},

_rootHandleUncaughtError: function($self, $parent, zone, error, stackTrace) {
  P._rootRun($self, null, $self, new P._rootHandleUncaughtError_closure(error, stackTrace));
},

_rootRun: function($self, $parent, zone, f) {
  var old, t1, t2;
  t1 = $.Zone__current;
  t2 = zone;
  if (t1 == null ? t2 == null : t1 === t2)
    return f.call$0();
  old = t1;
  try {
    $.Zone__current = zone;
    t1 = f.call$0();
    return t1;
  } finally {
    $.Zone__current = old;
  }
},

_rootRunUnary: function($self, $parent, zone, f, arg) {
  var old, t1, t2;
  t1 = $.Zone__current;
  t2 = zone;
  if (t1 == null ? t2 == null : t1 === t2)
    return f.call$1(arg);
  old = t1;
  try {
    $.Zone__current = zone;
    t1 = f.call$1(arg);
    return t1;
  } finally {
    $.Zone__current = old;
  }
},

_AsyncError: {"": "Object;error>,stackTrace<", $isError: true},

Future: {"": "Object;", $isFuture: true},

Future_Future_closure: {"": "Closure;computation_0,result_1",
  call$0: function() {
    var e, s, exception, t1;
    try {
      this.result_1._complete$1(this.computation_0.call$0());
    } catch (exception) {
      t1 = H.unwrapException(exception);
      e = t1;
      s = new H._StackTrace(exception, null);
      this.result_1._completeError$2(e, s);
    }

  }
},

Future_wait_handleError: {"": "Closure;box_0",
  call$1: function(error) {
    var t1 = this.box_0;
    if (t1.values_1 != null) {
      t1.values_1 = null;
      t1.completer_0.completeError$1(error);
    }
    return;
  },
  $is_args1: true
},

Future_wait_closure: {"": "Closure;box_0,pos_1",
  call$1: function(value) {
    var t1, t2, t3;
    t1 = this.box_0;
    t2 = t1.values_1;
    if (t2 == null)
      return;
    t3 = this.pos_1;
    if (t3 < 0 || t3 >= t2.length)
      throw H.ioore(t2, t3);
    t2[t3] = value;
    t1.remaining_2 = t1.remaining_2 - 1;
    if (t1.remaining_2 === 0) {
      t2 = t1.completer_0;
      t1 = t1.values_1;
      t2 = t2.future;
      if (t2._state !== 0)
        H.throwExpression(P.StateError$("Future already completed"));
      t2._asyncComplete$1(t1);
    }
  },
  $is_args1: true
},

_Completer: {"": "Object;"},

_AsyncCompleter: {"": "_Completer;future",
  completeError$2: function(error, stackTrace) {
    var t1;
    if (error == null)
      throw H.wrapException(new P.ArgumentError("Error must not be null"));
    t1 = this.future;
    if (t1._state !== 0)
      throw H.wrapException(P.StateError$("Future already completed"));
    t1._asyncCompleteError$2(error, stackTrace);
  },
  completeError$1: function(error) {
    return this.completeError$2(error, null);
  },
  $as_Completer: null
},

_Future: {"": "Object;_state,_zone<,_resultOrListeners,_nextListener<,_onValueCallback,_errorTestCallback,_onErrorCallback,_whenCompleteActionCallback",
  get$_isComplete: function() {
    return this._state >= 4;
  },
  get$_hasError: function() {
    return this._state === 8;
  },
  set$_isChained: function(value) {
    if (value)
      this._state = 2;
    else
      this._state = 0;
  },
  get$_onValue: function() {
    return this._state === 2 ? null : this._onValueCallback;
  },
  _onValue$1: function(arg0) {
    return this.get$_onValue().call$1(arg0);
  },
  get$_whenCompleteAction: function() {
    return this._state === 2 ? null : this._whenCompleteActionCallback;
  },
  _whenCompleteAction$0: function() {
    return this.get$_whenCompleteAction().call$0();
  },
  then$2$onError: function(f, onError) {
    var result = P._Future$_then(f, onError, null);
    this._addListener$1(result);
    return result;
  },
  then$1: function(f) {
    return this.then$2$onError(f, null);
  },
  catchError$2$test: function(onError, test) {
    var result = P._Future$_catchError(onError, test, null);
    this._addListener$1(result);
    return result;
  },
  catchError$1: function(onError) {
    return this.catchError$2$test(onError, null);
  },
  whenComplete$1: function(action) {
    var result = P._Future$_whenComplete(action, H.getRuntimeTypeArgument(this, "_Future", 0));
    this._addListener$1(result);
    return result;
  },
  get$_value: function() {
    return this._resultOrListeners;
  },
  get$_error: function() {
    return this._resultOrListeners;
  },
  _setValue$1: function(value) {
    this._state = 4;
    this._resultOrListeners = value;
  },
  _setError$2: function(error, stackTrace) {
    this._state = 8;
    this._resultOrListeners = new P._AsyncError(error, stackTrace);
  },
  _addListener$1: function(listener) {
    if (this._state >= 4) {
      this._zone.toString;
      P._scheduleAsyncCallback(new P._Future__addListener_closure(this, listener));
    } else {
      listener._nextListener = this._resultOrListeners;
      this._resultOrListeners = listener;
    }
  },
  _removeListeners$0: function() {
    var current, prev, next;
    current = this._resultOrListeners;
    this._resultOrListeners = null;
    for (prev = null; current != null; prev = current, current = next) {
      next = current.get$_nextListener();
      current._nextListener = prev;
    }
    return prev;
  },
  _complete$1: function(value) {
    var t1, listeners;
    t1 = J.getInterceptor(value);
    if (typeof value === "object" && value !== null && !!t1.$isFuture) {
      P._Future__chainFutures(value, this);
      return;
    }
    listeners = this._removeListeners$0();
    this._setValue$1(value);
    P._Future__propagateToListeners(this, listeners);
  },
  _completeError$2: function(error, stackTrace) {
    var listeners = this._removeListeners$0();
    this._setError$2(error, stackTrace);
    P._Future__propagateToListeners(this, listeners);
  },
  get$_completeError: function() {
    return new P.BoundClosure$2(this, P._Future.prototype._completeError$2, null, "_completeError$2");
  },
  _asyncComplete$1: function(value) {
    var t1, t2;
    t1 = J.getInterceptor(value);
    t2 = typeof value === "object" && value !== null && !!t1.$isFuture;
    if (t2)
      ;
    if (t2)
      t1 = typeof value !== "object" || value === null || !t1.$is_Future || value._state < 4;
    else
      t1 = false;
    if (t1) {
      this._complete$1(value);
      return;
    }
    if (this._state !== 0)
      H.throwExpression(P.StateError$("Future already completed"));
    this._state = 1;
    this._zone.toString;
    P._scheduleAsyncCallback(new P._Future__asyncComplete_closure(this, value));
  },
  _asyncCompleteError$2: function(error, stackTrace) {
    if (this._state !== 0)
      H.throwExpression(P.StateError$("Future already completed"));
    this._state = 1;
    this._zone.toString;
    P._scheduleAsyncCallback(new P._Future__asyncCompleteError_closure(this, error, stackTrace));
  },
  _async$_Future$immediate$1: function(value, $T) {
    this._asyncComplete$1(value);
  },
  $is_Future: true,
  $isFuture: true,
  static: {
"": "_Future__INCOMPLETE,_Future__PENDING_COMPLETE,_Future__CHAINED,_Future__VALUE,_Future__ERROR",
_Future$: function($T) {
  var t1 = new P._Future(0, $.Zone__current, null, null, null, null, null, null);
  H.setRuntimeTypeInfo(t1, [$T]);
  return t1;
},

_Future$immediate: function(value, $T) {
  var t1 = new P._Future(0, $.Zone__current, null, null, null, null, null, null);
  H.setRuntimeTypeInfo(t1, [$T]);
  t1._async$_Future$immediate$1(value, $T);
  return t1;
},

_Future$_then: function(onValueCallback, onErrorCallback, $T) {
  var t1 = $.Zone__current;
  t1.toString;
  t1 = new P._Future(0, t1, null, null, onValueCallback, null, P._registerErrorHandler(onErrorCallback, t1), null);
  H.setRuntimeTypeInfo(t1, [$T]);
  return t1;
},

_Future$_catchError: function(onErrorCallback, errorTestCallback, $T) {
  var t1, t2;
  t1 = $.Zone__current;
  t2 = P._registerErrorHandler(onErrorCallback, t1);
  t1.toString;
  t2 = new P._Future(0, t1, null, null, null, errorTestCallback, t2, null);
  H.setRuntimeTypeInfo(t2, [$T]);
  return t2;
},

_Future$_whenComplete: function(whenCompleteActionCallback, $T) {
  var t1 = $.Zone__current;
  t1.toString;
  t1 = new P._Future(0, t1, null, null, null, null, null, whenCompleteActionCallback);
  H.setRuntimeTypeInfo(t1, [$T]);
  return t1;
},

_Future__chainFutures: function(source, target) {
  var t1;
  target._state = 2;
  t1 = J.getInterceptor(source);
  if (typeof source === "object" && source !== null && !!t1.$is_Future)
    if (source._state >= 4)
      P._Future__propagateToListeners(source, target);
    else
      source._addListener$1(target);
  else
    source.then$2$onError(new P._Future__chainFutures_closure(target), new P._Future__chainFutures_closure0(target));
},

_Future__propagateMultipleListeners: function(source, listeners) {
  var listeners0;
  do {
    listeners0 = listeners.get$_nextListener();
    listeners._nextListener = null;
    P._Future__propagateToListeners(source, listeners);
    if (listeners0 != null) {
      listeners = listeners0;
      continue;
    } else
      break;
  } while (true);
},

_Future__propagateToListeners: function(source, listeners) {
  var t1, t2, hasError, asyncError, t3, t4, t5, chainSource, listeners0;
  t1 = {};
  t1.source_4 = source;
  for (; true;) {
    t2 = {};
    if (!t1.source_4.get$_isComplete())
      return;
    hasError = t1.source_4.get$_hasError();
    if (hasError && listeners == null) {
      t2 = t1.source_4;
      asyncError = t2.get$_error();
      t2 = t2._zone;
      t3 = J.get$error$x(asyncError);
      t4 = asyncError.get$stackTrace();
      t2.toString;
      P._rootHandleUncaughtError(t2, null, t2, t3, t4);
      return;
    }
    if (listeners == null)
      return;
    if (listeners._nextListener != null) {
      P._Future__propagateMultipleListeners(t1.source_4, listeners);
      return;
    }
    if (hasError) {
      t3 = t1.source_4.get$_zone();
      t4 = listeners._zone;
      t3.toString;
      t4.toString;
      t3 = t4 == null ? t3 != null : t4 !== t3;
    } else
      t3 = false;
    if (t3) {
      t2 = t1.source_4;
      asyncError = t2.get$_error();
      t2 = t2._zone;
      t3 = J.get$error$x(asyncError);
      t4 = asyncError.get$stackTrace();
      t2.toString;
      P._rootHandleUncaughtError(t2, null, t2, t3, t4);
      return;
    }
    t3 = $.Zone__current;
    t4 = listeners._zone;
    if (t3 == null ? t4 != null : t3 !== t4) {
      t4.toString;
      P._rootRun(t4, null, t4, new P._Future__propagateToListeners_closure(t1, listeners));
      return;
    }
    t2.listenerHasValue_1 = null;
    t2.listenerValueOrError_2 = null;
    t2.isPropagationAborted_3 = false;
    t4.toString;
    P._rootRun(t4, null, t4, new P._Future__propagateToListeners_closure0(t1, t2, hasError, listeners));
    if (t2.isPropagationAborted_3)
      return;
    t3 = t2.listenerHasValue_1 === true;
    if (t3) {
      t4 = t2.listenerValueOrError_2;
      t5 = J.getInterceptor(t4);
      t5 = typeof t4 === "object" && t4 !== null && !!t5.$isFuture;
      t4 = t5;
    } else
      t4 = false;
    if (t4) {
      chainSource = t2.listenerValueOrError_2;
      t2 = J.getInterceptor(chainSource);
      if (typeof chainSource === "object" && chainSource !== null && !!t2.$is_Future && chainSource._state >= 4) {
        listeners._state = 2;
        t1.source_4 = chainSource;
        continue;
      }
      P._Future__chainFutures(chainSource, listeners);
      return;
    }
    if (t3) {
      listeners0 = listeners._removeListeners$0();
      t2 = t2.listenerValueOrError_2;
      listeners._state = 4;
      listeners._resultOrListeners = t2;
    } else {
      listeners0 = listeners._removeListeners$0();
      asyncError = t2.listenerValueOrError_2;
      t2 = J.get$error$x(asyncError);
      t3 = asyncError.get$stackTrace();
      listeners._state = 8;
      listeners._resultOrListeners = new P._AsyncError(t2, t3);
    }
    t1.source_4 = listeners;
    listeners = listeners0;
  }
}}

},

_Future__addListener_closure: {"": "Closure;this_0,listener_1",
  call$0: function() {
    P._Future__propagateToListeners(this.this_0, this.listener_1);
  }
},

_Future__chainFutures_closure: {"": "Closure;target_0",
  call$1: function(value) {
    this.target_0._complete$1(value);
  },
  $is_args1: true
},

_Future__chainFutures_closure0: {"": "Closure;target_1",
  call$2: function(error, stackTrace) {
    this.target_1._completeError$2(error, stackTrace);
  },
  call$1: function(error) {
    return this.call$2(error, null);
  },
  $is_args2: true,
  $is_args1: true
},

_Future__asyncComplete_closure: {"": "Closure;this_0,value_1",
  call$0: function() {
    this.this_0._complete$1(this.value_1);
  }
},

_Future__asyncCompleteError_closure: {"": "Closure;this_0,error_1,stackTrace_2",
  call$0: function() {
    this.this_0._completeError$2(this.error_1, this.stackTrace_2);
  }
},

_Future__propagateToListeners_closure: {"": "Closure;box_2,listener_3",
  call$0: function() {
    P._Future__propagateToListeners(this.box_2.source_4, this.listener_3);
  }
},

_Future__propagateToListeners_closure0: {"": "Closure;box_2,box_1,hasError_4,listener_5",
  call$0: function() {
    var t1, value, asyncError, test, matchesTest, errorCallback, e, s, t2, t3, t4, exception;
    t1 = {};
    try {
      t2 = this.box_2;
      if (!this.hasError_4) {
        value = t2.source_4.get$_value();
        t2 = this.listener_5;
        t3 = t2._state === 2 ? null : t2._onValueCallback;
        t4 = this.box_1;
        if (t3 != null) {
          t4.listenerValueOrError_2 = t2._onValue$1(value);
          t4.listenerHasValue_1 = true;
        } else {
          t4.listenerValueOrError_2 = value;
          t4.listenerHasValue_1 = true;
        }
      } else {
        asyncError = t2.source_4.get$_error();
        t2 = this.listener_5;
        test = t2._state === 2 ? null : t2._errorTestCallback;
        matchesTest = true;
        if (test != null)
          matchesTest = test.call$1(J.get$error$x(asyncError));
        if (matchesTest === true)
          t3 = (t2._state === 2 ? null : t2._onErrorCallback) != null;
        else
          t3 = false;
        if (t3) {
          errorCallback = t2._state === 2 ? null : t2._onErrorCallback;
          t2 = this.box_1;
          t2.listenerValueOrError_2 = P._invokeErrorHandler(errorCallback, J.get$error$x(asyncError), asyncError.get$stackTrace());
          t2.listenerHasValue_1 = true;
        } else {
          t2 = this.box_1;
          t2.listenerValueOrError_2 = asyncError;
          t2.listenerHasValue_1 = false;
        }
      }
      t2 = this.listener_5;
      if ((t2._state === 2 ? null : t2._whenCompleteActionCallback) != null) {
        t1.completeResult_0 = t2._whenCompleteAction$0();
        t3 = t1.completeResult_0;
        t4 = J.getInterceptor(t3);
        if (typeof t3 === "object" && t3 !== null && !!t4.$isFuture) {
          t2.set$_isChained(true);
          t1.completeResult_0.then$2$onError(new P._Future__propagateToListeners__closure(this.box_2, t2), new P._Future__propagateToListeners__closure0(t1, t2));
          this.box_1.isPropagationAborted_3 = true;
        }
      }
    } catch (exception) {
      t1 = H.unwrapException(exception);
      e = t1;
      s = new H._StackTrace(exception, null);
      if (this.hasError_4) {
        t1 = J.get$error$x(this.box_2.source_4.get$_error());
        t2 = e;
        t2 = t1 == null ? t2 == null : t1 === t2;
        t1 = t2;
      } else
        t1 = false;
      t2 = this.box_1;
      if (t1)
        t2.listenerValueOrError_2 = this.box_2.source_4.get$_error();
      else
        t2.listenerValueOrError_2 = new P._AsyncError(e, s);
      this.box_1.listenerHasValue_1 = false;
    }

  }
},

_Future__propagateToListeners__closure: {"": "Closure;box_2,listener_6",
  call$1: function(ignored) {
    P._Future__propagateToListeners(this.box_2.source_4, this.listener_6);
  },
  $is_args1: true
},

_Future__propagateToListeners__closure0: {"": "Closure;box_0,listener_7",
  call$2: function(error, stackTrace) {
    var t1, t2, t3;
    t1 = this.box_0;
    t2 = t1.completeResult_0;
    t3 = J.getInterceptor(t2);
    if (typeof t2 !== "object" || t2 === null || !t3.$is_Future) {
      t1.completeResult_0 = P._Future$(null);
      t1.completeResult_0._setError$2(error, stackTrace);
    }
    P._Future__propagateToListeners(t1.completeResult_0, this.listener_7);
  },
  call$1: function(error) {
    return this.call$2(error, null);
  },
  $is_args2: true,
  $is_args1: true
},

Stream: {"": "Object;",
  forEach$1: function(_, action) {
    var t1, future;
    t1 = {};
    future = P._Future$(null);
    t1.subscription_0 = null;
    t1.subscription_0 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_forEach_closure(t1, this, action, future), true, new P.Stream_forEach_closure0(future), future.get$_completeError());
    return future;
  },
  get$length: function(_) {
    var t1, future;
    t1 = {};
    future = P._Future$(J.JSInt);
    t1.count_0 = 0;
    this.listen$4$cancelOnError$onDone$onError(new P.Stream_length_closure(t1), true, new P.Stream_length_closure0(t1, future), future.get$_completeError());
    return future;
  }
},

Stream_forEach_closure: {"": "Closure;box_0,this_1,action_2,future_3",
  call$1: function(element) {
    P._runUserCode(new P.Stream_forEach__closure(this.action_2, element), new P.Stream_forEach__closure0(), P._cancelAndErrorClosure(this.box_0.subscription_0, this.future_3));
  },
  $is_args1: true
},

Stream_forEach__closure: {"": "Closure;action_4,element_5",
  call$0: function() {
    return this.action_4.call$1(this.element_5);
  }
},

Stream_forEach__closure0: {"": "Closure;",
  call$1: function(_) {
  },
  $is_args1: true
},

Stream_forEach_closure0: {"": "Closure;future_6",
  call$0: function() {
    this.future_6._complete$1(null);
  }
},

Stream_length_closure: {"": "Closure;box_0",
  call$1: function(_) {
    var t1 = this.box_0;
    t1.count_0 = t1.count_0 + 1;
  },
  $is_args1: true
},

Stream_length_closure0: {"": "Closure;box_0,future_1",
  call$0: function() {
    this.future_1._complete$1(this.box_0.count_0);
  }
},

StreamSubscription: {"": "Object;",
  get$onError: function(_receiver) {
    return new P.BoundClosure$i1(this, P.StreamSubscription.prototype.onError$1, _receiver, "onError$1");
  }
},

_StreamController: {"": "Object;",
  get$_pendingEvents: function() {
    if ((this._state & 8) === 0)
      return this._varData;
    return this._varData.get$varData();
  },
  _ensurePendingEvents$0: function() {
    if ((this._state & 8) === 0) {
      if (this._varData == null)
        this._varData = new P._StreamImplEvents(null, null, 0);
      return this._varData;
    }
    var t1 = this._varData.get$varData();
    return t1;
  },
  get$_subscription: function() {
    if ((this._state & 8) !== 0)
      return this._varData.get$varData();
    return this._varData;
  },
  _badEventState$0: function() {
    if ((this._state & 4) !== 0)
      return new P.StateError("Cannot add event after closing");
    return new P.StateError("Cannot add event while adding a stream");
  },
  _ensureDoneFuture$0: function() {
    if (this._doneFuture == null) {
      this._doneFuture = P._Future$(null);
      if ((this._state & 2) !== 0)
        this._doneFuture._complete$1(null);
    }
    return this._doneFuture;
  },
  close$0: function(_) {
    var t1 = this._state;
    if ((t1 & 4) !== 0)
      return this._doneFuture;
    if (t1 >= 4)
      throw H.wrapException(this._badEventState$0());
    this._state = (t1 | 4) >>> 0;
    this._ensureDoneFuture$0();
    t1 = this._state;
    if ((t1 & 1) !== 0)
      this._sendDone$0();
    else if ((t1 & 3) === 0) {
      t1 = this._ensurePendingEvents$0();
      t1.add$1(t1, C.C__DelayedDone);
    }
    return this._doneFuture;
  },
  _async$_add$1: function(value) {
    var t1 = this._state;
    if ((t1 & 1) !== 0)
      this._sendData$1(value);
    else if ((t1 & 3) === 0) {
      t1 = this._ensurePendingEvents$0();
      t1.add$1(t1, new P._DelayedData(value, null));
    }
  },
  _subscribe$1: function(cancelOnError) {
    var t1, t2, subscription, pendingEvents, addState;
    if ((this._state & 3) !== 0)
      throw H.wrapException(P.StateError$("Stream has already been listened to."));
    t1 = $.Zone__current;
    t2 = cancelOnError ? 1 : 0;
    subscription = new P._ControllerSubscription(this, null, null, null, t1, t2, null, null);
    H.setRuntimeTypeInfo(subscription, [null]);
    pendingEvents = this.get$_pendingEvents();
    this._state = (this._state | 1) >>> 0;
    if ((this._state & 8) !== 0) {
      addState = this._varData;
      addState.set$varData(subscription);
      addState.resume$0();
    } else
      this._varData = subscription;
    subscription._setPendingEvents$1(pendingEvents);
    subscription._guardCallback$1(new P._StreamController__subscribe_closure(this));
    return subscription;
  },
  _recordCancel$1: function(subscription) {
    var t1, future;
    if ((this._state & 8) !== 0)
      this._varData.cancel$0();
    this._varData = null;
    this._state = (this._state & 4294967286 | 2) >>> 0;
    t1 = new P._StreamController__recordCancel_complete(this);
    future = P._runGuarded(this.get$_onCancel());
    if (future != null)
      future = future.whenComplete$1(t1);
    else
      t1.call$0();
    return future;
  }
},

_StreamController__subscribe_closure: {"": "Closure;this_0",
  call$0: function() {
    P._runGuarded(this.this_0.get$_onListen());
  }
},

_StreamController__recordCancel_complete: {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0._doneFuture;
    if (t1 != null && t1._state === 0)
      t1._asyncComplete$1(null);
  }
},

_SyncStreamControllerDispatch: {"": "Object;",
  _sendData$1: function(data) {
    this.get$_subscription()._async$_add$1(data);
  },
  _sendDone$0: function() {
    this.get$_subscription()._close$0();
  }
},

_AsyncStreamControllerDispatch: {"": "Object;",
  _sendData$1: function(data) {
    this.get$_subscription()._addPending$1(new P._DelayedData(data, null));
  },
  _sendDone$0: function() {
    this.get$_subscription()._addPending$1(C.C__DelayedDone);
  }
},

_AsyncStreamController: {"": "_StreamController__AsyncStreamControllerDispatch;_onListen<,_onPause<,_onResume<,_onCancel<,_varData,_state,_doneFuture"},

_StreamController__AsyncStreamControllerDispatch: {"": "_StreamController+_AsyncStreamControllerDispatch;"},

_SyncStreamController: {"": "_StreamController__SyncStreamControllerDispatch;_onListen<,_onPause<,_onResume<,_onCancel<,_varData,_state,_doneFuture"},

_StreamController__SyncStreamControllerDispatch: {"": "_StreamController+_SyncStreamControllerDispatch;"},

_ControllerStream: {"": "_StreamImpl;_async$_controller",
  _createSubscription$1: function(cancelOnError) {
    return this._async$_controller._subscribe$1(cancelOnError);
  },
  get$hashCode: function(_) {
    return (H.Primitives_objectHashCode(this._async$_controller) ^ 892482866) >>> 0;
  },
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    if (this === other)
      return true;
    t1 = J.getInterceptor(other);
    if (typeof other !== "object" || other === null || !t1.$is_ControllerStream)
      return false;
    return other._async$_controller === this._async$_controller;
  },
  $is_ControllerStream: true,
  $as_StreamImpl: null
},

_ControllerSubscription: {"": "_BufferingStreamSubscription;_async$_controller,_async$_onData,_onError,_onDone,_zone,_state,_cancelFuture,_pending",
  _onCancel$0: function() {
    return this._async$_controller._recordCancel$1(this);
  },
  _onPause$0: function() {
    var t1, addState;
    t1 = this._async$_controller;
    if ((t1._state & 8) !== 0) {
      addState = t1._varData;
      addState.pause$0(addState);
    }
    P._runGuarded(t1.get$_onPause());
  },
  get$_onPause: function() {
    return new P.BoundClosure$0(this, P._ControllerSubscription.prototype._onPause$0, null, "_onPause$0");
  },
  _onResume$0: function() {
    var t1 = this._async$_controller;
    if ((t1._state & 8) !== 0)
      t1._varData.resume$0();
    P._runGuarded(t1.get$_onResume());
  },
  get$_onResume: function() {
    return new P.BoundClosure$0(this, P._ControllerSubscription.prototype._onResume$0, null, "_onResume$0");
  },
  $as_BufferingStreamSubscription: null
},

_EventSink: {"": "Object;"},

_BufferingStreamSubscription: {"": "Object;_async$_onData,_onError,_onDone,_zone<,_state,_cancelFuture,_pending",
  _setPendingEvents$1: function(pendingEvents) {
    if (pendingEvents == null)
      return;
    this._pending = pendingEvents;
    if (!pendingEvents.get$isEmpty(pendingEvents)) {
      this._state = (this._state | 64) >>> 0;
      this._pending.schedule$1(this);
    }
  },
  onData$1: function(handleData) {
    $.Zone__current.toString;
    this._async$_onData = handleData;
  },
  onError$1: function(_, handleError) {
    if (handleError == null)
      handleError = P._nullErrorHandler$closure;
    this._onError = P._registerErrorHandler(handleError, $.Zone__current);
  },
  get$onError: function(_receiver) {
    return new P.BoundClosure$i1(this, P._BufferingStreamSubscription.prototype.onError$1, _receiver, "onError$1");
  },
  onDone$1: function(handleDone) {
    $.Zone__current.toString;
    this._onDone = handleDone;
  },
  pause$1: function(_, resumeSignal) {
    var t1 = this._state;
    if ((t1 & 8) !== 0)
      return;
    this._state = (t1 + 128 | 4) >>> 0;
    if (t1 < 128 && this._pending != null)
      this._pending.cancelSchedule$0();
    if ((t1 & 4) === 0 && (this._state & 32) === 0)
      this._guardCallback$1(this.get$_onPause());
  },
  pause$0: function($receiver) {
    return this.pause$1($receiver, null);
  },
  resume$0: function() {
    var t1, t2;
    t1 = this._state;
    if ((t1 & 8) !== 0)
      return;
    if (t1 >= 128) {
      this._state = t1 - 128;
      t1 = this._state;
      if (t1 < 128) {
        if ((t1 & 64) !== 0) {
          t2 = this._pending;
          t2 = !t2.get$isEmpty(t2);
        } else
          t2 = false;
        if (t2)
          this._pending.schedule$1(this);
        else {
          this._state = (t1 & 4294967291) >>> 0;
          if ((this._state & 32) === 0)
            this._guardCallback$1(this.get$_onResume());
        }
      }
    }
  },
  cancel$0: function() {
    this._state = (this._state & 4294967279) >>> 0;
    if ((this._state & 8) !== 0)
      return this._cancelFuture;
    this._cancel$0();
    return this._cancelFuture;
  },
  get$_mayResumeInput: function() {
    if (this._state < 128) {
      var t1 = this._pending;
      t1 = t1 == null || t1.get$isEmpty(t1);
    } else
      t1 = false;
    return t1;
  },
  _cancel$0: function() {
    this._state = (this._state | 8) >>> 0;
    if ((this._state & 64) !== 0)
      this._pending.cancelSchedule$0();
    if ((this._state & 32) === 0)
      this._pending = null;
    this._cancelFuture = this._onCancel$0();
  },
  _async$_add$1: function(data) {
    var t1 = this._state;
    if ((t1 & 8) !== 0)
      return;
    if (t1 < 32)
      this._sendData$1(data);
    else
      this._addPending$1(new P._DelayedData(data, null));
  },
  _close$0: function() {
    var t1 = this._state;
    if ((t1 & 8) !== 0)
      return;
    this._state = (t1 | 2) >>> 0;
    if (this._state < 32)
      this._sendDone$0();
    else
      this._addPending$1(C.C__DelayedDone);
  },
  _onPause$0: function() {
  },
  get$_onPause: function() {
    return new P.BoundClosure$0(this, P._BufferingStreamSubscription.prototype._onPause$0, null, "_onPause$0");
  },
  _onResume$0: function() {
  },
  get$_onResume: function() {
    return new P.BoundClosure$0(this, P._BufferingStreamSubscription.prototype._onResume$0, null, "_onResume$0");
  },
  _onCancel$0: function() {
  },
  _addPending$1: function($event) {
    var pending, t1;
    pending = this._pending;
    if (pending == null) {
      pending = new P._StreamImplEvents(null, null, 0);
      this._pending = pending;
    }
    pending.add$1(pending, $event);
    t1 = this._state;
    if ((t1 & 64) === 0) {
      this._state = (t1 | 64) >>> 0;
      if (this._state < 128)
        this._pending.schedule$1(this);
    }
  },
  _sendData$1: function(data) {
    var t1 = this._state;
    this._state = (t1 | 32) >>> 0;
    this._zone.runUnaryGuarded$2(this._async$_onData, data);
    this._state = (this._state & 4294967263) >>> 0;
    this._checkState$1((t1 & 4) !== 0);
  },
  _sendDone$0: function() {
    var t1, t2, t3;
    t1 = new P._BufferingStreamSubscription__sendDone_sendDone(this);
    this._cancel$0();
    this._state = (this._state | 16) >>> 0;
    t2 = this._cancelFuture;
    t3 = J.getInterceptor(t2);
    if (typeof t2 === "object" && t2 !== null && !!t3.$isFuture)
      t2.whenComplete$1(t1);
    else
      t1.call$0();
  },
  _guardCallback$1: function(callback) {
    var t1 = this._state;
    this._state = (t1 | 32) >>> 0;
    callback.call$0();
    this._state = (this._state & 4294967263) >>> 0;
    this._checkState$1((t1 & 4) !== 0);
  },
  _checkState$1: function(wasInputPaused) {
    var t1, t2, isInputPaused;
    t1 = this._state;
    if ((t1 & 64) !== 0) {
      t2 = this._pending;
      t2 = t2.get$isEmpty(t2);
    } else
      t2 = false;
    if (t2) {
      this._state = (t1 & 4294967231) >>> 0;
      if ((this._state & 4) !== 0 && this.get$_mayResumeInput())
        this._state = (this._state & 4294967291) >>> 0;
    }
    for (; true; wasInputPaused = isInputPaused) {
      t1 = this._state;
      if ((t1 & 8) !== 0) {
        this._pending = null;
        return;
      }
      isInputPaused = (t1 & 4) !== 0;
      if (wasInputPaused === isInputPaused)
        break;
      this._state = (t1 ^ 32) >>> 0;
      if (isInputPaused)
        this._onPause$0();
      else
        this._onResume$0();
      this._state = (this._state & 4294967263) >>> 0;
    }
    t1 = this._state;
    if ((t1 & 64) !== 0 && t1 < 128)
      this._pending.schedule$1(this);
  },
  static: {
"": "_BufferingStreamSubscription__STATE_CANCEL_ON_ERROR,_BufferingStreamSubscription__STATE_CLOSED,_BufferingStreamSubscription__STATE_INPUT_PAUSED,_BufferingStreamSubscription__STATE_CANCELED,_BufferingStreamSubscription__STATE_WAIT_FOR_CANCEL,_BufferingStreamSubscription__STATE_IN_CALLBACK,_BufferingStreamSubscription__STATE_HAS_PENDING,_BufferingStreamSubscription__STATE_PAUSE_COUNT,_BufferingStreamSubscription__STATE_PAUSE_COUNT_SHIFT",
}

},

_BufferingStreamSubscription__sendDone_sendDone: {"": "Closure;this_0",
  call$0: function() {
    var t1, t2;
    t1 = this.this_0;
    t2 = t1._state;
    if ((t2 & 16) === 0)
      return;
    t1._state = (t2 | 42) >>> 0;
    t1._zone.runGuarded$1(t1._onDone);
    t1._state = (t1._state & 4294967263) >>> 0;
  }
},

_StreamImpl: {"": "Stream;",
  listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
    var subscription = this._createSubscription$1(true === cancelOnError);
    subscription.onData$1(onData);
    subscription.onError$1(subscription, onError);
    subscription.onDone$1(onDone);
    return subscription;
  },
  _createSubscription$1: function(cancelOnError) {
    var t1, t2;
    t1 = $.Zone__current;
    t2 = cancelOnError ? 1 : 0;
    return new P._BufferingStreamSubscription(null, null, null, t1, t2, null, null);
  },
  $asStream: null
},

_DelayedEvent: {"": "Object;next@"},

_DelayedData: {"": "_DelayedEvent;value>,next",
  perform$1: function(dispatch) {
    dispatch._sendData$1(this.value);
  }
},

_DelayedDone: {"": "Object;",
  perform$1: function(dispatch) {
    dispatch._sendDone$0();
  },
  get$next: function() {
    return;
  },
  set$next: function(_) {
    throw H.wrapException(P.StateError$("No events after a done."));
  }
},

_PendingEvents: {"": "Object;",
  schedule$1: function(dispatch) {
    var t1 = this._state;
    if (t1 === 1)
      return;
    if (t1 >= 1) {
      this._state = 1;
      return;
    }
    P.scheduleMicrotask(new P._PendingEvents_schedule_closure(this, dispatch));
    this._state = 1;
  },
  cancelSchedule$0: function() {
    if (this._state === 1)
      this._state = 3;
  }
},

_PendingEvents_schedule_closure: {"": "Closure;this_0,dispatch_1",
  call$0: function() {
    var t1, oldState;
    t1 = this.this_0;
    oldState = t1._state;
    t1._state = 0;
    if (oldState === 3)
      return;
    t1.handleNext$1(this.dispatch_1);
  }
},

_StreamImplEvents: {"": "_PendingEvents;firstPendingEvent,lastPendingEvent,_state",
  get$isEmpty: function(_) {
    return this.lastPendingEvent == null;
  },
  add$1: function(_, $event) {
    var t1 = this.lastPendingEvent;
    if (t1 == null) {
      this.lastPendingEvent = $event;
      this.firstPendingEvent = $event;
    } else {
      t1.set$next($event);
      this.lastPendingEvent = $event;
    }
  },
  handleNext$1: function(dispatch) {
    var $event = this.firstPendingEvent;
    this.firstPendingEvent = $event.get$next();
    if (this.firstPendingEvent == null)
      this.lastPendingEvent = null;
    $event.perform$1(dispatch);
  }
},

_cancelAndError_closure: {"": "Closure;future_0,error_1,stackTrace_2",
  call$0: function() {
    return this.future_0._completeError$2(this.error_1, this.stackTrace_2);
  }
},

_cancelAndErrorClosure_closure: {"": "Closure;subscription_0,future_1",
  call$2: function(error, stackTrace) {
    return P._cancelAndError(this.subscription_0, this.future_1, error, stackTrace);
  },
  $is_args2: true
},

_BaseZone: {"": "Object;",
  runGuarded$1: function(f) {
    var e, s, t1, exception;
    try {
      t1 = this.run$1(f);
      return t1;
    } catch (exception) {
      t1 = H.unwrapException(exception);
      e = t1;
      s = new H._StackTrace(exception, null);
      return this.handleUncaughtError$2(e, s);
    }

  },
  runUnaryGuarded$2: function(f, arg) {
    var e, s, t1, exception;
    try {
      t1 = this.runUnary$2(f, arg);
      return t1;
    } catch (exception) {
      t1 = H.unwrapException(exception);
      e = t1;
      s = new H._StackTrace(exception, null);
      return this.handleUncaughtError$2(e, s);
    }

  },
  bindCallback$2$runGuarded: function(f, runGuarded) {
    var registered = this.registerCallback$1(f);
    if (runGuarded)
      return new P._BaseZone_bindCallback_closure(this, registered);
    else
      return new P._BaseZone_bindCallback_closure0(this, registered);
  },
  bindUnaryCallback$2$runGuarded: function(f, runGuarded) {
    var registered = this.registerUnaryCallback$1(f);
    if (runGuarded)
      return new P._BaseZone_bindUnaryCallback_closure(this, registered);
    else
      return new P._BaseZone_bindUnaryCallback_closure0(this, registered);
  }
},

_BaseZone_bindCallback_closure: {"": "Closure;this_0,registered_1",
  call$0: function() {
    return this.this_0.runGuarded$1(this.registered_1);
  }
},

_BaseZone_bindCallback_closure0: {"": "Closure;this_2,registered_3",
  call$0: function() {
    return this.this_2.run$1(this.registered_3);
  }
},

_BaseZone_bindUnaryCallback_closure: {"": "Closure;this_0,registered_1",
  call$1: function(arg) {
    return this.this_0.runUnaryGuarded$2(this.registered_1, arg);
  },
  $is_args1: true
},

_BaseZone_bindUnaryCallback_closure0: {"": "Closure;this_2,registered_3",
  call$1: function(arg) {
    return this.this_2.runUnary$2(this.registered_3, arg);
  },
  $is_args1: true
},

_rootHandleUncaughtError_closure: {"": "Closure;error_0,stackTrace_1",
  call$0: function() {
    P._scheduleAsyncCallback(new P._rootHandleUncaughtError__closure(this.error_0, this.stackTrace_1));
  }
},

_rootHandleUncaughtError__closure: {"": "Closure;error_2,stackTrace_3",
  call$0: function() {
    var t1, trace, t2;
    t1 = this.error_2;
    P.print("Uncaught Error: " + H.S(t1));
    trace = this.stackTrace_3;
    if (trace == null) {
      t2 = J.getInterceptor(t1);
      t2 = typeof t1 === "object" && t1 !== null && !!t2.$isError;
    } else
      t2 = false;
    if (t2)
      trace = t1.get$stackTrace();
    if (trace != null)
      P.print("Stack Trace: \n" + H.S(trace) + "\n");
    throw H.wrapException(t1);
  }
},

_RootZone: {"": "_BaseZone;",
  $index: function(_, key) {
    return;
  },
  handleUncaughtError$2: function(error, stackTrace) {
    return P._rootHandleUncaughtError(this, null, this, error, stackTrace);
  },
  run$1: function(f) {
    return P._rootRun(this, null, this, f);
  },
  runUnary$2: function(f, arg) {
    return P._rootRunUnary(this, null, this, f, arg);
  },
  registerCallback$1: function(f) {
    return f;
  },
  registerUnaryCallback$1: function(f) {
    return f;
  }
}}],
["dart.collection", "dart:collection", , P, {
_HashSet__newHashTable: function() {
  var table = Object.create(null);
  table["<non-identifier-key>"] = table;
  delete table["<non-identifier-key>"];
  return table;
},

_defaultEquals: function(a, b) {
  return J.$eq(a, b);
},

_defaultHashCode: function(a) {
  return J.get$hashCode$(a);
},

HashMap_HashMap: function(equals, hashCode, isValidKey, $K, $V) {
  var t1 = new P._HashMap(0, null, null, null, null);
  H.setRuntimeTypeInfo(t1, [$K, $V]);
  return t1;
},

HashSet_HashSet$identity: function($E) {
  var t1 = new P._IdentityHashSet(0, null, null, null, null);
  H.setRuntimeTypeInfo(t1, [$E]);
  return t1;
},

_iterableToString: function(iterable) {
  var parts, t1;
  t1 = $.get$_toStringVisiting();
  if (t1.contains$1(t1, iterable))
    return "(...)";
  t1 = $.get$_toStringVisiting();
  t1.add$1(t1, iterable);
  parts = [];
  try {
    P._iterablePartsToStrings(iterable, parts);
  } finally {
    t1 = $.get$_toStringVisiting();
    t1.remove$1(t1, iterable);
  }
  t1 = P.StringBuffer$("(");
  t1.writeAll$2(parts, ", ");
  t1.write$1(")");
  return t1._contents;
},

_iterablePartsToStrings: function(iterable, parts) {
  var it, $length, count, next, ultimateString, penultimateString, penultimate, ultimate, ultimate0, elision;
  it = iterable.get$iterator(iterable);
  $length = 0;
  count = 0;
  while (true) {
    if (!($length < 80 || count < 3))
      break;
    if (!it.moveNext$0())
      return;
    next = H.S(it.get$current());
    parts.push(next);
    $length += next.length + 2;
    ++count;
  }
  if (!it.moveNext$0()) {
    if (count <= 5)
      return;
    if (0 >= parts.length)
      throw H.ioore(parts, 0);
    ultimateString = parts.pop();
    if (0 >= parts.length)
      throw H.ioore(parts, 0);
    penultimateString = parts.pop();
  } else {
    penultimate = it.get$current();
    ++count;
    if (!it.moveNext$0()) {
      if (count <= 4) {
        parts.push(H.S(penultimate));
        return;
      }
      ultimateString = H.S(penultimate);
      if (0 >= parts.length)
        throw H.ioore(parts, 0);
      penultimateString = parts.pop();
      $length += ultimateString.length + 2;
    } else {
      ultimate = it.get$current();
      ++count;
      for (; it.moveNext$0(); penultimate = ultimate, ultimate = ultimate0) {
        ultimate0 = it.get$current();
        ++count;
        if (count > 100) {
          while (true) {
            if (!($length > 75 && count > 3))
              break;
            if (0 >= parts.length)
              throw H.ioore(parts, 0);
            $length -= parts.pop().length + 2;
            --count;
          }
          parts.push("...");
          return;
        }
      }
      penultimateString = H.S(penultimate);
      ultimateString = H.S(ultimate);
      $length += ultimateString.length + penultimateString.length + 4;
    }
  }
  if (count > parts.length + 2) {
    $length += 5;
    elision = "...";
  } else
    elision = null;
  while (true) {
    if (!($length > 80 && parts.length > 3))
      break;
    if (0 >= parts.length)
      throw H.ioore(parts, 0);
    $length -= parts.pop().length + 2;
    if (elision == null) {
      $length += 5;
      elision = "...";
    }
  }
  if (elision != null)
    parts.push(elision);
  parts.push(penultimateString);
  parts.push(ultimateString);
},

LinkedHashMap_LinkedHashMap: function(equals, hashCode, isValidKey, $K, $V) {
  var t1 = new P._LinkedHashMap(0, null, null, null, null, null, 0);
  H.setRuntimeTypeInfo(t1, [$K, $V]);
  return t1;
},

Maps_mapToString: function(m) {
  var t1, result, i, t2;
  t1 = {};
  for (i = 0; i < $.get$Maps__toStringList().length; ++i) {
    t2 = $.get$Maps__toStringList();
    if (i >= t2.length)
      throw H.ioore(t2, i);
    if (t2[i] === m)
      return "{...}";
  }
  result = P.StringBuffer$("");
  try {
    $.get$Maps__toStringList().push(m);
    result.write$1("{");
    t1.first_0 = true;
    J.forEach$1$ax(m, new P.Maps_mapToString_closure(t1, result));
    result.write$1("}");
  } finally {
    t1 = $.get$Maps__toStringList();
    if (0 >= t1.length)
      throw H.ioore(t1, 0);
    t1.pop();
  }
  return result.get$_contents();
},

_HashMap: {"": "Object;_collection$_length,_strings,_nums,_rest,_keys",
  get$length: function(_) {
    return this._collection$_length;
  },
  get$keys: function() {
    var t1 = new P.HashMapKeyIterable(this);
    H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(this, "_HashMap", 0)]);
    return t1;
  },
  get$values: function(_) {
    var t1 = new P.HashMapKeyIterable(this);
    H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(this, "_HashMap", 0)]);
    return H.MappedIterable_MappedIterable(t1, new P._HashMap_values_closure(this), H.getRuntimeTypeArgument(t1, "IterableBase", 0), null);
  },
  containsKey$1: function(key) {
    var strings, nums, rest;
    if (typeof key === "string" && key !== "__proto__") {
      strings = this._strings;
      return strings == null ? false : strings[key] != null;
    } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
      nums = this._nums;
      return nums == null ? false : nums[key] != null;
    } else {
      rest = this._rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(rest[this._computeHashCode$1(key)], key) >= 0;
    }
  },
  $index: function(_, key) {
    var strings, t1, entry, nums, rest, bucket, index;
    if (typeof key === "string" && key !== "__proto__") {
      strings = this._strings;
      if (strings == null)
        t1 = null;
      else {
        entry = strings[key];
        t1 = entry === strings ? null : entry;
      }
      return t1;
    } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
      nums = this._nums;
      if (nums == null)
        t1 = null;
      else {
        entry = nums[key];
        t1 = entry === nums ? null : entry;
      }
      return t1;
    } else {
      rest = this._rest;
      if (rest == null)
        return;
      bucket = rest[this._computeHashCode$1(key)];
      index = this._findBucketIndex$2(bucket, key);
      return index < 0 ? null : bucket[index + 1];
    }
  },
  $indexSet: function(_, key, value) {
    var strings, nums, rest, hash, bucket, index;
    if (typeof key === "string" && key !== "__proto__") {
      strings = this._strings;
      if (strings == null) {
        strings = P._HashMap__newHashTable();
        this._strings = strings;
      }
      this._addHashTableEntry$3(strings, key, value);
    } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
      nums = this._nums;
      if (nums == null) {
        nums = P._HashMap__newHashTable();
        this._nums = nums;
      }
      this._addHashTableEntry$3(nums, key, value);
    } else {
      rest = this._rest;
      if (rest == null) {
        rest = P._HashMap__newHashTable();
        this._rest = rest;
      }
      hash = this._computeHashCode$1(key);
      bucket = rest[hash];
      if (bucket == null) {
        P._HashMap__setTableEntry(rest, hash, [key, value]);
        this._collection$_length = this._collection$_length + 1;
        this._keys = null;
      } else {
        index = this._findBucketIndex$2(bucket, key);
        if (index >= 0)
          bucket[index + 1] = value;
        else {
          bucket.push(key, value);
          this._collection$_length = this._collection$_length + 1;
          this._keys = null;
        }
      }
    }
  },
  forEach$1: function(_, action) {
    var keys, $length, i, key;
    keys = this._computeKeys$0();
    for ($length = keys.length, i = 0; i < $length; ++i) {
      key = keys[i];
      action.call$2(key, this.$index(this, key));
      if (keys !== this._keys)
        throw H.wrapException(P.ConcurrentModificationError$(this));
    }
  },
  _computeKeys$0: function() {
    var t1, result, strings, names, entries, index, i, nums, rest, bucket, $length, i0;
    t1 = this._keys;
    if (t1 != null)
      return t1;
    result = P.List_List(this._collection$_length, null);
    strings = this._strings;
    if (strings != null) {
      names = Object.getOwnPropertyNames(strings);
      entries = names.length;
      for (index = 0, i = 0; i < entries; ++i) {
        result[index] = names[i];
        ++index;
      }
    } else
      index = 0;
    nums = this._nums;
    if (nums != null) {
      names = Object.getOwnPropertyNames(nums);
      entries = names.length;
      for (i = 0; i < entries; ++i) {
        result[index] = +names[i];
        ++index;
      }
    }
    rest = this._rest;
    if (rest != null) {
      names = Object.getOwnPropertyNames(rest);
      entries = names.length;
      for (i = 0; i < entries; ++i) {
        bucket = rest[names[i]];
        $length = bucket.length;
        for (i0 = 0; i0 < $length; i0 += 2) {
          result[index] = bucket[i0];
          ++index;
        }
      }
    }
    this._keys = result;
    return result;
  },
  _addHashTableEntry$3: function(table, key, value) {
    if (table[key] == null) {
      this._collection$_length = this._collection$_length + 1;
      this._keys = null;
    }
    P._HashMap__setTableEntry(table, key, value);
  },
  _computeHashCode$1: function(key) {
    return J.get$hashCode$(key) & 0x3ffffff;
  },
  _findBucketIndex$2: function(bucket, key) {
    var $length, i;
    if (bucket == null)
      return -1;
    $length = bucket.length;
    for (i = 0; i < $length; i += 2)
      if (J.$eq(bucket[i], key))
        return i;
    return -1;
  },
  $isMap: true,
  static: {
_HashMap__setTableEntry: function(table, key, value) {
  if (value == null)
    table[key] = table;
  else
    table[key] = value;
},

_HashMap__newHashTable: function() {
  var table = Object.create(null);
  P._HashMap__setTableEntry(table, "<non-identifier-key>", table);
  delete table["<non-identifier-key>"];
  return table;
}}

},

_HashMap_values_closure: {"": "Closure;this_0",
  call$1: function(each) {
    var t1 = this.this_0;
    return t1.$index(t1, each);
  },
  $is_args1: true
},

HashMapKeyIterable: {"": "IterableBase;_map",
  get$length: function(_) {
    return this._map._collection$_length;
  },
  get$iterator: function(_) {
    var t1 = this._map;
    return new P.HashMapKeyIterator(t1, t1._computeKeys$0(), 0, null);
  },
  forEach$1: function(_, f) {
    var t1, keys, $length, i;
    t1 = this._map;
    keys = t1._computeKeys$0();
    for ($length = keys.length, i = 0; i < $length; ++i) {
      f.call$1(keys[i]);
      if (keys !== t1._keys)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
    }
  },
  $asIterableBase: null,
  $isEfficientLength: true
},

HashMapKeyIterator: {"": "Object;_map,_keys,_offset,_collection$_current",
  get$current: function() {
    return this._collection$_current;
  },
  moveNext$0: function() {
    var keys, offset, t1;
    keys = this._keys;
    offset = this._offset;
    t1 = this._map;
    if (keys !== t1._keys)
      throw H.wrapException(P.ConcurrentModificationError$(t1));
    else if (offset >= keys.length) {
      this._collection$_current = null;
      return false;
    } else {
      this._collection$_current = keys[offset];
      this._offset = offset + 1;
      return true;
    }
  }
},

_LinkedHashMap: {"": "Object;_collection$_length,_strings,_nums,_rest,_first,_last,_modifications",
  get$length: function(_) {
    return this._collection$_length;
  },
  get$keys: function() {
    var t1 = new P.LinkedHashMapKeyIterable(this);
    H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(this, "_LinkedHashMap", 0)]);
    return t1;
  },
  get$values: function(_) {
    var t1 = new P.LinkedHashMapKeyIterable(this);
    H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(this, "_LinkedHashMap", 0)]);
    return H.MappedIterable_MappedIterable(t1, new P._LinkedHashMap_values_closure(this), H.getRuntimeTypeArgument(t1, "IterableBase", 0), null);
  },
  containsKey$1: function(key) {
    var nums, rest;
    if ((key & 0x3ffffff) === key) {
      nums = this._nums;
      if (nums == null)
        return false;
      return nums[key] != null;
    } else {
      rest = this._rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(rest[this._computeHashCode$1(key)], key) >= 0;
    }
  },
  $index: function(_, key) {
    var strings, cell, nums, rest, bucket, index;
    if (typeof key === "string" && key !== "__proto__") {
      strings = this._strings;
      if (strings == null)
        return;
      cell = strings[key];
      return cell == null ? null : cell.get$_collection$_value();
    } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
      nums = this._nums;
      if (nums == null)
        return;
      cell = nums[key];
      return cell == null ? null : cell.get$_collection$_value();
    } else {
      rest = this._rest;
      if (rest == null)
        return;
      bucket = rest[this._computeHashCode$1(key)];
      index = this._findBucketIndex$2(bucket, key);
      if (index < 0)
        return;
      return bucket[index].get$_collection$_value();
    }
  },
  $indexSet: function(_, key, value) {
    var strings, nums, rest, hash, bucket, index;
    if (typeof key === "string" && key !== "__proto__") {
      strings = this._strings;
      if (strings == null) {
        strings = P._LinkedHashMap__newHashTable();
        this._strings = strings;
      }
      this._addHashTableEntry$3(strings, key, value);
    } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
      nums = this._nums;
      if (nums == null) {
        nums = P._LinkedHashMap__newHashTable();
        this._nums = nums;
      }
      this._addHashTableEntry$3(nums, key, value);
    } else {
      rest = this._rest;
      if (rest == null) {
        rest = P._LinkedHashMap__newHashTable();
        this._rest = rest;
      }
      hash = this._computeHashCode$1(key);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [this._newLinkedCell$2(key, value)];
      else {
        index = this._findBucketIndex$2(bucket, key);
        if (index >= 0)
          bucket[index].set$_collection$_value(value);
        else
          bucket.push(this._newLinkedCell$2(key, value));
      }
    }
  },
  remove$1: function(_, key) {
    var rest, bucket, index, cell;
    if (typeof key === "string" && key !== "__proto__")
      return this._removeHashTableEntry$2(this._strings, key);
    else if (typeof key === "number" && (key & 0x3ffffff) === key)
      return this._removeHashTableEntry$2(this._nums, key);
    else {
      rest = this._rest;
      if (rest == null)
        return;
      bucket = rest[this._computeHashCode$1(key)];
      index = this._findBucketIndex$2(bucket, key);
      if (index < 0)
        return;
      cell = bucket.splice(index, 1)[0];
      this._unlinkCell$1(cell);
      return cell.get$_collection$_value();
    }
  },
  forEach$1: function(_, action) {
    var cell, modifications;
    cell = this._first;
    modifications = this._modifications;
    for (; cell != null;) {
      action.call$2(cell._key, cell._collection$_value);
      if (modifications !== this._modifications)
        throw H.wrapException(P.ConcurrentModificationError$(this));
      cell = cell._next;
    }
  },
  _addHashTableEntry$3: function(table, key, value) {
    var cell = table[key];
    if (cell == null)
      table[key] = this._newLinkedCell$2(key, value);
    else
      cell.set$_collection$_value(value);
  },
  _removeHashTableEntry$2: function(table, key) {
    var cell;
    if (table == null)
      return;
    cell = table[key];
    if (cell == null)
      return;
    this._unlinkCell$1(cell);
    delete table[key];
    return cell.get$_collection$_value();
  },
  _newLinkedCell$2: function(key, value) {
    var cell, last;
    cell = new P.LinkedHashMapCell(key, value, null, null);
    if (this._first == null) {
      this._last = cell;
      this._first = cell;
    } else {
      last = this._last;
      cell._previous = last;
      last._next = cell;
      this._last = cell;
    }
    this._collection$_length = this._collection$_length + 1;
    this._modifications = this._modifications + 1 & 67108863;
    return cell;
  },
  _unlinkCell$1: function(cell) {
    var previous, next;
    previous = cell.get$_previous();
    next = cell._next;
    if (previous == null)
      this._first = next;
    else
      previous._next = next;
    if (next == null)
      this._last = previous;
    else
      next._previous = previous;
    this._collection$_length = this._collection$_length - 1;
    this._modifications = this._modifications + 1 & 67108863;
  },
  _computeHashCode$1: function(key) {
    return J.get$hashCode$(key) & 0x3ffffff;
  },
  _findBucketIndex$2: function(bucket, key) {
    var $length, i;
    if (bucket == null)
      return -1;
    $length = bucket.length;
    for (i = 0; i < $length; ++i)
      if (J.$eq(bucket[i].get$_key(), key))
        return i;
    return -1;
  },
  toString$0: function(_) {
    return P.Maps_mapToString(this);
  },
  $isMap: true,
  static: {
_LinkedHashMap__newHashTable: function() {
  var table = Object.create(null);
  table["<non-identifier-key>"] = table;
  delete table["<non-identifier-key>"];
  return table;
}}

},

_LinkedHashMap_values_closure: {"": "Closure;this_0",
  call$1: function(each) {
    var t1 = this.this_0;
    return t1.$index(t1, each);
  },
  $is_args1: true
},

LinkedHashMapCell: {"": "Object;_key<,_collection$_value@,_next,_previous<"},

LinkedHashMapKeyIterable: {"": "IterableBase;_map",
  get$length: function(_) {
    return this._map._collection$_length;
  },
  get$iterator: function(_) {
    var t1 = this._map;
    t1 = new P.LinkedHashMapKeyIterator(t1, t1._modifications, null, null);
    t1._cell = t1._map._first;
    return t1;
  },
  forEach$1: function(_, f) {
    var t1, cell, modifications;
    t1 = this._map;
    cell = t1._first;
    modifications = t1._modifications;
    for (; cell != null;) {
      f.call$1(cell._key);
      if (modifications !== t1._modifications)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      cell = cell._next;
    }
  },
  $asIterableBase: null,
  $isEfficientLength: true
},

LinkedHashMapKeyIterator: {"": "Object;_map,_modifications,_cell,_collection$_current",
  get$current: function() {
    return this._collection$_current;
  },
  moveNext$0: function() {
    var t1 = this._map;
    if (this._modifications !== t1._modifications)
      throw H.wrapException(P.ConcurrentModificationError$(t1));
    else {
      t1 = this._cell;
      if (t1 == null) {
        this._collection$_current = null;
        return false;
      } else {
        this._collection$_current = t1._key;
        this._cell = this._cell._next;
        return true;
      }
    }
  }
},

_HashSet: {"": "_HashSetBase;",
  get$iterator: function(_) {
    return new P.HashSetIterator(this, this._computeElements$0(), 0, null);
  },
  get$length: function(_) {
    return this._collection$_length;
  },
  contains$1: function(_, object) {
    var strings, nums, rest;
    if (typeof object === "string" && object !== "__proto__") {
      strings = this._strings;
      return strings == null ? false : strings[object] != null;
    } else if (typeof object === "number" && (object & 0x3ffffff) === object) {
      nums = this._nums;
      return nums == null ? false : nums[object] != null;
    } else {
      rest = this._rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(rest[this._computeHashCode$1(object)], object) >= 0;
    }
  },
  lookup$1: function(object) {
    var t1, rest, bucket, index;
    if (!(typeof object === "string" && object !== "__proto__"))
      t1 = typeof object === "number" && (object & 0x3ffffff) === object;
    else
      t1 = true;
    if (t1)
      return this.contains$1(this, object) ? object : null;
    rest = this._rest;
    if (rest == null)
      return;
    bucket = rest[this._computeHashCode$1(object)];
    index = this._findBucketIndex$2(bucket, object);
    if (index < 0)
      return;
    return J.$index$asx(bucket, index);
  },
  add$1: function(_, element) {
    var strings, nums, rest, hash, bucket;
    if (typeof element === "string" && element !== "__proto__") {
      strings = this._strings;
      if (strings == null) {
        strings = P._HashSet__newHashTable();
        this._strings = strings;
      }
      return this._addHashTableEntry$2(strings, element);
    } else if (typeof element === "number" && (element & 0x3ffffff) === element) {
      nums = this._nums;
      if (nums == null) {
        nums = P._HashSet__newHashTable();
        this._nums = nums;
      }
      return this._addHashTableEntry$2(nums, element);
    } else {
      rest = this._rest;
      if (rest == null) {
        rest = P._HashSet__newHashTable();
        this._rest = rest;
      }
      hash = this._computeHashCode$1(element);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [element];
      else {
        if (this._findBucketIndex$2(bucket, element) >= 0)
          return false;
        bucket.push(element);
      }
      this._collection$_length = this._collection$_length + 1;
      this._elements = null;
      return true;
    }
  },
  remove$1: function(_, object) {
    var rest, bucket, index;
    rest = this._rest;
    if (rest == null)
      return false;
    bucket = rest[this._computeHashCode$1(object)];
    index = this._findBucketIndex$2(bucket, object);
    if (index < 0)
      return false;
    this._collection$_length = this._collection$_length - 1;
    this._elements = null;
    bucket.splice(index, 1);
    return true;
  },
  _computeElements$0: function() {
    var t1, result, strings, names, entries, index, i, nums, rest, bucket, $length, i0;
    t1 = this._elements;
    if (t1 != null)
      return t1;
    result = P.List_List(this._collection$_length, null);
    strings = this._strings;
    if (strings != null) {
      names = Object.getOwnPropertyNames(strings);
      entries = names.length;
      for (index = 0, i = 0; i < entries; ++i) {
        result[index] = names[i];
        ++index;
      }
    } else
      index = 0;
    nums = this._nums;
    if (nums != null) {
      names = Object.getOwnPropertyNames(nums);
      entries = names.length;
      for (i = 0; i < entries; ++i) {
        result[index] = +names[i];
        ++index;
      }
    }
    rest = this._rest;
    if (rest != null) {
      names = Object.getOwnPropertyNames(rest);
      entries = names.length;
      for (i = 0; i < entries; ++i) {
        bucket = rest[names[i]];
        $length = bucket.length;
        for (i0 = 0; i0 < $length; ++i0) {
          result[index] = bucket[i0];
          ++index;
        }
      }
    }
    this._elements = result;
    return result;
  },
  _addHashTableEntry$2: function(table, element) {
    if (table[element] != null)
      return false;
    table[element] = 0;
    this._collection$_length = this._collection$_length + 1;
    this._elements = null;
    return true;
  },
  _computeHashCode$1: function(element) {
    return J.get$hashCode$(element) & 0x3ffffff;
  },
  _findBucketIndex$2: function(bucket, element) {
    var $length, i;
    if (bucket == null)
      return -1;
    $length = bucket.length;
    for (i = 0; i < $length; ++i)
      if (J.$eq(bucket[i], element))
        return i;
    return -1;
  },
  $as_HashSetBase: null,
  $isEfficientLength: true
},

_IdentityHashSet: {"": "_HashSet;_collection$_length,_strings,_nums,_rest,_elements",
  _computeHashCode$1: function(key) {
    return H.objectHashCode(key) & 0x3ffffff;
  },
  _findBucketIndex$2: function(bucket, element) {
    var $length, i, t1;
    if (bucket == null)
      return -1;
    $length = bucket.length;
    for (i = 0; i < $length; ++i) {
      t1 = bucket[i];
      if (t1 == null ? element == null : t1 === element)
        return i;
    }
    return -1;
  },
  $as_HashSet: null
},

HashSetIterator: {"": "Object;_set,_elements,_offset,_collection$_current",
  get$current: function() {
    return this._collection$_current;
  },
  moveNext$0: function() {
    var elements, offset, t1;
    elements = this._elements;
    offset = this._offset;
    t1 = this._set;
    if (elements !== t1._elements)
      throw H.wrapException(P.ConcurrentModificationError$(t1));
    else if (offset >= elements.length) {
      this._collection$_current = null;
      return false;
    } else {
      this._collection$_current = elements[offset];
      this._offset = offset + 1;
      return true;
    }
  }
},

_HashSetBase: {"": "IterableBase;",
  toString$0: function(_) {
    return H.IterableMixinWorkaround_toStringIterable(this, "{", "}");
  },
  $asIterableBase: null,
  $isEfficientLength: true
},

IterableBase: {"": "Object;",
  forEach$1: function(_, f) {
    var t1;
    for (t1 = this.get$iterator(this); t1.moveNext$0();)
      f.call$1(t1.get$current());
  },
  get$length: function(_) {
    var it, count;
    it = this.get$iterator(this);
    for (count = 0; it.moveNext$0();)
      ++count;
    return count;
  },
  elementAt$1: function(_, index) {
    var t1, remaining, element;
    if (index < 0)
      throw H.wrapException(P.RangeError$value(index));
    for (t1 = this.get$iterator(this), remaining = index; t1.moveNext$0();) {
      element = t1.get$current();
      if (remaining === 0)
        return element;
      --remaining;
    }
    throw H.wrapException(P.RangeError$value(index));
  },
  toString$0: function(_) {
    return P._iterableToString(this);
  }
},

ListMixin: {"": "Object;",
  get$iterator: function(receiver) {
    return new H.ListIterator(receiver, this.get$length(receiver), 0, null);
  },
  elementAt$1: function(receiver, index) {
    return this.$index(receiver, index);
  },
  forEach$1: function(receiver, action) {
    var $length, i;
    $length = this.get$length(receiver);
    for (i = 0; i < $length; ++i) {
      action.call$1(this.$index(receiver, i));
      if ($length !== this.get$length(receiver))
        throw H.wrapException(P.ConcurrentModificationError$(receiver));
    }
  },
  toString$0: function(receiver) {
    var result, t1;
    t1 = $.get$_toStringVisiting();
    if (t1.contains$1(t1, receiver))
      return "[...]";
    result = P.StringBuffer$("");
    try {
      t1 = $.get$_toStringVisiting();
      t1.add$1(t1, receiver);
      result.write$1("[");
      result.writeAll$2(receiver, ", ");
      result.write$1("]");
    } finally {
      t1 = $.get$_toStringVisiting();
      t1.remove$1(t1, receiver);
    }
    return result.get$_contents();
  },
  $isList: true,
  $asList: null,
  $isEfficientLength: true
},

Maps_mapToString_closure: {"": "Closure;box_0,result_1",
  call$2: function(k, v) {
    var t1 = this.box_0;
    if (!t1.first_0)
      this.result_1.write$1(", ");
    t1.first_0 = false;
    t1 = this.result_1;
    t1.write$1(k);
    t1.write$1(": ");
    t1.write$1(v);
  },
  $is_args2: true
},

ListQueue: {"": "IterableBase;_table,_head,_tail,_modificationCount",
  get$iterator: function(_) {
    return P._ListQueueIterator$(this);
  },
  forEach$1: function(_, action) {
    var modificationCount, i, t1;
    modificationCount = this._modificationCount;
    for (i = this._head; i !== this._tail; i = (i + 1 & this._table.length - 1) >>> 0) {
      t1 = this._table;
      if (i < 0 || i >= t1.length)
        throw H.ioore(t1, i);
      action.call$1(t1[i]);
      if (modificationCount !== this._modificationCount)
        H.throwExpression(P.ConcurrentModificationError$(this));
    }
  },
  get$length: function(_) {
    return (this._tail - this._head & this._table.length - 1) >>> 0;
  },
  get$first: function(_) {
    var t1, t2;
    t1 = this._head;
    if (t1 === this._tail)
      throw H.wrapException(P.StateError$("No elements"));
    t2 = this._table;
    if (t1 < 0 || t1 >= t2.length)
      throw H.ioore(t2, t1);
    return t2[t1];
  },
  get$last: function(_) {
    var t1, t2, t3;
    t1 = this._head;
    t2 = this._tail;
    if (t1 === t2)
      throw H.wrapException(P.StateError$("No elements"));
    t1 = this._table;
    t3 = t1.length;
    t2 = (t2 - 1 & t3 - 1) >>> 0;
    if (t2 < 0 || t2 >= t3)
      throw H.ioore(t1, t2);
    return t1[t2];
  },
  toString$0: function(_) {
    return H.IterableMixinWorkaround_toStringIterable(this, "{", "}");
  },
  removeFirst$0: function() {
    var t1, t2, t3, result;
    if (this._head === this._tail)
      throw H.wrapException(P.StateError$("No elements"));
    this._modificationCount = this._modificationCount + 1;
    t1 = this._table;
    t2 = this._head;
    t3 = t1.length;
    if (t2 < 0 || t2 >= t3)
      throw H.ioore(t1, t2);
    result = t1[t2];
    this._head = (t2 + 1 & t3 - 1) >>> 0;
    return result;
  },
  _add$1: function(element) {
    var t1, t2, t3;
    t1 = this._table;
    t2 = this._tail;
    t3 = t1.length;
    if (t2 < 0 || t2 >= t3)
      throw H.ioore(t1, t2);
    t1[t2] = element;
    this._tail = (t2 + 1 & t3 - 1) >>> 0;
    if (this._head === this._tail)
      this._grow$0();
    this._modificationCount = this._modificationCount + 1;
  },
  _grow$0: function() {
    var newTable, t1, t2, split;
    newTable = P.List_List(this._table.length * 2, H.getRuntimeTypeArgument(this, "ListQueue", 0));
    H.setRuntimeTypeInfo(newTable, [H.getRuntimeTypeArgument(this, "ListQueue", 0)]);
    t1 = this._table;
    t2 = this._head;
    split = t1.length - t2;
    H.IterableMixinWorkaround_setRangeList(newTable, 0, split, t1, t2);
    t1 = this._head;
    t2 = this._table;
    H.IterableMixinWorkaround_setRangeList(newTable, split, split + t1, t2, 0);
    this._head = 0;
    this._tail = this._table.length;
    this._table = newTable;
  },
  ListQueue$1: function(initialCapacity, $E) {
    var t1 = P.List_List(8, $E);
    H.setRuntimeTypeInfo(t1, [$E]);
    this._table = t1;
  },
  $asIterableBase: null,
  $isEfficientLength: true,
  static: {
"": "ListQueue__INITIAL_CAPACITY",
ListQueue$: function(initialCapacity, $E) {
  var t1 = new P.ListQueue(null, 0, 0, 0);
  H.setRuntimeTypeInfo(t1, [$E]);
  t1.ListQueue$1(initialCapacity, $E);
  return t1;
}}

},

_ListQueueIterator: {"": "Object;_queue,_end,_modificationCount,_position,_collection$_current",
  get$current: function() {
    return this._collection$_current;
  },
  moveNext$0: function() {
    var t1, t2, t3;
    t1 = this._queue;
    if (this._modificationCount !== t1._modificationCount)
      H.throwExpression(P.ConcurrentModificationError$(t1));
    t2 = this._position;
    if (t2 === this._end) {
      this._collection$_current = null;
      return false;
    }
    t3 = t1._table;
    if (t2 < 0 || t2 >= t3.length)
      throw H.ioore(t3, t2);
    this._collection$_current = t3[t2];
    this._position = (this._position + 1 & t1._table.length - 1) >>> 0;
    return true;
  },
  static: {
_ListQueueIterator$: function(queue) {
  return new P._ListQueueIterator(queue, queue._tail, queue._modificationCount, queue._head, null);
}}

}}],
["dart.core", "dart:core", , P, {
_symbolToString: function(symbol) {
  return H.Symbol_getName(symbol);
},

Error_safeToString: function(object) {
  var buffer, t1, i, codeUnit, t2, charCodes;
  if (typeof object === "number" || typeof object === "boolean" || null == object)
    return J.toString$0(object);
  if (typeof object === "string") {
    buffer = new P.StringBuffer("");
    buffer._contents = "\"";
    for (t1 = object.length, i = 0; i < t1; ++i) {
      codeUnit = C.JSString_methods.codeUnitAt$1(object, i);
      if (codeUnit <= 31)
        if (codeUnit === 10)
          buffer._contents = buffer._contents + "\\n";
        else if (codeUnit === 13)
          buffer._contents = buffer._contents + "\\r";
        else if (codeUnit === 9)
          buffer._contents = buffer._contents + "\\t";
        else {
          buffer._contents = buffer._contents + "\\x";
          if (codeUnit < 16)
            buffer._contents = buffer._contents + "0";
          else {
            buffer._contents = buffer._contents + "1";
            codeUnit -= 16;
          }
          t2 = codeUnit < 10 ? 48 + codeUnit : 87 + codeUnit;
          charCodes = P.List_List$filled(1, t2, J.JSInt);
          charCodes.$builtinTypeInfo = [J.JSInt];
          t2 = H.Primitives_stringFromCharCodes(charCodes);
          buffer._contents = buffer._contents + t2;
        }
      else if (codeUnit === 92)
        buffer._contents = buffer._contents + "\\\\";
      else if (codeUnit === 34)
        buffer._contents = buffer._contents + "\\\"";
      else {
        charCodes = P.List_List$filled(1, codeUnit, J.JSInt);
        charCodes.$builtinTypeInfo = [J.JSInt];
        t2 = H.Primitives_stringFromCharCodes(charCodes);
        buffer._contents = buffer._contents + t2;
      }
    }
    buffer._contents = buffer._contents + "\"";
    return buffer._contents;
  }
  return "Instance of '" + H.Primitives_objectTypeName(object) + "'";
},

Exception_Exception: function(message) {
  return new P._ExceptionImplementation(message);
},

identical: function(a, b) {
  return a == null ? b == null : a === b;
},

identityHashCode: function(object) {
  return H.objectHashCode(object);
},

List_List: function($length, $E) {
  if ($length == null)
    return new Array(0);
  if (typeof $length !== "number" || Math.floor($length) !== $length || $length < 0)
    throw H.wrapException(P.ArgumentError$("Length must be a positive integer: " + H.S($length) + "."));
  return H.Primitives_newFixedList($length);
},

List_List$filled: function($length, fill, $E) {
  var result, t1, i;
  if ($length < 0)
    throw H.wrapException(P.ArgumentError$("Length must be a positive integer: " + $length + "."));
  result = H.Primitives_newFixedList($length);
  if ($length !== 0 && true)
    for (t1 = result.length, i = 0; i < t1; ++i)
      result[i] = fill;
  return result;
},

List_List$from: function(other, growable, $E) {
  var list, t1, $length, fixedList, i;
  list = P.List_List(null, $E);
  H.setRuntimeTypeInfo(list, [$E]);
  for (t1 = J.get$iterator$ax(other); t1.moveNext$0();)
    list.push(t1.get$current());
  if (growable)
    return list;
  $length = list.length;
  fixedList = P.List_List($length, $E);
  H.setRuntimeTypeInfo(fixedList, [$E]);
  for (t1 = list.length, i = 0; i < $length; ++i) {
    if (i >= t1)
      throw H.ioore(list, i);
    fixedList[i] = list[i];
  }
  return fixedList;
},

print: function(object) {
  var line = J.toString$0(object);
  H.printToConsole(line);
},

String_String$fromCharCodes: function(charCodes) {
  return H.Primitives_stringFromCharCodes(charCodes);
},

NoSuchMethodError_toString_closure: {"": "Closure;box_0",
  call$2: function(key, value) {
    var t1 = this.box_0;
    if (t1.i_1 > 0)
      t1.sb_0.write$1(", ");
    t1.sb_0.write$1(P._symbolToString(key));
  },
  $is_args2: true
},

DateTime: {"": "Object;millisecondsSinceEpoch,isUtc",
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    t1 = J.getInterceptor(other);
    if (typeof other !== "object" || other === null || !t1.$isDateTime)
      return false;
    return this.millisecondsSinceEpoch === other.millisecondsSinceEpoch && this.isUtc === other.isUtc;
  },
  get$hashCode: function(_) {
    return this.millisecondsSinceEpoch;
  },
  toString$0: function(_) {
    var t1, y, m, d, h, min, sec, ms;
    t1 = new P.DateTime_toString_twoDigits();
    y = new P.DateTime_toString_fourDigits().call$1(H.Primitives_getYear(this));
    m = t1.call$1(H.Primitives_getMonth(this));
    d = t1.call$1(H.Primitives_getDay(this));
    h = t1.call$1(H.Primitives_getHours(this));
    min = t1.call$1(H.Primitives_getMinutes(this));
    sec = t1.call$1(H.Primitives_getSeconds(this));
    ms = new P.DateTime_toString_threeDigits().call$1(H.Primitives_getMilliseconds(this));
    if (this.isUtc)
      return H.S(y) + "-" + H.S(m) + "-" + H.S(d) + " " + H.S(h) + ":" + H.S(min) + ":" + H.S(sec) + "." + H.S(ms) + "Z";
    else
      return H.S(y) + "-" + H.S(m) + "-" + H.S(d) + " " + H.S(h) + ":" + H.S(min) + ":" + H.S(sec) + "." + H.S(ms);
  },
  difference$1: function(other) {
    return P.Duration$(0, 0, 0, this.millisecondsSinceEpoch - other.millisecondsSinceEpoch, 0, 0);
  },
  DateTime$_now$0: function() {
    H.Primitives_lazyAsJsDate(this);
  },
  $isDateTime: true,
  static: {
"": "DateTime_MONDAY,DateTime_TUESDAY,DateTime_WEDNESDAY,DateTime_THURSDAY,DateTime_FRIDAY,DateTime_SATURDAY,DateTime_SUNDAY,DateTime_DAYS_PER_WEEK,DateTime_JANUARY,DateTime_FEBRUARY,DateTime_MARCH,DateTime_APRIL,DateTime_MAY,DateTime_JUNE,DateTime_JULY,DateTime_AUGUST,DateTime_SEPTEMBER,DateTime_OCTOBER,DateTime_NOVEMBER,DateTime_DECEMBER,DateTime_MONTHS_PER_YEAR,DateTime__MAX_MILLISECONDS_SINCE_EPOCH",
DateTime$_now: function() {
  var t1 = new P.DateTime(Date.now(), false);
  t1.DateTime$_now$0();
  return t1;
}}

},

DateTime_toString_fourDigits: {"": "Closure;",
  call$1: function(n) {
    var absN, sign;
    absN = J.abs$0$n(n);
    sign = n < 0 ? "-" : "";
    if (absN >= 1000)
      return H.S(n);
    if (absN >= 100)
      return sign + "0" + H.S(absN);
    if (absN >= 10)
      return sign + "00" + H.S(absN);
    return sign + "000" + H.S(absN);
  },
  $is_args1: true
},

DateTime_toString_threeDigits: {"": "Closure;",
  call$1: function(n) {
    var t1 = J.getInterceptor$n(n);
    if (t1.$ge(n, 100))
      return H.S(n);
    if (t1.$ge(n, 10))
      return "0" + H.S(n);
    return "00" + H.S(n);
  },
  $is_args1: true
},

DateTime_toString_twoDigits: {"": "Closure;",
  call$1: function(n) {
    if (J.$ge$n(n, 10))
      return H.S(n);
    return "0" + H.S(n);
  },
  $is_args1: true
},

Duration: {"": "Object;_duration<",
  $add: function(_, other) {
    return P.Duration$(0, 0, this._duration + other.get$_duration(), 0, 0, 0);
  },
  $sub: function(_, other) {
    return P.Duration$(0, 0, this._duration - other.get$_duration(), 0, 0, 0);
  },
  $mul: function(_, factor) {
    if (typeof factor !== "number")
      throw H.iae(factor);
    return P.Duration$(0, 0, C.JSNumber_methods.toInt$0(C.JSNumber_methods.roundToDouble$0(this._duration * factor)), 0, 0, 0);
  },
  $tdiv: function(_, quotient) {
    if (quotient === 0)
      throw H.wrapException(P.IntegerDivisionByZeroException$());
    return P.Duration$(0, 0, C.JSNumber_methods.$tdiv(this._duration, quotient), 0, 0, 0);
  },
  $lt: function(_, other) {
    return this._duration < other.get$_duration();
  },
  $gt: function(_, other) {
    return this._duration > other.get$_duration();
  },
  $ge: function(_, other) {
    return C.JSNumber_methods.$ge(this._duration, other.get$_duration());
  },
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    t1 = J.getInterceptor(other);
    if (typeof other !== "object" || other === null || !t1.$isDuration)
      return false;
    return this._duration === other._duration;
  },
  get$hashCode: function(_) {
    return this._duration & 0x1FFFFFFF;
  },
  toString$0: function(_) {
    var t1, t2, twoDigitMinutes, twoDigitSeconds, sixDigitUs;
    t1 = new P.Duration_toString_twoDigits();
    t2 = this._duration;
    if (t2 < 0)
      return "-" + H.S(P.Duration$(0, 0, -t2, 0, 0, 0));
    twoDigitMinutes = t1.call$1(C.JSNumber_methods.remainder$1(C.JSNumber_methods.$tdiv(t2, 60000000), 60));
    twoDigitSeconds = t1.call$1(C.JSNumber_methods.remainder$1(C.JSNumber_methods.$tdiv(t2, 1000000), 60));
    sixDigitUs = new P.Duration_toString_sixDigits().call$1(C.JSNumber_methods.remainder$1(t2, 1000000));
    return H.S(C.JSNumber_methods.$tdiv(t2, 3600000000)) + ":" + H.S(twoDigitMinutes) + ":" + H.S(twoDigitSeconds) + "." + H.S(sixDigitUs);
  },
  $isDuration: true,
  static: {
"": "Duration_MICROSECONDS_PER_MILLISECOND,Duration_MILLISECONDS_PER_SECOND,Duration_SECONDS_PER_MINUTE,Duration_MINUTES_PER_HOUR,Duration_HOURS_PER_DAY,Duration_MICROSECONDS_PER_SECOND,Duration_MICROSECONDS_PER_MINUTE,Duration_MICROSECONDS_PER_HOUR,Duration_MICROSECONDS_PER_DAY,Duration_MILLISECONDS_PER_MINUTE,Duration_MILLISECONDS_PER_HOUR,Duration_MILLISECONDS_PER_DAY,Duration_SECONDS_PER_HOUR,Duration_SECONDS_PER_DAY,Duration_MINUTES_PER_DAY,Duration_ZERO",
Duration$: function(days, hours, microseconds, milliseconds, minutes, seconds) {
  return new P.Duration(days * 86400000000 + hours * 3600000000 + minutes * 60000000 + seconds * 1000000 + milliseconds * 1000 + microseconds);
}}

},

Duration_toString_sixDigits: {"": "Closure;",
  call$1: function(n) {
    var t1 = J.getInterceptor$n(n);
    if (t1.$ge(n, 100000))
      return H.S(n);
    if (t1.$ge(n, 10000))
      return "0" + H.S(n);
    if (t1.$ge(n, 1000))
      return "00" + H.S(n);
    if (t1.$ge(n, 100))
      return "000" + H.S(n);
    if (t1.$gt(n, 10))
      return "0000" + H.S(n);
    return "00000" + H.S(n);
  },
  $is_args1: true
},

Duration_toString_twoDigits: {"": "Closure;",
  call$1: function(n) {
    if (J.$ge$n(n, 10))
      return H.S(n);
    return "0" + H.S(n);
  },
  $is_args1: true
},

Error: {"": "Object;",
  get$stackTrace: function() {
    return new H._StackTrace(this.$thrownJsError, null);
  },
  $isError: true
},

NullThrownError: {"": "Error;",
  toString$0: function(_) {
    return "Throw of null.";
  }
},

ArgumentError: {"": "Error;message",
  toString$0: function(_) {
    var t1 = this.message;
    if (t1 != null)
      return "Illegal argument(s): " + H.S(t1);
    return "Illegal argument(s)";
  },
  static: {
ArgumentError$: function(message) {
  return new P.ArgumentError(message);
}}

},

RangeError: {"": "ArgumentError;message",
  toString$0: function(_) {
    return "RangeError: " + H.S(this.message);
  },
  static: {
RangeError$value: function(value) {
  return new P.RangeError("value " + H.S(value));
},

RangeError$range: function(value, start, end) {
  return new P.RangeError("value " + H.S(value) + " not in range " + start + ".." + H.S(end));
}}

},

UnsupportedError: {"": "Error;message",
  toString$0: function(_) {
    return "Unsupported operation: " + this.message;
  },
  static: {
UnsupportedError$: function(message) {
  return new P.UnsupportedError(message);
}}

},

UnimplementedError: {"": "Error;message",
  toString$0: function(_) {
    var t1 = this.message;
    return t1 != null ? "UnimplementedError: " + H.S(t1) : "UnimplementedError";
  },
  $isError: true,
  static: {
UnimplementedError$: function(message) {
  return new P.UnimplementedError(message);
}}

},

StateError: {"": "Error;message",
  toString$0: function(_) {
    return "Bad state: " + this.message;
  },
  static: {
StateError$: function(message) {
  return new P.StateError(message);
}}

},

ConcurrentModificationError: {"": "Error;modifiedObject",
  toString$0: function(_) {
    var t1 = this.modifiedObject;
    if (t1 == null)
      return "Concurrent modification during iteration.";
    return "Concurrent modification during iteration: " + H.S(P.Error_safeToString(t1)) + ".";
  },
  static: {
ConcurrentModificationError$: function(modifiedObject) {
  return new P.ConcurrentModificationError(modifiedObject);
}}

},

StackOverflowError: {"": "Object;",
  toString$0: function(_) {
    return "Stack Overflow";
  },
  get$stackTrace: function() {
    return;
  },
  $isError: true
},

CyclicInitializationError: {"": "Error;variableName",
  toString$0: function(_) {
    return "Reading static variable '" + this.variableName + "' during its initialization";
  },
  static: {
CyclicInitializationError$: function(variableName) {
  return new P.CyclicInitializationError(variableName);
}}

},

_ExceptionImplementation: {"": "Object;message",
  toString$0: function(_) {
    var t1 = this.message;
    if (t1 == null)
      return "Exception";
    return "Exception: " + H.S(t1);
  }
},

IntegerDivisionByZeroException: {"": "Object;",
  toString$0: function(_) {
    return "IntegerDivisionByZeroException";
  },
  static: {
IntegerDivisionByZeroException$: function() {
  return new P.IntegerDivisionByZeroException();
}}

},

Expando: {"": "Object;name",
  toString$0: function(_) {
    return "Expando:" + H.S(this.name);
  },
  $index: function(_, object) {
    var values = H.Primitives_getProperty(object, "expando$values");
    return values == null ? null : H.Primitives_getProperty(values, this._getKey$0());
  },
  $indexSet: function(_, object, value) {
    var values = H.Primitives_getProperty(object, "expando$values");
    if (values == null) {
      values = new P.Object();
      H.Primitives_setProperty(object, "expando$values", values);
    }
    H.Primitives_setProperty(values, this._getKey$0(), value);
  },
  _getKey$0: function() {
    var key, t1;
    key = H.Primitives_getProperty(this, "expando$key");
    if (key == null) {
      t1 = $.Expando__keyCount;
      $.Expando__keyCount = t1 + 1;
      key = "expando$key$" + t1;
      H.Primitives_setProperty(this, "expando$key", key);
    }
    return key;
  },
  static: {
"": "Expando__KEY_PROPERTY_NAME,Expando__EXPANDO_PROPERTY_NAME,Expando__keyCount",
}

},

Function: {"": "Object;"},

Iterator: {"": "Object;"},

Null: {"": "Object;",
  toString$0: function(_) {
    return "null";
  }
},

Object: {"": ";",
  $eq: function(_, other) {
    return this === other;
  },
  get$hashCode: function(_) {
    return H.Primitives_objectHashCode(this);
  },
  toString$0: function(_) {
    return H.Primitives_objectToString(this);
  }
},

StackTrace: {"": "Object;"},

StringBuffer: {"": "Object;_contents<",
  get$length: function(_) {
    return this._contents.length;
  },
  write$1: function(obj) {
    var str = typeof obj === "string" ? obj : H.S(obj);
    this._contents = this._contents + str;
  },
  writeAll$2: function(objects, separator) {
    var iterator, str;
    iterator = J.get$iterator$ax(objects);
    if (!iterator.moveNext$0())
      return;
    if (separator.length === 0)
      do {
        str = iterator.get$current();
        str = typeof str === "string" ? str : H.S(str);
        this._contents = this._contents + str;
      } while (iterator.moveNext$0());
    else {
      this.write$1(iterator.get$current());
      for (; iterator.moveNext$0();) {
        this._contents = this._contents + separator;
        str = iterator.get$current();
        str = typeof str === "string" ? str : H.S(str);
        this._contents = this._contents + str;
      }
    }
  },
  toString$0: function(_) {
    return this._contents;
  },
  StringBuffer$1: function($content) {
    this._contents = $content;
  },
  static: {
StringBuffer$: function($content) {
  var t1 = new P.StringBuffer("");
  t1.StringBuffer$1($content);
  return t1;
}}

},

Symbol: {"": "Object;"}}],
["dart.dom.html", "dart:html", , W, {
_ElementFactoryProvider_createElement_tag: function(tag, typeExtension) {
  return document.createElement(tag);
},

_JenkinsSmiHash_combine: function(hash, value) {
  hash = 536870911 & hash + value;
  hash = 536870911 & hash + ((524287 & hash) << 10 >>> 0);
  return (hash ^ C.JSInt_methods.$shr(hash, 6)) >>> 0;
},

_JenkinsSmiHash_finish: function(hash) {
  hash = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
  hash = (hash ^ C.JSInt_methods.$shr(hash, 11)) >>> 0;
  return 536870911 & hash + ((16383 & hash) << 15 >>> 0);
},

_wrapZone: function(callback) {
  var t1 = $.Zone__current;
  if (t1 === C.C__RootZone)
    return callback;
  return t1.bindUnaryCallback$2$runGuarded(callback, true);
},

HtmlElement: {"": "Element;", "%": "HTMLAppletElement|HTMLAreaElement|HTMLBRElement|HTMLBaseElement|HTMLBaseFontElement|HTMLContentElement|HTMLDListElement|HTMLDataListElement|HTMLDetailsElement|HTMLDialogElement|HTMLDirectoryElement|HTMLDivElement|HTMLFieldSetElement|HTMLFontElement|HTMLFrameElement|HTMLFrameSetElement|HTMLHRElement|HTMLHeadElement|HTMLHeadingElement|HTMLHtmlElement|HTMLKeygenElement|HTMLLabelElement|HTMLLegendElement|HTMLLinkElement|HTMLMapElement|HTMLMarqueeElement|HTMLMenuElement|HTMLMetaElement|HTMLModElement|HTMLOListElement|HTMLOptGroupElement|HTMLParagraphElement|HTMLPreElement|HTMLQuoteElement|HTMLShadowElement|HTMLSpanElement|HTMLStyleElement|HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableDataCellElement|HTMLTableElement|HTMLTableHeaderCellElement|HTMLTableRowElement|HTMLTableSectionElement|HTMLTemplateElement|HTMLTitleElement|HTMLUListElement|HTMLUnknownElement;HTMLElement"},

AnchorElement: {"": "HtmlElement;",
  toString$0: function(receiver) {
    return receiver.toString();
  },
  "%": "HTMLAnchorElement"
},

BodyElement: {"": "HtmlElement;",
  get$onError: function(receiver) {
    var t1 = new W._ElementEventStreamImpl(receiver, C.EventStreamProvider_error._eventType, false);
    H.setRuntimeTypeInfo(t1, [null]);
    return t1;
  },
  get$onLoad: function(receiver) {
    var t1 = new W._ElementEventStreamImpl(receiver, C.EventStreamProvider_load._eventType, false);
    H.setRuntimeTypeInfo(t1, [null]);
    return t1;
  },
  "%": "HTMLBodyElement"
},

ButtonElement: {"": "HtmlElement;value=", "%": "HTMLButtonElement"},

CanvasElement: {"": "HtmlElement;height%,width%",
  getContext$2: function(receiver, contextId, attrs) {
    return receiver.getContext(contextId);
  },
  getContext$1: function($receiver, contextId) {
    return this.getContext$2($receiver, contextId, null);
  },
  "%": "HTMLCanvasElement"
},

CanvasRenderingContext: {"": "Interceptor;", "%": ";CanvasRenderingContext"},

CanvasRenderingContext2D: {"": "CanvasRenderingContext;fillStyle},font=,strokeStyle},textAlign},textBaseline}",
  beginPath$0: function(receiver) {
    return receiver.beginPath();
  },
  fillRect$4: function(receiver, x, y, width, height) {
    return receiver.fillRect(x, y, width, height);
  },
  getImageData$4: function(receiver, sx, sy, sw, sh) {
    return P.convertNativeToDart_ImageData(receiver.getImageData(sx, sy, sw, sh));
  },
  lineTo$2: function(receiver, x, y) {
    return receiver.lineTo(x, y);
  },
  measureText$1: function(receiver, text) {
    return receiver.measureText(text);
  },
  moveTo$2: function(receiver, x, y) {
    return receiver.moveTo(x, y);
  },
  rect$4: function(receiver, x, y, width, height) {
    return receiver.rect(x, y, width, height);
  },
  restore$0: function(receiver) {
    return receiver.restore();
  },
  save$0: function(receiver) {
    return receiver.save();
  },
  stroke$0: function(receiver) {
    return receiver.stroke();
  },
  strokeRect$4: function(receiver, x, y, width, height) {
    return receiver.strokeRect(x, y, width, height);
  },
  drawImageToRect$3$sourceRect: function(receiver, source, destRect, sourceRect) {
    var t1, t2, t3, t4;
    t1 = destRect.left;
    t2 = destRect.top;
    t3 = destRect.width;
    t4 = destRect.height;
    if (sourceRect == null)
      receiver.drawImage(source, t1, t2, t3, t4);
    else
      receiver.drawImage(source, sourceRect.left, sourceRect.top, sourceRect.width, sourceRect.height, t1, t2, t3, t4);
  },
  drawImageToRect$2: function($receiver, source, destRect) {
    return this.drawImageToRect$3$sourceRect($receiver, source, destRect, null);
  },
  drawImage$3: function(receiver, source, destX, destY) {
    return receiver.drawImage(source, destX, destY);
  },
  fillText$4: function(receiver, text, x, y, maxWidth) {
    if (maxWidth != null)
      receiver.fillText(text, x, y, maxWidth);
    else
      receiver.fillText(text, x, y);
  },
  "%": "CanvasRenderingContext2D"
},

CssStyleDeclaration: {"": "Interceptor_CssStyleDeclarationBase;length=",
  getPropertyValue$1: function(receiver, propertyName) {
    var propValue = receiver.getPropertyValue(propertyName);
    return propValue != null ? propValue : "";
  },
  setProperty$3: function(receiver, propertyName, value, priority) {
    var exception;
    try {
      if (priority == null)
        priority = "";
      receiver.setProperty(propertyName, value, priority);
      if (!!receiver.setAttribute)
        receiver.setAttribute(propertyName, value);
    } catch (exception) {
      H.unwrapException(exception);
    }

  },
  "%": "CSS2Properties|CSSStyleDeclaration|MSStyleCSSProperties"
},

Document: {"": "Node;",
  get$onError: function(receiver) {
    var t1 = new W._EventStream(receiver, C.EventStreamProvider_error._eventType, false);
    H.setRuntimeTypeInfo(t1, [null]);
    return t1;
  },
  get$onLoad: function(receiver) {
    var t1 = new W._EventStream(receiver, C.EventStreamProvider_load._eventType, false);
    H.setRuntimeTypeInfo(t1, [null]);
    return t1;
  },
  "%": "Document|HTMLDocument"
},

DomException: {"": "Interceptor;",
  toString$0: function(receiver) {
    return receiver.toString();
  },
  "%": "DOMException"
},

Element: {"": "Node;",
  get$client: function(receiver) {
    var t1 = new P.Rectangle(receiver.clientLeft, receiver.clientTop, receiver.clientWidth, receiver.clientHeight);
    H.setRuntimeTypeInfo(t1, [null]);
    return t1;
  },
  toString$0: function(receiver) {
    return receiver.localName;
  },
  get$onError: function(receiver) {
    var t1 = new W._ElementEventStreamImpl(receiver, C.EventStreamProvider_error._eventType, false);
    H.setRuntimeTypeInfo(t1, [null]);
    return t1;
  },
  get$onLoad: function(receiver) {
    var t1 = new W._ElementEventStreamImpl(receiver, C.EventStreamProvider_load._eventType, false);
    H.setRuntimeTypeInfo(t1, [null]);
    return t1;
  },
  "%": ";Element"
},

EmbedElement: {"": "HtmlElement;height%,src},width%", "%": "HTMLEmbedElement"},

ErrorEvent: {"": "Event;error=", "%": "ErrorEvent"},

Event: {"": "Interceptor;", "%": "AudioProcessingEvent|AutocompleteErrorEvent|BeforeLoadEvent|BeforeUnloadEvent|CSSFontFaceLoadEvent|CloseEvent|CustomEvent|DeviceMotionEvent|DeviceOrientationEvent|HashChangeEvent|IDBVersionChangeEvent|MIDIConnectionEvent|MIDIMessageEvent|MediaKeyEvent|MediaKeyMessageEvent|MediaKeyNeededEvent|MediaStreamEvent|MediaStreamTrackEvent|MessageEvent|MutationEvent|OfflineAudioCompletionEvent|OverflowEvent|PageTransitionEvent|PopStateEvent|ProgressEvent|RTCDTMFToneChangeEvent|RTCDataChannelEvent|RTCIceCandidateEvent|ResourceProgressEvent|SecurityPolicyViolationEvent|SpeechInputEvent|SpeechRecognitionEvent|SpeechSynthesisEvent|StorageEvent|TrackEvent|TransitionEvent|WebGLContextEvent|WebKitAnimationEvent|WebKitTransitionEvent|XMLHttpRequestProgressEvent;Event"},

EventTarget: {"": "Interceptor;",
  addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, H.convertDartClosureToJS(listener, 1), useCapture);
  },
  removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, H.convertDartClosureToJS(listener, 1), useCapture);
  },
  "%": "MediaStream;EventTarget"
},

FormElement: {"": "HtmlElement;length=", "%": "HTMLFormElement"},

IFrameElement: {"": "HtmlElement;height%,src},width%", "%": "HTMLIFrameElement"},

ImageData: {"": "Interceptor;data=,height=,width=", $isImageData: true, "%": "ImageData"},

ImageElement: {"": "HtmlElement;height%,src},width%", "%": "HTMLImageElement"},

InputElement: {"": "HtmlElement;height%,src},value=,width%", "%": "HTMLInputElement"},

KeyboardEvent: {"": "UIEvent;shiftKey=",
  get$keyCode: function(receiver) {
    return receiver.keyCode;
  },
  get$charCode: function(receiver) {
    return receiver.charCode;
  },
  "%": "KeyboardEvent"
},

LIElement: {"": "HtmlElement;value=", "%": "HTMLLIElement"},

MediaElement: {"": "HtmlElement;error=,src}", "%": "HTMLAudioElement;HTMLMediaElement"},

MeterElement: {"": "HtmlElement;value=", "%": "HTMLMeterElement"},

MouseEvent: {"": "UIEvent;button=,shiftKey=",
  get$client: function(receiver) {
    var t1 = new P.Point(receiver.clientX, receiver.clientY);
    H.setRuntimeTypeInfo(t1, [null]);
    return t1;
  },
  "%": "DragEvent|MSPointerEvent|MouseEvent|MouseScrollEvent|MouseWheelEvent|PointerEvent|WheelEvent"
},

Node: {"": "EventTarget;",
  toString$0: function(receiver) {
    var t1 = receiver.nodeValue;
    return t1 == null ? J.Interceptor.prototype.toString$0.call(this, receiver) : t1;
  },
  "%": ";Node"
},

ObjectElement: {"": "HtmlElement;height%,width%", "%": "HTMLObjectElement"},

OptionElement: {"": "HtmlElement;value=", "%": "HTMLOptionElement"},

OutputElement: {"": "HtmlElement;value=", "%": "HTMLOutputElement"},

ParamElement: {"": "HtmlElement;value=", "%": "HTMLParamElement"},

ProgressElement: {"": "HtmlElement;value=", "%": "HTMLProgressElement"},

ScriptElement: {"": "HtmlElement;src}", "%": "HTMLScriptElement"},

SelectElement: {"": "HtmlElement;length=,value=", "%": "HTMLSelectElement"},

SourceElement: {"": "HtmlElement;src}", "%": "HTMLSourceElement"},

SpeechRecognitionError: {"": "Event;error=", "%": "SpeechRecognitionError"},

TextAreaElement: {"": "HtmlElement;value=", "%": "HTMLTextAreaElement"},

TextMetrics: {"": "Interceptor;width=", "%": "TextMetrics"},

TouchEvent: {"": "UIEvent;shiftKey=", "%": "TouchEvent"},

TrackElement: {"": "HtmlElement;src}", "%": "HTMLTrackElement"},

UIEvent: {"": "Event;", "%": "CompositionEvent|FocusEvent|SVGZoomEvent|TextEvent;UIEvent"},

VideoElement: {"": "MediaElement;height%,width%", "%": "HTMLVideoElement"},

Window: {"": "EventTarget;",
  toString$0: function(receiver) {
    return receiver.toString();
  },
  get$onError: function(receiver) {
    var t1 = new W._EventStream(receiver, C.EventStreamProvider_error._eventType, false);
    H.setRuntimeTypeInfo(t1, [null]);
    return t1;
  },
  get$onLoad: function(receiver) {
    var t1 = new W._EventStream(receiver, C.EventStreamProvider_load._eventType, false);
    H.setRuntimeTypeInfo(t1, [null]);
    return t1;
  },
  "%": "DOMWindow|Window"
},

_ClientRect: {"": "Interceptor;height=,left=,top=,width=",
  toString$0: function(receiver) {
    return "Rectangle (" + H.S(receiver.left) + ", " + H.S(receiver.top) + ") " + H.S(receiver.width) + " x " + H.S(receiver.height);
  },
  $eq: function(receiver, other) {
    var t1, t2, t3;
    if (other == null)
      return false;
    t1 = J.getInterceptor$x(other);
    if (typeof other !== "object" || other === null || !t1.$isRectangle)
      return false;
    t2 = receiver.left;
    t3 = t1.get$left(other);
    if (t2 == null ? t3 == null : t2 === t3) {
      t2 = receiver.top;
      t3 = t1.get$top(other);
      if (t2 == null ? t3 == null : t2 === t3) {
        t2 = receiver.width;
        t3 = t1.get$width(other);
        if (t2 == null ? t3 == null : t2 === t3) {
          t2 = receiver.height;
          t1 = t1.get$height(other);
          t1 = t2 == null ? t1 == null : t2 === t1;
        } else
          t1 = false;
      } else
        t1 = false;
    } else
      t1 = false;
    return t1;
  },
  get$hashCode: function(receiver) {
    var t1, t2, t3, t4;
    t1 = J.get$hashCode$(receiver.left);
    t2 = J.get$hashCode$(receiver.top);
    t3 = J.get$hashCode$(receiver.width);
    t4 = J.get$hashCode$(receiver.height);
    return W._JenkinsSmiHash_finish(W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(0, t1), t2), t3), t4));
  },
  $isRectangle: true,
  $asRectangle: function() {
    return [null];
  },
  "%": "ClientRect|DOMRect"
},

Interceptor_CssStyleDeclarationBase: {"": "Interceptor+CssStyleDeclarationBase;"},

CssStyleDeclarationBase: {"": "Object;",
  set$backgroundColor: function(receiver, value) {
    this.setProperty$3(receiver, "background-color", value, "");
  },
  set$color: function(receiver, value) {
    this.setProperty$3(receiver, "color", value, "");
  },
  set$cursor: function(receiver, value) {
    this.setProperty$3(receiver, "cursor", value, "");
  },
  get$height: function(receiver) {
    return this.getPropertyValue$1(receiver, "height");
  },
  set$src: function(receiver, value) {
    this.setProperty$3(receiver, "src", value, "");
  },
  get$width: function(receiver) {
    return this.getPropertyValue$1(receiver, "width");
  }
},

EventStreamProvider: {"": "Object;_eventType"},

_EventStream: {"": "Stream;_html$_target,_eventType,_useCapture",
  listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
    var t1 = new W._EventStreamSubscription(0, this._html$_target, this._eventType, W._wrapZone(onData), this._useCapture);
    H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(this, "_EventStream", 0)]);
    t1._tryResume$0();
    return t1;
  },
  listen$1: function(onData) {
    return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
  },
  $asStream: null
},

_ElementEventStreamImpl: {"": "_EventStream;_html$_target,_eventType,_useCapture", $as_EventStream: null},

_EventStreamSubscription: {"": "StreamSubscription;_pauseCount,_html$_target,_eventType,_onData,_useCapture",
  cancel$0: function() {
    if (this._html$_target == null)
      return;
    this._unlisten$0();
    this._html$_target = null;
    this._onData = null;
  },
  onError$1: function(_, handleError) {
  },
  get$onError: function(_receiver) {
    return new P.BoundClosure$i1(this, W._EventStreamSubscription.prototype.onError$1, _receiver, "onError$1");
  },
  _tryResume$0: function() {
    var t1 = this._onData;
    if (t1 != null && this._pauseCount <= 0)
      J.addEventListener$3$x(this._html$_target, this._eventType, t1, this._useCapture);
  },
  _unlisten$0: function() {
    var t1 = this._onData;
    if (t1 != null)
      J.removeEventListener$3$x(this._html$_target, this._eventType, t1, this._useCapture);
  },
  $asStreamSubscription: null
}}],
["dart.dom.svg", "dart:svg", , P, {
FEBlendElement: {"": "SvgElement;height=,width=,x=,y=", "%": "SVGFEBlendElement"},

FEColorMatrixElement: {"": "SvgElement;height=,width=,x=,y=", "%": "SVGFEColorMatrixElement"},

FEComponentTransferElement: {"": "SvgElement;height=,width=,x=,y=", "%": "SVGFEComponentTransferElement"},

FECompositeElement: {"": "SvgElement;height=,width=,x=,y=", "%": "SVGFECompositeElement"},

FEConvolveMatrixElement: {"": "SvgElement;height=,width=,x=,y=", "%": "SVGFEConvolveMatrixElement"},

FEDiffuseLightingElement: {"": "SvgElement;height=,width=,x=,y=", "%": "SVGFEDiffuseLightingElement"},

FEDisplacementMapElement: {"": "SvgElement;height=,width=,x=,y=", "%": "SVGFEDisplacementMapElement"},

FEFloodElement: {"": "SvgElement;height=,width=,x=,y=", "%": "SVGFEFloodElement"},

FEGaussianBlurElement: {"": "SvgElement;height=,width=,x=,y=", "%": "SVGFEGaussianBlurElement"},

FEImageElement: {"": "SvgElement;height=,width=,x=,y=", "%": "SVGFEImageElement"},

FEMergeElement: {"": "SvgElement;height=,width=,x=,y=", "%": "SVGFEMergeElement"},

FEMorphologyElement: {"": "SvgElement;height=,width=,x=,y=", "%": "SVGFEMorphologyElement"},

FEOffsetElement: {"": "SvgElement;height=,width=,x=,y=", "%": "SVGFEOffsetElement"},

FEPointLightElement: {"": "SvgElement;x=,y=", "%": "SVGFEPointLightElement"},

FESpecularLightingElement: {"": "SvgElement;height=,width=,x=,y=", "%": "SVGFESpecularLightingElement"},

FESpotLightElement: {"": "SvgElement;x=,y=", "%": "SVGFESpotLightElement"},

FETileElement: {"": "SvgElement;height=,width=,x=,y=", "%": "SVGFETileElement"},

FETurbulenceElement: {"": "SvgElement;height=,width=,x=,y=", "%": "SVGFETurbulenceElement"},

FilterElement: {"": "SvgElement;height=,width=,x=,y=", "%": "SVGFilterElement"},

ForeignObjectElement: {"": "GraphicsElement;height=,width=,x=,y=", "%": "SVGForeignObjectElement"},

GraphicsElement: {"": "SvgElement;", "%": "SVGAElement|SVGCircleElement|SVGClipPathElement|SVGDefsElement|SVGEllipseElement|SVGGElement|SVGLineElement|SVGPathElement|SVGPolygonElement|SVGPolylineElement|SVGSwitchElement;SVGGraphicsElement"},

ImageElement0: {"": "GraphicsElement;height=,width=,x=,y=", "%": "SVGImageElement"},

MaskElement: {"": "SvgElement;height=,width=,x=,y=", "%": "SVGMaskElement"},

PatternElement: {"": "SvgElement;height=,width=,x=,y=", "%": "SVGPatternElement"},

Rect: {"": "Interceptor;height=,width=,x=,y=", "%": "SVGRect"},

RectElement: {"": "GraphicsElement;height=,width=,x=,y=", "%": "SVGRectElement"},

SvgElement: {"": "Element;", "%": "SVGAltGlyphDefElement|SVGAltGlyphItemElement|SVGAnimateColorElement|SVGAnimateElement|SVGAnimateMotionElement|SVGAnimateTransformElement|SVGAnimationElement|SVGComponentTransferFunctionElement|SVGCursorElement|SVGDescElement|SVGFEDistantLightElement|SVGFEDropShadowElement|SVGFEFuncAElement|SVGFEFuncBElement|SVGFEFuncGElement|SVGFEFuncRElement|SVGFEMergeNodeElement|SVGFontElement|SVGFontFaceElement|SVGFontFaceFormatElement|SVGFontFaceNameElement|SVGFontFaceSrcElement|SVGFontFaceUriElement|SVGGlyphElement|SVGGlyphRefElement|SVGGradientElement|SVGHKernElement|SVGLinearGradientElement|SVGMPathElement|SVGMarkerElement|SVGMetadataElement|SVGMissingGlyphElement|SVGRadialGradientElement|SVGScriptElement|SVGSetElement|SVGStopElement|SVGStyleElement|SVGSymbolElement|SVGTitleElement|SVGVKernElement|SVGViewElement;SVGElement"},

SvgSvgElement: {"": "GraphicsElement;height=,width=,x=,y=", "%": "SVGSVGElement"},

TextContentElement: {"": "GraphicsElement;", "%": "SVGTextPathElement;SVGTextContentElement"},

TextPositioningElement: {"": "TextContentElement;x=,y=", "%": "SVGAltGlyphElement|SVGTSpanElement|SVGTextElement|SVGTextPositioningElement"},

UseElement: {"": "GraphicsElement;height=,width=,x=,y=", "%": "SVGUseElement"}}],
["dart.dom.web_gl", "dart:web_gl", , P, {
RenderingContext: {"": "CanvasRenderingContext;",
  activeTexture$1: function(receiver, texture) {
    return receiver.activeTexture(texture);
  },
  attachShader$2: function(receiver, program, shader) {
    return receiver.attachShader(program, shader);
  },
  bindBuffer$2: function(receiver, target, buffer) {
    return receiver.bindBuffer(target, buffer);
  },
  bindTexture$2: function(receiver, target, texture) {
    return receiver.bindTexture(target, texture);
  },
  bufferDataTyped$3: function(receiver, target, data, usage) {
    return receiver.bufferData(target, data, usage);
  },
  clear$1: function(receiver, mask) {
    return receiver.clear(mask);
  },
  clearColor$4: function(receiver, red, green, blue, alpha) {
    return receiver.clearColor(red, green, blue, alpha);
  },
  compileShader$1: function(receiver, shader) {
    return receiver.compileShader(shader);
  },
  createBuffer$0: function(receiver) {
    return receiver.createBuffer();
  },
  createProgram$0: function(receiver) {
    return receiver.createProgram();
  },
  createShader$1: function(receiver, type) {
    return receiver.createShader(type);
  },
  createTexture$0: function(receiver) {
    return receiver.createTexture();
  },
  disableVertexAttribArray$1: function(receiver, index) {
    return receiver.disableVertexAttribArray(index);
  },
  drawElements$4: function(receiver, mode, count, type, offset) {
    return receiver.drawElements(mode, count, type, offset);
  },
  enable$1: function(receiver, cap) {
    return receiver.enable(cap);
  },
  enableVertexAttribArray$1: function(receiver, index) {
    return receiver.enableVertexAttribArray(index);
  },
  flush$0: function(receiver) {
    return receiver.flush();
  },
  getAttribLocation$2: function(receiver, program, $name) {
    return receiver.getAttribLocation(program, $name);
  },
  getProgramInfoLog$1: function(receiver, program) {
    return receiver.getProgramInfoLog(program);
  },
  getProgramParameter$2: function(receiver, program, pname) {
    return receiver.getProgramParameter(program, pname);
  },
  getShaderInfoLog$1: function(receiver, shader) {
    return receiver.getShaderInfoLog(shader);
  },
  getShaderParameter$2: function(receiver, shader, pname) {
    return receiver.getShaderParameter(shader, pname);
  },
  getUniformLocation$2: function(receiver, program, $name) {
    return receiver.getUniformLocation(program, $name);
  },
  linkProgram$1: function(receiver, program) {
    return receiver.linkProgram(program);
  },
  pixelStorei$2: function(receiver, pname, param) {
    return receiver.pixelStorei(pname, param);
  },
  shaderSource$2: function(receiver, shader, string) {
    return receiver.shaderSource(shader, string);
  },
  texImage2DImage$6: function(receiver, target, level, internalformat, format, type, image) {
    return receiver.texImage2D(target, level, internalformat, format, type, image);
  },
  texParameteri$3: function(receiver, target, pname, param) {
    return receiver.texParameteri(target, pname, param);
  },
  texSubImage2DImageData$7: function(receiver, target, level, xoffset, yoffset, format, type, pixels) {
    receiver.texSubImage2D(target, level, xoffset, yoffset, format, type, P.convertDartToNative_ImageData(pixels));
    return;
  },
  uniform1i$2: function(receiver, $location, x) {
    return receiver.uniform1i($location, x);
  },
  uniformMatrix4fv$3: function(receiver, $location, transpose, array) {
    return receiver.uniformMatrix4fv($location, transpose, array);
  },
  useProgram$1: function(receiver, program) {
    return receiver.useProgram(program);
  },
  vertexAttribPointer$6: function(receiver, indx, size, type, normalized, stride, offset) {
    return receiver.vertexAttribPointer(indx, size, type, normalized, stride, offset);
  },
  viewport$4: function(receiver, x, y, width, height) {
    return receiver.viewport(x, y, width, height);
  },
  "%": "WebGLRenderingContext"
}}],
["dart.isolate", "dart:isolate", , P, {
ReceivePort: {"": "Object;"}}],
["dart.math", "dart:math", , P, {
_JenkinsSmiHash_combine0: function(hash, value) {
  hash = 536870911 & hash + value;
  hash = 536870911 & hash + ((524287 & hash) << 10 >>> 0);
  return (hash ^ C.JSInt_methods.$shr(hash, 6)) >>> 0;
},

_JenkinsSmiHash_finish0: function(hash) {
  hash = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
  hash = (hash ^ C.JSInt_methods.$shr(hash, 11)) >>> 0;
  return 536870911 & hash + ((16383 & hash) << 15 >>> 0);
},

min: function(a, b) {
  if (typeof a !== "number")
    throw H.wrapException(new P.ArgumentError(a));
  if (typeof b !== "number")
    throw H.wrapException(new P.ArgumentError(b));
  if (a > b)
    return b;
  if (a < b)
    return a;
  if (typeof b === "number") {
    if (typeof a === "number")
      if (a === 0)
        return (a + b) * a * b;
    if (a === 0 && C.JSDouble_methods.get$isNegative(b) || C.JSDouble_methods.get$isNaN(b))
      return b;
    return a;
  }
  return a;
},

max: function(a, b) {
  var t1;
  if (typeof a !== "number")
    throw H.wrapException(new P.ArgumentError(a));
  if (typeof b !== "number")
    throw H.wrapException(new P.ArgumentError(b));
  if (a > b)
    return a;
  if (a < b)
    return b;
  if (typeof b === "number") {
    if (typeof a === "number")
      if (a === 0)
        return a + b;
    if (C.JSNumber_methods.get$isNaN(b))
      return b;
    return a;
  }
  if (b === 0)
    t1 = a === 0 ? 1 / a < 0 : a < 0;
  else
    t1 = false;
  if (t1)
    return b;
  return a;
},

Point: {"": "Object;x>,y>",
  toString$0: function(_) {
    return "Point(" + H.S(this.x) + ", " + H.S(this.y) + ")";
  },
  $eq: function(_, other) {
    var t1, t2;
    if (other == null)
      return false;
    t1 = J.getInterceptor(other);
    if (typeof other !== "object" || other === null || !t1.$isPoint)
      return false;
    t1 = this.x;
    t2 = other.x;
    if (t1 == null ? t2 == null : t1 === t2) {
      t1 = this.y;
      t2 = other.y;
      t2 = t1 == null ? t2 == null : t1 === t2;
      t1 = t2;
    } else
      t1 = false;
    return t1;
  },
  get$hashCode: function(_) {
    var t1, t2;
    t1 = J.get$hashCode$(this.x);
    t2 = J.get$hashCode$(this.y);
    return P._JenkinsSmiHash_finish0(P._JenkinsSmiHash_combine0(P._JenkinsSmiHash_combine0(0, t1), t2));
  },
  $add: function(_, other) {
    var t1, t2, t3, t4;
    t1 = this.x;
    t2 = J.getInterceptor$x(other);
    t3 = t2.get$x(other);
    if (typeof t1 !== "number")
      throw t1.$add();
    if (typeof t3 !== "number")
      throw H.iae(t3);
    t4 = this.y;
    t2 = t2.get$y(other);
    if (typeof t4 !== "number")
      throw t4.$add();
    if (typeof t2 !== "number")
      throw H.iae(t2);
    t2 = new P.Point(t1 + t3, t4 + t2);
    H.setRuntimeTypeInfo(t2, [H.getRuntimeTypeArgument(this, "Point", 0)]);
    return t2;
  },
  $sub: function(_, other) {
    var t1, t2, t3, t4;
    t1 = this.x;
    t2 = J.getInterceptor$x(other);
    t3 = t2.get$x(other);
    if (typeof t1 !== "number")
      throw t1.$sub();
    if (typeof t3 !== "number")
      throw H.iae(t3);
    t4 = this.y;
    t2 = t2.get$y(other);
    if (typeof t4 !== "number")
      throw t4.$sub();
    if (typeof t2 !== "number")
      throw H.iae(t2);
    t2 = new P.Point(t1 - t3, t4 - t2);
    H.setRuntimeTypeInfo(t2, [H.getRuntimeTypeArgument(this, "Point", 0)]);
    return t2;
  },
  $mul: function(_, factor) {
    var t1, t2;
    t1 = this.x;
    if (typeof t1 !== "number")
      throw t1.$mul();
    if (typeof factor !== "number")
      throw H.iae(factor);
    t2 = this.y;
    if (typeof t2 !== "number")
      throw t2.$mul();
    t2 = new P.Point(t1 * factor, t2 * factor);
    H.setRuntimeTypeInfo(t2, [H.getRuntimeTypeArgument(this, "Point", 0)]);
    return t2;
  },
  $isPoint: true
},

_RectangleBase: {"": "Object;",
  toString$0: function(_) {
    return "Rectangle (" + H.S(this.get$left(this)) + ", " + H.S(this.top) + ") " + H.S(this.width) + " x " + H.S(this.height);
  },
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    t1 = J.getInterceptor$x(other);
    if (typeof other !== "object" || other === null || !t1.$isRectangle)
      return false;
    return J.$eq(this.get$left(this), t1.get$left(other)) && J.$eq(this.top, t1.get$top(other)) && J.$eq(this.width, t1.get$width(other)) && J.$eq(this.height, t1.get$height(other));
  },
  get$hashCode: function(_) {
    var t1, t2, t3, t4;
    t1 = J.get$hashCode$(this.get$left(this));
    t2 = J.get$hashCode$(this.top);
    t3 = J.get$hashCode$(this.width);
    t4 = J.get$hashCode$(this.height);
    return P._JenkinsSmiHash_finish0(P._JenkinsSmiHash_combine0(P._JenkinsSmiHash_combine0(P._JenkinsSmiHash_combine0(P._JenkinsSmiHash_combine0(0, t1), t2), t3), t4));
  }
},

Rectangle: {"": "_RectangleBase;left>,top>,width>,height>", $isRectangle: true, $asRectangle: null, $as_RectangleBase: null}}],
["dart.typed_data", "dart:typed_data", , P, {
TypedData: {"": "Interceptor;",
  _invalidIndex$2: function(receiver, index, $length) {
    var t1 = J.getInterceptor$n(index);
    if (t1.$lt(index, 0) || t1.$ge(index, $length))
      throw H.wrapException(P.RangeError$range(index, 0, $length));
    else
      throw H.wrapException(P.ArgumentError$("Invalid list index " + H.S(index)));
  },
  "%": "DataView;ArrayBufferView;TypedData_ListMixin|TypedData_ListMixin_FixedLengthListMixin|TypedData_ListMixin0|TypedData_ListMixin_FixedLengthListMixin0|TypedData_ListMixin1|TypedData_ListMixin_FixedLengthListMixin1|TypedData_ListMixin2|TypedData_ListMixin_FixedLengthListMixin2|TypedData_ListMixin3|TypedData_ListMixin_FixedLengthListMixin3|TypedData_ListMixin4|TypedData_ListMixin_FixedLengthListMixin4|TypedData_ListMixin5|TypedData_ListMixin_FixedLengthListMixin5|TypedData_ListMixin6|TypedData_ListMixin_FixedLengthListMixin6|TypedData_ListMixin7|TypedData_ListMixin_FixedLengthListMixin7|Int64List|Uint64List"
},

Float32List: {"": "TypedData_ListMixin_FixedLengthListMixin;",
  get$length: function(receiver) {
    return C.JS_CONST_ZYJ(receiver);
  },
  $index: function(receiver, index) {
    var t1, t2;
    t1 = C.JS_CONST_ZYJ(receiver);
    if (!(index >>> 0 != index)) {
      if (typeof index !== "number")
        throw index.$ge();
      t2 = index >= t1;
    } else
      t2 = true;
    if (t2)
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $asList: function() {
    return [J.JSDouble];
  },
  $isList: true,
  $isEfficientLength: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "Float32Array"
},

Float64List: {"": "TypedData_ListMixin_FixedLengthListMixin0;",
  get$length: function(receiver) {
    return C.JS_CONST_ZYJ(receiver);
  },
  $index: function(receiver, index) {
    var t1, t2;
    t1 = C.JS_CONST_ZYJ(receiver);
    if (!(index >>> 0 != index)) {
      if (typeof index !== "number")
        throw index.$ge();
      t2 = index >= t1;
    } else
      t2 = true;
    if (t2)
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $asList: function() {
    return [J.JSDouble];
  },
  $isList: true,
  $isEfficientLength: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "Float64Array"
},

Int16List: {"": "TypedData_ListMixin_FixedLengthListMixin1;",
  get$length: function(receiver) {
    return C.JS_CONST_ZYJ(receiver);
  },
  $index: function(receiver, index) {
    var t1, t2;
    t1 = C.JS_CONST_ZYJ(receiver);
    if (!(index >>> 0 != index)) {
      if (typeof index !== "number")
        throw index.$ge();
      t2 = index >= t1;
    } else
      t2 = true;
    if (t2)
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $asList: function() {
    return [J.JSInt];
  },
  $isList: true,
  $isEfficientLength: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "Int16Array"
},

Int32List: {"": "TypedData_ListMixin_FixedLengthListMixin2;",
  get$length: function(receiver) {
    return C.JS_CONST_ZYJ(receiver);
  },
  $index: function(receiver, index) {
    var t1, t2;
    t1 = C.JS_CONST_ZYJ(receiver);
    if (!(index >>> 0 != index)) {
      if (typeof index !== "number")
        throw index.$ge();
      t2 = index >= t1;
    } else
      t2 = true;
    if (t2)
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $asList: function() {
    return [J.JSInt];
  },
  $isList: true,
  $isEfficientLength: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "Int32Array"
},

Int8List: {"": "TypedData_ListMixin_FixedLengthListMixin3;",
  get$length: function(receiver) {
    return C.JS_CONST_ZYJ(receiver);
  },
  $index: function(receiver, index) {
    var t1, t2;
    t1 = C.JS_CONST_ZYJ(receiver);
    if (!(index >>> 0 != index)) {
      if (typeof index !== "number")
        throw index.$ge();
      t2 = index >= t1;
    } else
      t2 = true;
    if (t2)
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $asList: function() {
    return [J.JSInt];
  },
  $isList: true,
  $isEfficientLength: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "Int8Array"
},

Uint16List: {"": "TypedData_ListMixin_FixedLengthListMixin4;",
  get$length: function(receiver) {
    return C.JS_CONST_ZYJ(receiver);
  },
  $index: function(receiver, index) {
    var t1, t2;
    t1 = C.JS_CONST_ZYJ(receiver);
    if (!(index >>> 0 != index)) {
      if (typeof index !== "number")
        throw index.$ge();
      t2 = index >= t1;
    } else
      t2 = true;
    if (t2)
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $asList: function() {
    return [J.JSInt];
  },
  $isList: true,
  $isEfficientLength: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "Uint16Array"
},

Uint32List: {"": "TypedData_ListMixin_FixedLengthListMixin5;",
  get$length: function(receiver) {
    return C.JS_CONST_ZYJ(receiver);
  },
  $index: function(receiver, index) {
    var t1, t2;
    t1 = C.JS_CONST_ZYJ(receiver);
    if (!(index >>> 0 != index)) {
      if (typeof index !== "number")
        throw index.$ge();
      t2 = index >= t1;
    } else
      t2 = true;
    if (t2)
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $asList: function() {
    return [J.JSInt];
  },
  $isList: true,
  $isEfficientLength: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "Uint32Array"
},

Uint8ClampedList: {"": "TypedData_ListMixin_FixedLengthListMixin6;",
  get$length: function(receiver) {
    return C.JS_CONST_ZYJ(receiver);
  },
  $index: function(receiver, index) {
    var t1, t2;
    t1 = C.JS_CONST_ZYJ(receiver);
    if (!(index >>> 0 != index)) {
      if (typeof index !== "number")
        throw index.$ge();
      t2 = index >= t1;
    } else
      t2 = true;
    if (t2)
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $asList: function() {
    return [J.JSInt];
  },
  $isList: true,
  $isEfficientLength: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "CanvasPixelArray|Uint8ClampedArray"
},

Uint8List: {"": "TypedData_ListMixin_FixedLengthListMixin7;",
  get$length: function(receiver) {
    return C.JS_CONST_ZYJ(receiver);
  },
  $index: function(receiver, index) {
    var t1, t2;
    t1 = C.JS_CONST_ZYJ(receiver);
    if (!(index >>> 0 != index)) {
      if (typeof index !== "number")
        throw index.$ge();
      t2 = index >= t1;
    } else
      t2 = true;
    if (t2)
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $asList: function() {
    return [J.JSInt];
  },
  $isList: true,
  $isEfficientLength: true,
  $isJavaScriptIndexingBehavior: true,
  "%": ";Uint8Array"
},

TypedData_ListMixin: {"": "TypedData+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true},

TypedData_ListMixin_FixedLengthListMixin: {"": "TypedData_ListMixin+FixedLengthListMixin;", $asList: null},

TypedData_ListMixin0: {"": "TypedData+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true},

TypedData_ListMixin_FixedLengthListMixin0: {"": "TypedData_ListMixin0+FixedLengthListMixin;", $asList: null},

TypedData_ListMixin1: {"": "TypedData+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true},

TypedData_ListMixin_FixedLengthListMixin1: {"": "TypedData_ListMixin1+FixedLengthListMixin;", $asList: null},

TypedData_ListMixin2: {"": "TypedData+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true},

TypedData_ListMixin_FixedLengthListMixin2: {"": "TypedData_ListMixin2+FixedLengthListMixin;", $asList: null},

TypedData_ListMixin3: {"": "TypedData+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true},

TypedData_ListMixin_FixedLengthListMixin3: {"": "TypedData_ListMixin3+FixedLengthListMixin;", $asList: null},

TypedData_ListMixin4: {"": "TypedData+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true},

TypedData_ListMixin_FixedLengthListMixin4: {"": "TypedData_ListMixin4+FixedLengthListMixin;", $asList: null},

TypedData_ListMixin5: {"": "TypedData+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true},

TypedData_ListMixin_FixedLengthListMixin5: {"": "TypedData_ListMixin5+FixedLengthListMixin;", $asList: null},

TypedData_ListMixin6: {"": "TypedData+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true},

TypedData_ListMixin_FixedLengthListMixin6: {"": "TypedData_ListMixin6+FixedLengthListMixin;", $asList: null},

TypedData_ListMixin7: {"": "TypedData+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true},

TypedData_ListMixin_FixedLengthListMixin7: {"": "TypedData_ListMixin7+FixedLengthListMixin;", $asList: null},

Int64List: {"": "TypedData;", $isList: true,
  $asList: function() {
    return [J.JSInt];
  },
  $isEfficientLength: true,
  $isJavaScriptIndexingBehavior: true,
  static: {
"": "Int64List_BYTES_PER_ELEMENT",
}

},

Uint64List: {"": "TypedData;", $isList: true,
  $asList: function() {
    return [J.JSInt];
  },
  $isEfficientLength: true,
  $isJavaScriptIndexingBehavior: true,
  static: {
"": "Uint64List_BYTES_PER_ELEMENT",
}

}}],
["gwendart", "src/gwendart.dart", , X, {
Align_PlaceRightBottom: function(control, anchor, spacing) {
  var t1, t2, t3;
  t1 = anchor.m_Bounds;
  t1 = J.$add$ns(J.$add$ns(J.$add$ns(t1.left, t1.width), anchor.m_Margin.Right), spacing);
  t2 = J.$add$ns(J.$sub$n(anchor.m_Bounds.top, control.m_Bounds.height), anchor.m_Bounds.height);
  t3 = control.m_Bounds;
  control.SetBounds$4(t1, t2, t3.width, t3.height);
},

Neutral_GetTimeInSeconds: function() {
  var now = new P.DateTime(Date.now(), false);
  if (now.date === void 0)
    now.date = new Date(now.millisecondsSinceEpoch);
  now.date;
  return C.JSNumber_methods.$tdiv(new P.Duration(0 + (now.millisecondsSinceEpoch - $.get$Neutral__firstTime().millisecondsSinceEpoch) * 1000 + 0)._duration, 1000000);
},

GwenUtil_icharIsControl: function(utf16) {
  if (utf16 < 32)
    return true;
  if (utf16 >= 127 && utf16 <= 159)
    return true;
  return false;
},

GwenUtil_scharIsControl: function(schar) {
  if (schar.length < 1)
    return false;
  return X.GwenUtil_icharIsControl(C.JSString_methods.codeUnitAt$1(schar, 0));
},

InputHandler_init: function() {
  var t1, i, t2;
  for (t1 = C.GwenKey_16.value, i = 0; i < t1; ++i) {
    t2 = $.get$InputHandler_m_KeyData().KeyState;
    if (i >= t2.length)
      throw H.ioore(t2, i);
    t2[i] = false;
    t2 = $.get$InputHandler_m_KeyData().NextRepeat;
    if (i >= t2.length)
      throw H.ioore(t2, i);
    t2[i] = 0;
  }
},

InputHandler_HandleAccelerator: function(canvas, chr) {
  var t1, t2, accelString;
  t1 = $.get$InputHandler_m_KeyData().KeyState;
  t2 = C.GwenKey_11.value;
  if (t2 < 0 || t2 >= t1.length)
    throw H.ioore(t1, t2);
  accelString = t1[t2] === true ? "" + "CTRL+" : "";
  t1 = $.get$InputHandler_m_KeyData().KeyState;
  t2 = C.GwenKey_6.value;
  if (t2 < 0 || t2 >= t1.length)
    throw H.ioore(t1, t2);
  accelString = (t1[t2] === true ? accelString + "SHIFT+" : accelString) + chr;
  t1 = $.InputHandler_KeyboardFocus;
  if (t1 != null && t1.HandleAccelerator$1(accelString))
    return true;
  t1 = $.InputHandler_MouseFocus;
  if (t1 != null && t1.HandleAccelerator$1(accelString))
    return true;
  if (canvas.HandleAccelerator$1(accelString))
    return true;
  return false;
},

InputHandler_OnCanvasThink: function(control) {
  var t1, time, i, t2, t3, now;
  t1 = $.InputHandler_MouseFocus;
  if (t1 != null && !t1.get$IsVisible())
    $.InputHandler_MouseFocus = null;
  t1 = $.InputHandler_KeyboardFocus;
  if (t1 != null)
    t1 = !t1.get$IsVisible() || $.InputHandler_KeyboardFocus.m_KeyboardInputEnabled !== true;
  else
    t1 = false;
  if (t1)
    $.InputHandler_KeyboardFocus = null;
  t1 = $.InputHandler_KeyboardFocus;
  if (null == t1)
    return;
  if (t1.GetCanvas$0() !== control)
    return;
  time = X.Neutral_GetTimeInSeconds();
  for (t1 = C.GwenKey_16.value, i = 0; i < t1; ++i) {
    t2 = $.get$InputHandler_m_KeyData().KeyState;
    if (i >= t2.length)
      throw H.ioore(t2, i);
    if (t2[i] === true) {
      t2 = $.get$InputHandler_m_KeyData().Target;
      t3 = $.InputHandler_KeyboardFocus;
      t3 = t2 == null ? t3 != null : t2 !== t3;
      t2 = t3;
    } else
      t2 = false;
    if (t2) {
      t2 = $.get$InputHandler_m_KeyData().KeyState;
      if (i >= t2.length)
        throw H.ioore(t2, i);
      t2[i] = false;
      continue;
    }
    t2 = $.get$InputHandler_m_KeyData().KeyState;
    if (i >= t2.length)
      throw H.ioore(t2, i);
    if (t2[i] === true) {
      t2 = $.get$InputHandler_m_KeyData().NextRepeat;
      if (i >= t2.length)
        throw H.ioore(t2, i);
      t2 = t2[i];
      if (typeof t2 !== "number")
        throw H.iae(t2);
      t2 = time > t2;
    } else
      t2 = false;
    if (t2) {
      t2 = $.get$InputHandler_m_KeyData().NextRepeat;
      now = new P.DateTime(Date.now(), false);
      if (now.date === void 0)
        now.date = new Date(now.millisecondsSinceEpoch);
      now.date;
      t3 = C.JSNumber_methods.$tdiv(new P.Duration(0 + (now.millisecondsSinceEpoch - $.get$Neutral__firstTime().millisecondsSinceEpoch) * 1000 + 0)._duration, 1000000);
      if (i >= t2.length)
        throw H.ioore(t2, i);
      t2[i] = t3 + 0.03;
      t2 = $.InputHandler_KeyboardFocus;
      if (t2 != null)
        t2.OnKeyPressed$2(X.GwenKey_getKeyFromValue(i), true);
    }
  }
},

InputHandler_OnMouseClicked: function(canvas, mouseButton, down) {
  var t1, t2, isDoubleClick;
  if (down) {
    t1 = $.InputHandler_HoveredControl;
    t1 = null == t1 || !t1.get$IsMenuComponent();
  } else
    t1 = false;
  if (t1)
    canvas.CloseMenus$0();
  t1 = $.InputHandler_HoveredControl;
  if (null == t1)
    return false;
  if (t1.GetCanvas$0() !== canvas)
    return false;
  if (!$.InputHandler_HoveredControl.get$IsVisible())
    return false;
  if ($.InputHandler_HoveredControl === canvas)
    return false;
  if (mouseButton > 5)
    return false;
  if (mouseButton === 0)
    $.get$InputHandler_m_KeyData().LeftMouseDown = down;
  else if (mouseButton === 1)
    $.get$InputHandler_m_KeyData().RightMouseDown = down;
  if (down) {
    t1 = $.get$InputHandler__lastClickPos().x;
    t2 = $.get$InputHandler_MousePosition().x;
    if (t1 == null ? t2 == null : t1 === t2) {
      t1 = $.get$InputHandler__lastClickPos().y;
      t2 = $.get$InputHandler_MousePosition().y;
      if (t1 == null ? t2 == null : t1 === t2) {
        t1 = X.Neutral_GetTimeInSeconds();
        t2 = X.InputHandler_ListLastClickTimes();
        if (mouseButton < 0 || mouseButton >= t2.length)
          throw H.ioore(t2, mouseButton);
        t2 = t2[mouseButton];
        if (typeof t2 !== "number")
          throw H.iae(t2);
        t2 = t1 - t2 < 0.5;
        t1 = t2;
      } else
        t1 = false;
    } else
      t1 = false;
  } else
    t1 = false;
  isDoubleClick = t1 && true;
  if (down && !isDoubleClick) {
    t1 = X.InputHandler_ListLastClickTimes();
    t2 = X.Neutral_GetTimeInSeconds();
    if (mouseButton < 0 || mouseButton >= t1.length)
      throw H.ioore(t1, mouseButton);
    t1[mouseButton] = t2;
    t2 = new P.Point($.get$InputHandler_MousePosition().x, $.get$InputHandler_MousePosition().y);
    H.setRuntimeTypeInfo(t2, [J.JSInt]);
    $.InputHandler__lastClickPos = t2;
  }
  if (down)
    X.InputHandler_FindKeyboardFocus($.InputHandler_HoveredControl);
  t1 = $.InputHandler_HoveredControl;
  t2 = t1.get$Skin()._renderer;
  t1 = t1.m_Cursor;
  t2 = t2._cvsr;
  t1 = t1.Name;
  J.set$cursor$x(t2._canvas.style, t1);
  if (down)
    $.InputHandler_HoveredControl.Touch$0();
  switch (mouseButton) {
    case 0:
      t1 = $.InputHandler_HoveredControl;
      if (isDoubleClick)
        t1.OnMouseDoubleClickedLeft$2($.get$InputHandler_MousePosition().x, $.get$InputHandler_MousePosition().y);
      else
        t1.OnMouseClickedLeft$3($.get$InputHandler_MousePosition().x, $.get$InputHandler_MousePosition().y, down);
      return true;
    case 1:
      t1 = $.InputHandler_HoveredControl;
      if (isDoubleClick)
        t1.OnMouseDoubleClickedRight$2($.get$InputHandler_MousePosition().x, $.get$InputHandler_MousePosition().y);
      else
        t1.OnMouseClickedRight$3($.get$InputHandler_MousePosition().x, $.get$InputHandler_MousePosition().y, down);
      return true;
    default:
  }
  return false;
},

InputHandler_OnKeyEvent: function(canvas, key, down) {
  var t1, iKey, t2;
  t1 = $.InputHandler_KeyboardFocus;
  if (null == t1)
    return false;
  if (t1.GetCanvas$0() !== canvas)
    return false;
  if (!$.InputHandler_KeyboardFocus.get$IsVisible())
    return false;
  iKey = key.value;
  if (down) {
    t1 = $.get$InputHandler_m_KeyData().KeyState;
    if (iKey < 0 || iKey >= t1.length)
      throw H.ioore(t1, iKey);
    if (t1[iKey] !== true) {
      t1 = $.get$InputHandler_m_KeyData().KeyState;
      if (iKey >= t1.length)
        throw H.ioore(t1, iKey);
      t1[iKey] = true;
      t1 = $.get$InputHandler_m_KeyData().NextRepeat;
      t2 = X.Neutral_GetTimeInSeconds();
      if (iKey >= t1.length)
        throw H.ioore(t1, iKey);
      t1[iKey] = t2 + 0.5;
      t2 = $.get$InputHandler_m_KeyData();
      t1 = $.InputHandler_KeyboardFocus;
      t2.Target = t1;
      return t1.OnKeyPressed$2(key, true);
    }
  } else {
    t1 = $.get$InputHandler_m_KeyData().KeyState;
    if (iKey < 0 || iKey >= t1.length)
      throw H.ioore(t1, iKey);
    if (t1[iKey] === true) {
      t1 = $.get$InputHandler_m_KeyData().KeyState;
      if (iKey >= t1.length)
        throw H.ioore(t1, iKey);
      t1[iKey] = false;
      return $.InputHandler_KeyboardFocus.OnKeyPressed$2(key, false);
    }
  }
  return false;
},

InputHandler_UpdateHoveredControl: function(inCanvas) {
  var hovered, t1, oldHover;
  hovered = inCanvas.GetControlAt$2($.get$InputHandler_MousePosition().x, $.get$InputHandler_MousePosition().y);
  t1 = $.InputHandler_HoveredControl;
  if (hovered == null ? t1 != null : hovered !== t1) {
    if (t1 != null) {
      P.print("Hover: " + H.S(t1.m_Name));
      oldHover = $.InputHandler_HoveredControl;
      $.InputHandler_HoveredControl = null;
      oldHover.OnMouseLeft$0();
    }
    $.InputHandler_HoveredControl = hovered;
    t1 = $.InputHandler_HoveredControl;
    if (t1 != null)
      t1.OnMouseEntered$0();
  }
  t1 = $.InputHandler_MouseFocus;
  if (t1 != null && t1.GetCanvas$0() === inCanvas) {
    t1 = $.InputHandler_HoveredControl;
    if (t1 != null) {
      $.InputHandler_HoveredControl = null;
      t1.Redraw$0();
    }
    $.InputHandler_HoveredControl = $.InputHandler_MouseFocus;
  }
},

InputHandler_FindKeyboardFocus: function(control) {
  var t1, child, t2;
  if (null == control)
    return;
  if (control.m_KeyboardInputEnabled === true) {
    for (t1 = control.get$Children(), t1 = new H.ListIterator(t1, t1.length, 0, null); t1.moveNext$0();) {
      child = t1._current;
      t2 = $.InputHandler_KeyboardFocus;
      if (t2 == null ? child == null : t2 === child)
        return;
    }
    control.Focus$0();
    return;
  }
  X.InputHandler_FindKeyboardFocus(control.m_Parent);
  return;
},

InputHandler_ListLastClickTimes: function() {
  var t1, i;
  if (null == $.InputHandler__lastClickTime) {
    t1 = P.List_List(5, J.JSDouble);
    H.setRuntimeTypeInfo(t1, [J.JSDouble]);
    $.InputHandler__lastClickTime = t1;
    for (t1 = $.InputHandler__lastClickTime, i = 0; i < 5; ++i) {
      if (i >= t1.length)
        throw H.ioore(t1, i);
      t1[i] = 0;
    }
  }
  return $.InputHandler__lastClickTime;
},

SubRect: {"": "Object;uv"},

Bordered: {"": "Object;_Texture,_rects,_margin,_width,_height",
  SetRect$5: function(num, x, y, w, h) {
    var t1, texw, texh, t2;
    t1 = this._Texture;
    texw = t1._width;
    texw.toString;
    texh = t1._height;
    texh.toString;
    t1 = this._rects;
    if (num < 0 || num >= t1.length)
      throw H.ioore(t1, num);
    t2 = t1[num].uv;
    if (typeof texw !== "number")
      throw H.iae(texw);
    if (0 >= t2.length)
      throw H.ioore(t2, 0);
    t2[0] = x / texw;
    t2 = t1[num].uv;
    if (typeof texh !== "number")
      throw H.iae(texh);
    if (1 >= t2.length)
      throw H.ioore(t2, 1);
    t2[1] = y / texh;
    t2 = t1[num].uv;
    if (2 >= t2.length)
      throw H.ioore(t2, 2);
    t2[2] = (x + w) / texw;
    t1 = t1[num].uv;
    if (3 >= t1.length)
      throw H.ioore(t1, 3);
    t1[3] = (y + h) / texh;
  },
  Init$7: function(texture, x, y, w, h, inMargin, drawMarginScale) {
    var t1, t2, t3, t4, t5, left, right;
    this._Texture = texture;
    this._margin = inMargin;
    t1 = this._margin;
    this.SetRect$5(0, x, y, t1.Left, J.toDouble$0$n(t1.Top));
    t1 = this._margin;
    t2 = t1.Left;
    this.SetRect$5(1, x + t2, y, w - t2 - t1.Right, J.toDouble$0$n(t1.Top));
    t1 = x + w;
    t2 = this._margin;
    t3 = t2.Right;
    this.SetRect$5(2, t1 - t3, y, t3, J.toDouble$0$n(t2.Top));
    t2 = this._margin;
    t3 = t2.Top;
    if (typeof t3 !== "number")
      throw H.iae(t3);
    this.SetRect$5(3, x, y + t3, t2.Left, h - t3 - t2.Bottom);
    t2 = this._margin;
    t3 = t2.Left;
    t4 = t2.Top;
    if (typeof t4 !== "number")
      throw H.iae(t4);
    this.SetRect$5(4, x + t3, y + t4, w - t3 - t2.Right, h - t4 - t2.Bottom);
    t2 = this._margin;
    t4 = t2.Right;
    t3 = t2.Top;
    if (typeof t3 !== "number")
      throw H.iae(t3);
    this.SetRect$5(5, t1 - t4, y + t3, t4, h - t3 - t2.Bottom - 1);
    t2 = y + h;
    t3 = this._margin;
    t4 = t3.Bottom;
    this.SetRect$5(6, x, t2 - t4, t3.Left, t4);
    t4 = this._margin;
    t3 = t4.Left;
    t5 = t4.Bottom;
    this.SetRect$5(7, x + t3, t2 - t5, w - t3 - t4.Right, t5);
    t5 = this._margin;
    t4 = t5.Right;
    t5 = t5.Bottom;
    this.SetRect$5(8, t1 - t4, t2 - t5, t4, t5);
    left = C.JSNumber_methods.toInt$0(C.JSInt_methods.roundToDouble$0(this._margin.Left * drawMarginScale));
    right = C.JSNumber_methods.toInt$0(C.JSInt_methods.roundToDouble$0(this._margin.Right * drawMarginScale));
    this._margin = new X.GwenMargin(J.round$0$n(J.$mul$n(this._margin.Top, drawMarginScale)), C.JSNumber_methods.toInt$0(C.JSInt_methods.roundToDouble$0(this._margin.Bottom * drawMarginScale)), left, right);
    this._width = w - x;
    this._height = h - y;
  },
  DrawRect$6: function(render, i, x, y, w, h) {
    var t1, t2, t3, t4, t5, t6, t7, targetRect;
    t1 = this._Texture;
    t2 = new P.Rectangle(x, y, w, h);
    H.setRuntimeTypeInfo(t2, [J.JSInt]);
    t3 = this._rects;
    if (i < 0 || i >= t3.length)
      throw H.ioore(t3, i);
    t3 = t3[i].uv;
    t4 = t3.length;
    if (0 >= t4)
      throw H.ioore(t3, 0);
    t5 = t3[0];
    if (1 >= t4)
      throw H.ioore(t3, 1);
    t6 = t3[1];
    if (2 >= t4)
      throw H.ioore(t3, 2);
    t7 = t3[2];
    if (3 >= t4)
      throw H.ioore(t3, 3);
    t3 = t3[3];
    targetRect = render.translateRect$1(t2);
    render._cvsr.drawTexturedRectFromName$6(t1._gwendart$_name, targetRect, t5, t6, t7, t3);
  },
  Draw$3: function(render, r, col) {
    var t1, t2, t3, t4, t5, t6, targetRect, t7, t8, t9, t10, t11;
    if (this._Texture == null)
      return;
    col = X.Color__getDefaultColor(16777215);
    t1 = render._cvsr;
    J.set$fillStyle$x(t1._txContext, col.get$StyleString());
    t1._color = col;
    t1 = r.width;
    t2 = J.getInterceptor$n(t1);
    if (t2.$lt(t1, this._width) && J.$lt$n(r.height, this._height)) {
      t1 = this._Texture;
      t2 = this._rects;
      if (0 >= t2.length)
        throw H.ioore(t2, 0);
      t2 = t2[0].uv;
      t3 = t2.length;
      if (0 >= t3)
        throw H.ioore(t2, 0);
      t4 = t2[0];
      if (1 >= t3)
        throw H.ioore(t2, 1);
      t5 = t2[1];
      if (2 >= t3)
        throw H.ioore(t2, 2);
      t6 = t2[2];
      if (3 >= t3)
        throw H.ioore(t2, 3);
      t2 = t2[3];
      targetRect = render.translateRect$1(r);
      render._cvsr.drawTexturedRectFromName$6(t1._gwendart$_name, targetRect, t4, t5, t6, t2);
      return;
    }
    t3 = r.left;
    t4 = r.top;
    t5 = this._margin;
    this.DrawRect$6(render, 0, t3, t4, t5.Left, t5.Top);
    t5 = J.getInterceptor$ns(t3);
    this.DrawRect$6(render, 1, t5.$add(t3, this._margin.Left), t4, J.$sub$n(t2.$sub(t1, this._margin.Left), this._margin.Right), this._margin.Top);
    t6 = J.$sub$n(t5.$add(t3, t1), this._margin.Right);
    t7 = this._margin;
    this.DrawRect$6(render, 2, t6, t4, t7.Right, t7.Top);
    t7 = J.getInterceptor$ns(t4);
    t6 = t7.$add(t4, this._margin.Top);
    t8 = this._margin;
    t9 = r.height;
    t10 = J.getInterceptor$n(t9);
    this.DrawRect$6(render, 3, t3, t6, t8.Left, J.$sub$n(t10.$sub(t9, t8.Top), this._margin.Bottom));
    this.DrawRect$6(render, 4, t5.$add(t3, this._margin.Left), t7.$add(t4, this._margin.Top), J.$sub$n(t2.$sub(t1, this._margin.Left), this._margin.Right), J.$sub$n(t10.$sub(t9, this._margin.Top), this._margin.Bottom));
    t8 = J.$sub$n(t5.$add(t3, t1), this._margin.Right);
    t6 = t7.$add(t4, this._margin.Top);
    t11 = this._margin;
    this.DrawRect$6(render, 5, t8, t6, t11.Right, J.$sub$n(t10.$sub(t9, t11.Top), this._margin.Bottom));
    t11 = J.$sub$n(t7.$add(t4, t9), this._margin.Bottom);
    t10 = this._margin;
    this.DrawRect$6(render, 6, t3, t11, t10.Left, t10.Bottom);
    this.DrawRect$6(render, 7, t5.$add(t3, this._margin.Left), J.$sub$n(t7.$add(t4, t9), this._margin.Bottom), J.$sub$n(t2.$sub(t1, this._margin.Left), this._margin.Right), this._margin.Bottom);
    t1 = J.$sub$n(t5.$add(t3, t1), this._margin.Right);
    t9 = J.$sub$n(t7.$add(t4, t9), this._margin.Bottom);
    t4 = this._margin;
    this.DrawRect$6(render, 8, t1, t9, t4.Right, t4.Bottom);
  },
  Draw$2: function(render, r) {
    return this.Draw$3(render, r, null);
  },
  Bordered$6: function(texture, x, y, w, h, margin) {
    var t1, i, subrect, t2;
    for (t1 = this._rects, i = 0; i < 9; ++i) {
      subrect = new X.SubRect(null);
      t2 = P.List_List(null, J.JSDouble);
      t2.$builtinTypeInfo = [J.JSDouble];
      subrect.uv = t2;
      subrect.uv.push(0);
      subrect.uv.push(0);
      subrect.uv.push(0);
      subrect.uv.push(0);
      t1.push(subrect);
    }
    this.Init$7(texture, x, y, w, h, margin, 1);
  },
  static: {
Bordered$: function(texture, x, y, w, h, margin) {
  var t1 = P.List_List(null, X.SubRect);
  H.setRuntimeTypeInfo(t1, [X.SubRect]);
  t1 = new X.Bordered(null, t1, null, null, null);
  t1.Bordered$6(texture, x, y, w, h, margin);
  return t1;
}}

},

Button: {"": "Label;_depressed,IsToggle,_toggleStatus,_centerImage,_image,Pressed,Released,Toggled,ToggledOn,ToggledOff,_text,_align,_textPadding,_autoSizeToContents,_mouseEventHandlerAddedHandler,m_Disposed,m_Parent,m_ActualParent,m_InnerPanel,m_ToolTip,m_Skin,m_Bounds,m_RenderBounds,m_InnerBounds,m_Padding,m_Margin,m_Name,m_RestrictToParent,m_Disabled,m_Hidden,m_MouseInputEnabled,m_KeyboardInputEnabled,m_DrawBackground,m_Dock,m_Cursor,m_Tabable,m_NeedsLayout,m_CacheTextureDirty,m_CacheToTexture,m_DragAndDrop_Package,m_UserData,m_DrawDebugOutlines,m_Children,HoverEnter,HoverLeave,BoundsChanged,Clicked,DoubleClicked,RightClicked,DoubleRightClicked,m_Accelerators,m_MinimumSize,m_MaximumSize,PaddingOutlineColor,MarginOutlineColor,BoundsOutlineColor",
  set$IsDepressed: function(value) {
    if (this._depressed === value)
      return;
    this._depressed = value;
    this.Redraw$0();
  },
  set$ToggleState: function(value) {
    if (!this.IsToggle)
      return;
    if (this._toggleStatus === value)
      return;
    this._toggleStatus = value;
    this.Toggled.Invoke$2(this, $.get$GwenEventArgs_Empty());
    if (this._toggleStatus)
      this.ToggledOn.Invoke$2(this, $.get$GwenEventArgs_Empty());
    else
      this.ToggledOff.Invoke$2(this, $.get$GwenEventArgs_Empty());
    this.Redraw$0();
  },
  Toggle$0: function() {
    this.set$ToggleState(!this._toggleStatus);
  },
  Render$1: function(skin) {
    var drawDepressed, bDrawHovered;
    if (this.m_DrawBackground === true) {
      drawDepressed = this._depressed && $.InputHandler_HoveredControl === this;
      if (this.IsToggle)
        drawDepressed = drawDepressed || this._toggleStatus;
      bDrawHovered = $.InputHandler_HoveredControl === this && this.get$ShouldDrawHover();
      skin.DrawButton$4(this, drawDepressed, bDrawHovered, this.m_Disabled);
    }
  },
  OnMouseClickedLeft$3: function(x, y, down) {
    if (down) {
      this.set$IsDepressed(true);
      $.InputHandler_MouseFocus = this;
      this.Pressed.Invoke$2(this, $.get$GwenEventArgs_Empty());
    } else {
      if ($.InputHandler_HoveredControl === this && this._depressed)
        this.OnClicked$2(x, y);
      this.set$IsDepressed(false);
      $.InputHandler_MouseFocus = null;
      this.Released.Invoke$2(this, $.get$GwenEventArgs_Empty());
    }
    this.Redraw$0();
  },
  OnClicked$2: function(x, y) {
    if (this.IsToggle)
      this.Toggle$0();
    X.GwenControlBase.prototype.OnMouseClickedLeft$3.call(this, x, y, true);
  },
  SizeToContents$0: function() {
    X.Label.prototype.SizeToContents$0.call(this);
  },
  OnKeySpace$1: function(down) {
    return X.GwenControlBase.prototype.OnKeySpace$1.call(this, down);
  },
  Layout$1: function(skin) {
    X.Label.prototype.Layout$1.call(this, skin);
  },
  UpdateColors$0: function() {
    if (this.m_Disabled === true) {
      var t1 = this.get$Skin().SkinColors.m_Button.Disabled;
      this._text.TextColor = t1;
      return;
    }
    if (this._depressed || this._toggleStatus) {
      t1 = this.get$Skin().SkinColors.m_Button.Down;
      this._text.TextColor = t1;
      return;
    }
    if ($.InputHandler_HoveredControl === this) {
      t1 = this.get$Skin().SkinColors.m_Button.Hover;
      this._text.TextColor = t1;
      return;
    }
    t1 = this.get$Skin().SkinColors.m_Button.Normal;
    this._text.TextColor = t1;
  },
  OnMouseDoubleClickedLeft$2: function(x, y) {
    X.GwenControlBase.prototype.OnMouseDoubleClickedLeft$2.call(this, x, y);
    this.OnMouseClickedLeft$3(x, y, true);
  },
  Button$1: function($parent) {
    var t1;
    this._autoSizeToContents = false;
    this.m_NeedsLayout = true;
    this.m_CacheTextureDirty = true;
    t1 = this.m_Bounds;
    this.SetBounds$4(t1.left, t1.top, 100, 20);
    this.m_MouseInputEnabled = true;
    this._align = C.Pos_96;
    this.m_NeedsLayout = true;
    this.m_CacheTextureDirty = true;
    this._centerImage = false;
    this._image = null;
  },
  static: {
Button$: function($parent) {
  var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14;
  t1 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t1, [X.GwenEventHandler]);
  t2 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t2, [X.GwenEventHandler]);
  t3 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t3, [X.GwenEventHandler]);
  t4 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t4, [X.GwenEventHandler]);
  t5 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t5, [X.GwenEventHandler]);
  t6 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t6, [X.GwenEventHandler]);
  t7 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t7, [X.GwenEventHandler]);
  t8 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t8, [X.GwenEventHandler]);
  t9 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t9, [X.GwenEventHandler]);
  t10 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t10, [X.GwenEventHandler]);
  t11 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t11, [X.GwenEventHandler]);
  t12 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t12, [X.GwenEventHandler]);
  t13 = new P.Point(1, 1);
  H.setRuntimeTypeInfo(t13, [J.JSInt]);
  t14 = new P.Point(4096, 4096);
  H.setRuntimeTypeInfo(t14, [J.JSInt]);
  t14 = new X.Button(false, false, false, false, null, new X.GwenEventHandlerList(t1, null, null), new X.GwenEventHandlerList(t2, null, null), new X.GwenEventHandlerList(t3, null, null), new X.GwenEventHandlerList(t4, null, null), new X.GwenEventHandlerList(t5, null, null), null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, new X.GwenEventHandlerList(t6, null, null), new X.GwenEventHandlerList(t7, null, null), new X.GwenEventHandlerList(t8, null, null), new X.GwenEventHandlerList(t9, null, null), new X.GwenEventHandlerList(t10, null, null), new X.GwenEventHandlerList(t11, null, null), new X.GwenEventHandlerList(t12, null, null), null, t13, t14, null, null, null);
  t14.GwenControlBase$1($parent);
  t14.Label$1($parent);
  t14.Button$1($parent);
  return t14;
}}

},

RenderRequest: {"": "Object;timeRequested?,timeStarted@,timeFinished@,completer<",
  RenderRequest$0: function() {
    var t1, t2;
    this.timeRequested = P.DateTime$_now();
    this.timeStarted = null;
    this.timeFinished = null;
    t1 = X.RenderRequest;
    t2 = new P._AsyncCompleter(P._Future$(t1));
    H.setRuntimeTypeInfo(t2, [t1]);
    this.completer = t2;
  },
  static: {
RenderRequest$: function() {
  var t1 = new X.RenderRequest(null, null, null, null);
  t1.RenderRequest$0();
  return t1;
}}

},

CanvasRenderer: {"": "Object;_canvas,_gl,_shaderProgram,_viewportWidth,_viewportHeight,_neheTexture,_bTextureModified,_cubeVertexTextureCoordBuffer,_cubeVertexPositionBuffer,_cubeVertexIndexBuffer,_renderRequestQueue,_pMatrix,_mvMatrix,_mvMatrixStack,_aVertexPosition,_aTextureCoord,_uPMatrix,_uMVMatrix,_samplerUniform,_dimensions,bTextureLoaded,clipleft,clipright,cliptop,clipbottom,_textureCanvas,_varTextureCanvas,_txContext,_txwidth,_txheight,_color,_canvasSkinTexture,_txContextSkin,_nameSkinTexture,_completerSkinTexture,_imageElementSkinTexture,_mapImageElements,_listOfThingsToWaitFor,_textureLoadCompleter,_strCssFont",
  _initShaders$0: function() {
    var vs, fs;
    vs = J.createShader$1$x(this._gl, 35633);
    J.shaderSource$2$x(this._gl, vs, "    attribute vec3 aVertexPosition;\r\n    attribute vec2 aTextureCoord;\r\n  \r\n    uniform mat4 uMVMatrix;\r\n    uniform mat4 uPMatrix;\r\n  \r\n    varying vec2 vTextureCoord;\r\n  \r\n    void main(void) {\r\n      gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);\r\n      vTextureCoord = aTextureCoord;\r\n    }\r\n    ");
    J.compileShader$1$x(this._gl, vs);
    fs = J.createShader$1$x(this._gl, 35632);
    J.shaderSource$2$x(this._gl, fs, "    precision mediump float;\r\n\r\n    varying vec2 vTextureCoord;\r\n\r\n    uniform sampler2D uSampler;\r\n\r\n    void main(void) {\r\n      gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));\r\n    }\r\n    ");
    J.compileShader$1$x(this._gl, fs);
    this._shaderProgram = J.createProgram$0$x(this._gl);
    J.attachShader$2$x(this._gl, this._shaderProgram, vs);
    J.attachShader$2$x(this._gl, this._shaderProgram, fs);
    J.linkProgram$1$x(this._gl, this._shaderProgram);
    if (J.getShaderParameter$2$x(this._gl, vs, 35713) !== true)
      P.print(J.getShaderInfoLog$1$x(this._gl, vs));
    if (J.getShaderParameter$2$x(this._gl, fs, 35713) !== true)
      P.print(J.getShaderInfoLog$1$x(this._gl, fs));
    if (J.getProgramParameter$2$x(this._gl, this._shaderProgram, 35714) !== true)
      P.print(J.getProgramInfoLog$1$x(this._gl, this._shaderProgram));
    this._aVertexPosition = J.getAttribLocation$2$x(this._gl, this._shaderProgram, "aVertexPosition");
    this._aTextureCoord = J.getAttribLocation$2$x(this._gl, this._shaderProgram, "aTextureCoord");
    this._uPMatrix = J.getUniformLocation$2$x(this._gl, this._shaderProgram, "uPMatrix");
    this._uMVMatrix = J.getUniformLocation$2$x(this._gl, this._shaderProgram, "uMVMatrix");
    this._samplerUniform = J.getUniformLocation$2$x(this._gl, this._shaderProgram, "uSampler");
  },
  _initBuffers$0: function() {
    var t1, t2, t3, t4, t5;
    this._cubeVertexPositionBuffer = J.createBuffer$0$x(this._gl);
    J.bindBuffer$2$x(this._gl, 34962, this._cubeVertexPositionBuffer);
    t1 = this.clipleft;
    t2 = this.cliptop;
    t3 = this.clipright;
    t4 = this.clipbottom;
    t5 = this._gl;
    t4 = new Float32Array([t1, t2, 0, t3, t2, 0, t3, t4, 0, t1, t4, 0]);
    t4.$dartCachedLength = t4.length;
    J.bufferDataTyped$3$x(t5, 34962, t4, 35044);
    this._cubeVertexTextureCoordBuffer = J.createBuffer$0$x(this._gl);
    J.bindBuffer$2$x(this._gl, 34962, this._cubeVertexTextureCoordBuffer);
    t4 = this._gl;
    t5 = new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]);
    t5.$dartCachedLength = t5.length;
    J.bufferDataTyped$3$x(t4, 34962, t5, 35044);
    this._cubeVertexIndexBuffer = J.createBuffer$0$x(this._gl);
    J.bindBuffer$2$x(this._gl, 34963, this._cubeVertexIndexBuffer);
    t5 = this._gl;
    t4 = new Uint16Array([0, 1, 2, 0, 2, 3]);
    t4.$dartCachedLength = t4.length;
    J.bufferDataTyped$3$x(t5, 34963, t4, 35044);
  },
  _setMatrixUniforms$0: function() {
    var tmpList = new Float32Array(16);
    tmpList.$dartCachedLength = tmpList.length;
    this._pMatrix.copyIntoArray$1(tmpList);
    J.uniformMatrix4fv$3$x(this._gl, this._uPMatrix, false, tmpList);
    this._mvMatrix.copyIntoArray$1(tmpList);
    J.uniformMatrix4fv$3$x(this._gl, this._uMVMatrix, false, tmpList);
  },
  onSkinTextureLoaded$1: function(e) {
    var t1;
    J.drawImage$3$x(this._txContextSkin, this._imageElementSkinTexture, 0, 0);
    t1 = this._completerSkinTexture.future;
    if (t1._state !== 0)
      H.throwExpression(P.StateError$("Future already completed"));
    t1._asyncComplete$1(null);
  },
  get$onSkinTextureLoaded: function() {
    return new H.BoundClosure$1(this, X.CanvasRenderer.prototype.onSkinTextureLoaded$1, null, "onSkinTextureLoaded$1");
  },
  _initSkinTexture$0: function() {
    var t1, t2;
    t1 = null;
    t2 = new P._AsyncCompleter(P._Future$(t1));
    H.setRuntimeTypeInfo(t2, [t1]);
    this._completerSkinTexture = t2;
    this._imageElementSkinTexture = W._ElementFactoryProvider_createElement_tag("img", null);
    t2 = J.get$onLoad$x(this._imageElementSkinTexture);
    t1 = this.get$onSkinTextureLoaded();
    t1 = new W._EventStreamSubscription(0, t2._html$_target, t2._eventType, W._wrapZone(t1), t2._useCapture);
    H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(t2, "_EventStream", 0)]);
    t1._tryResume$0();
    J.set$src$x(this._imageElementSkinTexture, this._nameSkinTexture);
    return this._completerSkinTexture.future;
  },
  _initTexture$0: function() {
    var image, t1, t2, t3;
    this._neheTexture = J.createTexture$0$x(this._gl);
    image = W._ElementFactoryProvider_createElement_tag("img", null);
    t1 = J.getInterceptor$x(image);
    t2 = t1.get$onLoad(image);
    t3 = new W._EventStreamSubscription(0, t2._html$_target, t2._eventType, W._wrapZone(new X.CanvasRenderer__initTexture_closure(this, image)), t2._useCapture);
    H.setRuntimeTypeInfo(t3, [H.getRuntimeTypeArgument(t2, "_EventStream", 0)]);
    t3._tryResume$0();
    t1.set$src(image, "code512.png");
    return this._textureLoadCompleter.future;
  },
  _handleLoadedTexture$2: function(texture, img) {
    J.bindTexture$2$x(this._gl, 3553, texture);
    J.pixelStorei$2$x(this._gl, 37440, 1);
    J.texImage2DImage$6$x(this._gl, 3553, 0, 6408, 6408, 5121, img);
    J.texParameteri$3$x(this._gl, 3553, 10240, 9728);
    J.texParameteri$3$x(this._gl, 3553, 10241, 9728);
    J.bindTexture$2$x(this._gl, 3553, null);
    this.bTextureLoaded = true;
  },
  drawMissingTexture$2: function(rect, $name) {
    var clr, t1, t2, t3, t4, t5, t6;
    clr = this._color;
    t1 = X.Color__getDefaultColor(16711680);
    J.set$fillStyle$x(this._txContext, t1.get$StyleString());
    this._color = t1;
    t1 = rect.left;
    t2 = rect.top;
    t3 = rect.width;
    t4 = J.getInterceptor$ns(t1);
    t5 = rect.height;
    t6 = J.getInterceptor$ns(t2);
    this.drawLineOnCanvas$4(t1, t2, t4.$add(t1, t3), t6.$add(t2, t5));
    this.drawLineOnCanvas$4(t1, t6.$add(t2, t5), t4.$add(t1, t3), t2);
    J.strokeRect$4$x(this._txContext, t1, t2, t3, t5);
    this.drawTextOnCanvas$3("Err: '" + $name + "'", t1, J.toInt$0$n(t6.$add(t2, J.$div$n(t5, 2))));
    J.set$fillStyle$x(this._txContext, clr.get$StyleString());
    this._color = clr;
  },
  _drawTexturedRect$6: function(elem, rect, u1, v1, u2, v2) {
    var t1, srcRect;
    if (u1 === 0 && v1 === 0 && u2 === 1 && v2 === 1)
      J.drawImageToRect$2$x(this._txContext, elem, rect);
    else {
      t1 = J.getInterceptor$x(elem);
      srcRect = new P.Rectangle(J.$mul$n(t1.get$width(elem), u1), J.$mul$n(t1.get$height(elem), v1), J.$mul$n(t1.get$width(elem), u2 - u1), J.$mul$n(t1.get$height(elem), v2 - v1));
      H.setRuntimeTypeInfo(srcRect, [null]);
      J.drawImageToRect$3$sourceRect$x(this._txContext, elem, rect, srcRect);
    }
  },
  drawTexturedRectFromName$6: function($name, rect, u1, v1, u2, v2) {
    var t1, t2, imageLoadCompleter, t3;
    t1 = {};
    t1.elem_0 = null;
    t2 = this._mapImageElements;
    if (!t2.containsKey$1($name)) {
      t2 = null;
      imageLoadCompleter = new P._AsyncCompleter(P._Future$(t2));
      H.setRuntimeTypeInfo(imageLoadCompleter, [t2]);
      this._listOfThingsToWaitFor.push(imageLoadCompleter.future);
      t1.elem_0 = W._ElementFactoryProvider_createElement_tag("img", null);
      t2 = J.get$onLoad$x(t1.elem_0);
      t3 = new W._EventStreamSubscription(0, t2._html$_target, t2._eventType, W._wrapZone(new X.CanvasRenderer_drawTexturedRectFromName_closure(t1, this, $name, rect, u1, v1, u2, v2, imageLoadCompleter)), t2._useCapture);
      H.setRuntimeTypeInfo(t3, [H.getRuntimeTypeArgument(t2, "_EventStream", 0)]);
      t3._tryResume$0();
      J.get$onError$x(t1.elem_0).listen$1(new X.CanvasRenderer_drawTexturedRectFromName_closure0(this, $name, rect, imageLoadCompleter));
      J.set$src$x(t1.elem_0, $name);
    } else {
      t1.elem_0 = t2.$index(t2, $name);
      this._drawTexturedRect$6(t1.elem_0, rect, u1, v1, u2, v2);
    }
  },
  start$0: function(_) {
    var t1, t2, t3;
    this.removeCompletedRenderRequestsFromQueue$0();
    t1 = this._renderRequestQueue;
    if (t1.get$length(t1) < 1)
      throw H.wrapException(P.StateError$("CanvasRenderer._renderRequestQueue was empty"));
    if (t1.get$first(t1).get$timeStarted() != null)
      throw H.wrapException(P.StateError$("CanvasRenderer._renderRequestQueue first item was already started."));
    t1.get$first(t1).set$timeStarted(P.DateTime$_now());
    J.set$fillStyle$x(this._txContext, "rgba(0, 0, 0, 0)");
    t1 = this._txContext;
    t2 = this._textureCanvas;
    t3 = J.getInterceptor$x(t2);
    J.fillRect$4$x(t1, 0, 0, t3.get$width(t2), t3.get$height(t2));
    J.set$fillStyle$x(this._txContext, this._color.get$StyleString());
    J.save$0$x(this._txContext);
  },
  clipCanvas$1: function(rect) {
    J.restore$0$x(this._txContext);
    J.save$0$x(this._txContext);
    J.beginPath$0$x(this._txContext);
    J.rect$4$x(this._txContext, rect.left, rect.top, rect.width, rect.height);
  },
  drawLineOnCanvas$4: function(x0, y0, x1, y1) {
    J.set$strokeStyle$x(this._txContext, this._color.get$StyleString());
    J.beginPath$0$x(this._txContext);
    J.moveTo$2$x(this._txContext, x0, y0);
    J.lineTo$2$x(this._txContext, x1, y1);
    J.stroke$0$x(this._txContext);
    this._bTextureModified = true;
  },
  measureText$1: function(_, str) {
    var t1, t2, t3, textWidth;
    t1 = this._strCssFont;
    if (null != t1) {
      t2 = this._txContext;
      t3 = J.get$font$x(t2);
      if (t1 == null ? t3 != null : t1 !== t3)
        t2.font = t1;
    }
    textWidth = J.measureText$1$x(this._txContext, str).width;
    t1 = J.measureText$1$x(this._txContext, "M").width;
    if (typeof t1 !== "number")
      throw t1.$mul();
    t1 = new P.Point(J.toInt$0$n(textWidth), C.JSDouble_methods.toInt$0(t1 * 1.2));
    H.setRuntimeTypeInfo(t1, [J.JSInt]);
    return t1;
  },
  drawTextOnCanvas$3: function(str, x, y) {
    var t1, t2, t3;
    if (null != str)
      if (str.length > 0) {
        t1 = this._strCssFont;
        if (null != t1) {
          t2 = this._txContext;
          t3 = J.get$font$x(t2);
          if (t1 == null ? t3 != null : t1 !== t3)
            t2.font = t1;
        }
        J.measureText$1$x(this._txContext, str).width;
        t1 = J.measureText$1$x(this._txContext, "M").width;
        if (typeof t1 !== "number")
          throw t1.$mul();
        J.set$textAlign$x(this._txContext, "left");
        J.set$textBaseline$x(this._txContext, "top");
        J.set$fillStyle$x(this._txContext, this._color.get$StyleString());
        J.fillText$4$x(this._txContext, str, x, y, this._txwidth);
        this._bTextureModified = true;
      }
  },
  updateTextureFromCanvas$0: function() {
    var t1, t2, t3, data;
    if (this._bTextureModified) {
      t1 = this._txContext;
      t2 = this._textureCanvas;
      t3 = J.getInterceptor$x(t2);
      data = J.getImageData$4$x(t1, 0, 0, t3.get$width(t2), t3.get$height(t2));
      J.bindTexture$2$x(this._gl, 3553, this._neheTexture);
      J.pixelStorei$2$x(this._gl, 37440, 1);
      J.texSubImage2DImageData$7$x(this._gl, 3553, 0, 0, 0, 6408, 5121, data);
      J.texParameteri$3$x(this._gl, 3553, 10240, 9728);
      J.texParameteri$3$x(this._gl, 3553, 10241, 9728);
      J.bindTexture$2$x(this._gl, 3553, null);
      this._bTextureModified = false;
    }
  },
  getSkinTexturePixelColor$2: function(x, y) {
    var data, t1, t2, r, g, b;
    data = J.getImageData$4$x(this._txContextSkin, x, y, 1, 1);
    t1 = J.getInterceptor$x(data);
    t2 = t1.get$data(data);
    if (0 >= C.JS_CONST_ZYJ(t2))
      throw H.ioore(t2, 0);
    r = C.JSInt_methods.toInt$0(t2[0]);
    t2 = t1.get$data(data);
    if (1 >= C.JS_CONST_ZYJ(t2))
      throw H.ioore(t2, 1);
    g = C.JSInt_methods.toInt$0(t2[1]);
    t2 = t1.get$data(data);
    if (2 >= C.JS_CONST_ZYJ(t2))
      throw H.ioore(t2, 2);
    b = C.JSInt_methods.toInt$0(t2[2]);
    t1 = t1.get$data(data);
    if (3 >= C.JS_CONST_ZYJ(t1))
      throw H.ioore(t1, 3);
    t2 = new X.Color(null, null, null, null);
    t2.a = C.JSInt_methods.toInt$0(t1[3]);
    t2.r = r;
    t2.g = g;
    t2.b = b;
    return t2;
  },
  initialize$0: function() {
    var t1, multipleTextureCompleter;
    t1 = null;
    multipleTextureCompleter = new P._AsyncCompleter(P._Future$(t1));
    H.setRuntimeTypeInfo(multipleTextureCompleter, [t1]);
    P.Future_wait([this._initTexture$0(), this._initSkinTexture$0()]).then$1(new X.CanvasRenderer_initialize_closure(multipleTextureCompleter)).catchError$1(new X.CanvasRenderer_initialize_closure0(multipleTextureCompleter));
    return multipleTextureCompleter.future;
  },
  render$0: function() {
    var t1, t2, t3, t4, t5, r;
    J.useProgram$1$x(this._gl, this._shaderProgram);
    J.enableVertexAttribArray$1$x(this._gl, this._aVertexPosition);
    J.enableVertexAttribArray$1$x(this._gl, this._aTextureCoord);
    J.viewport$4$x(this._gl, 0, 0, this._viewportWidth, this._viewportHeight);
    J.clear$1$ax(this._gl, 16640);
    if (this.bTextureLoaded) {
      this.updateTextureFromCanvas$0();
      t1 = this.clipleft;
      t2 = this.clipright;
      t3 = this.cliptop;
      t4 = this.clipbottom;
      t5 = new Float32Array(16);
      t5.$dartCachedLength = t5.length;
      r = new T.Matrix4(t5);
      T.setOrthographicMatrix(r, t1, t2 - 0.5, t3, t4, 0.1, 256);
      this._pMatrix = r;
      t4 = new Float32Array(16);
      t4.$dartCachedLength = t4.length;
      t4 = new T.Matrix4(t4);
      t4.setIdentity$0();
      this._mvMatrix = t4;
      t4 = this._mvMatrix;
      t3 = new Float32Array(3);
      t3.$dartCachedLength = t3.length;
      t3 = new T.Vector3(t3);
      t3.setValues$3(-0.5, 0, -0.2);
      t4.translate$1(t4, t3);
      J.bindBuffer$2$x(this._gl, 34962, this._cubeVertexPositionBuffer);
      J.vertexAttribPointer$6$x(this._gl, this._aVertexPosition, this._dimensions, 5126, false, 0, 0);
      J.bindBuffer$2$x(this._gl, 34962, this._cubeVertexTextureCoordBuffer);
      J.vertexAttribPointer$6$x(this._gl, this._aTextureCoord, 2, 5126, false, 0, 0);
      J.activeTexture$1$x(this._gl, 33984);
      J.bindTexture$2$x(this._gl, 3553, this._neheTexture);
      J.uniform1i$2$x(this._gl, this._samplerUniform, 0);
      J.bindBuffer$2$x(this._gl, 34963, this._cubeVertexIndexBuffer);
      this._setMatrixUniforms$0();
      J.drawElements$4$x(this._gl, 4, 6, 5123, 0);
      J.disableVertexAttribArray$1$x(this._gl, this._aVertexPosition);
      J.disableVertexAttribArray$1$x(this._gl, this._aTextureCoord);
      J.useProgram$1$x(this._gl, null);
    }
  },
  _internalFinish$1: function(err) {
    var err1, stacktrace, t1, exception, t2;
    try {
      C.JSArray_methods.set$length(this._listOfThingsToWaitFor, 0);
      this.render$0();
      J.flush$0$x(this._gl);
      J.restore$0$x(this._txContext);
      t1 = this._renderRequestQueue;
      t1.get$first(t1).set$timeFinished(P.DateTime$_now());
    } catch (exception) {
      t1 = H.unwrapException(exception);
      err1 = t1;
      stacktrace = new H._StackTrace(exception, null);
      t1 = this._renderRequestQueue;
      t1.get$first(t1).set$timeFinished(P.DateTime$_now());
      t1.get$first(t1).get$completer().completeError$2(err1, stacktrace);
      return;
    }

    t1 = this._renderRequestQueue;
    if (null != err)
      t1.get$first(t1).get$completer().completeError$1(err);
    else {
      t2 = t1.get$first(t1).get$completer();
      t1 = t1.get$first(t1);
      t2 = t2.future;
      if (t2._state !== 0)
        H.throwExpression(P.StateError$("Future already completed"));
      t2._asyncComplete$1(t1);
    }
  },
  finish$0: function(_) {
    var t1 = this._listOfThingsToWaitFor;
    if (0 !== t1.length)
      P.Future_wait(t1).then$1(new X.CanvasRenderer_finish_closure(this)).catchError$1(new X.CanvasRenderer_finish_closure0(this));
    else
      this._internalFinish$1(null);
  },
  removeCompletedRenderRequestsFromQueue$0: function() {
    var t1, first, t2, t3, t4, t5;
    t1 = this._renderRequestQueue;
    if (t1.get$length(t1) < 1)
      return;
    first = t1.get$first(t1);
    for (; first.get$completer().future._state !== 0;) {
      t1.removeFirst$0();
      t2 = t1._tail;
      t3 = t1._head;
      t4 = t1._table;
      t5 = t4.length;
      if ((t2 - t3 & t5 - 1) >>> 0 < 1)
        break;
      if (t3 === t2)
        H.throwExpression(P.StateError$("No elements"));
      if (t3 < 0 || t3 >= t5)
        throw H.ioore(t4, t3);
      first = t4[t3];
    }
  },
  requestRenderFrame$0: function() {
    var t1, bAddNew;
    t1 = this._renderRequestQueue;
    bAddNew = t1.get$length(t1) < 1;
    if (!bAddNew ? t1.get$last(t1).get$timeStarted() != null : bAddNew)
      t1._add$1(X.RenderRequest$());
    else
      t1.get$last(t1).set$timeRequested(P.DateTime$_now());
    return t1.get$last(t1);
  },
  _preventBrowserKeyInterpretationHandler$1: function(ke) {
    if (J.contains$1$asx($.get$CanvasRenderer__listKeyCodesToPrevent(), J.get$keyCode$x(ke)))
      ke.preventDefault();
  },
  get$_preventBrowserKeyInterpretationHandler: function() {
    return new H.BoundClosure$1(this, X.CanvasRenderer.prototype._preventBrowserKeyInterpretationHandler$1, null, "_preventBrowserKeyInterpretationHandler$1");
  },
  preventBrowserKeyInterpretation$0: function() {
    var t1, t2;
    if (!J.contains$1$asx($.get$CanvasRenderer__listKeyCodesToPrevent(), 8)) {
      $.get$CanvasRenderer__listKeyCodesToPrevent().push(8);
      $.get$CanvasRenderer__listKeyCodesToPrevent().push(32);
      $.get$CanvasRenderer__listKeyCodesToPrevent().push(36);
      $.get$CanvasRenderer__listKeyCodesToPrevent().push(35);
      $.get$CanvasRenderer__listKeyCodesToPrevent().push(33);
      $.get$CanvasRenderer__listKeyCodesToPrevent().push(34);
      $.get$CanvasRenderer__listKeyCodesToPrevent().push(38);
      $.get$CanvasRenderer__listKeyCodesToPrevent().push(40);
      $.get$CanvasRenderer__listKeyCodesToPrevent().push(37);
      $.get$CanvasRenderer__listKeyCodesToPrevent().push(39);
    }
    t1 = new W._EventStream(window, C.EventStreamProvider_keydown._eventType, false);
    H.setRuntimeTypeInfo(t1, [null]);
    t2 = this.get$_preventBrowserKeyInterpretationHandler();
    t2 = new W._EventStreamSubscription(0, t1._html$_target, t1._eventType, W._wrapZone(t2), t1._useCapture);
    H.setRuntimeTypeInfo(t2, [H.getRuntimeTypeArgument(t1, "_EventStream", 0)]);
    t2._tryResume$0();
  },
  CanvasRenderer$3: function(canvas, canvasSkinTexture, nameSkinTexture) {
    var t1, t2, t3;
    this._canvas = canvas;
    this._canvas.tabIndex = -1;
    this._canvas.focus();
    this._nameSkinTexture = nameSkinTexture;
    this._canvasSkinTexture = canvasSkinTexture;
    J.set$width$x(this._canvasSkinTexture, 512);
    J.set$height$x(this._canvasSkinTexture, 512);
    this._txContextSkin = J.getContext$1$x(this._canvasSkinTexture, "2d");
    this._textureCanvas = document.querySelector("#textureCanvas");
    this._varTextureCanvas = this._textureCanvas;
    t1 = this._textureCanvas;
    t2 = J.getInterceptor$x(canvas);
    t3 = t2.get$width(canvas);
    J.set$width$x(t1, t3);
    this._txwidth = t3;
    t3 = this._textureCanvas;
    t1 = t2.get$height(canvas);
    J.set$height$x(t3, t1);
    this._txheight = t1;
    J.set$backgroundColor$x(this._textureCanvas.style, "#fff");
    J.set$color$x(this._textureCanvas.style, "white");
    this._txContext = J.getContext$1$x(this._textureCanvas, "2d");
    J.set$fillStyle$x(this._txContext, X.Color__getDefaultColor(16711935).get$StyleString());
    J.fillRect$4$x(this._txContext, 0, 0, this._txwidth, this._txheight);
    J.set$textAlign$x(this._txContext, "left");
    J.set$textBaseline$x(this._txContext, "top");
    J.set$fillStyle$x(this._txContext, "white");
    this._color = X.Color__getDefaultColor(16711935);
    this._viewportWidth = t2.get$width(canvas);
    this._viewportHeight = t2.get$height(canvas);
    this._gl = t2.getContext$1(canvas, "experimental-webgl");
    t2 = this._viewportWidth;
    if (typeof t2 !== "number")
      throw t2.$negate();
    this.clipleft = -t2 / 2;
    t2 = this._viewportWidth;
    if (typeof t2 !== "number")
      throw t2.$div();
    this.clipright = t2 / 2;
    t2 = this._viewportHeight;
    if (typeof t2 !== "number")
      throw t2.$negate();
    this.cliptop = -t2 / 2;
    t2 = this._viewportHeight;
    if (typeof t2 !== "number")
      throw t2.$div();
    this.clipbottom = t2 / 2;
    this._mvMatrixStack = P.ListQueue$(null, null);
    this._initShaders$0();
    this._initBuffers$0();
  },
  static: {
"": "CanvasRenderer_TXC_BACKCLR,CanvasRenderer_TXC_DEFTEXTCLR,CanvasRenderer_TXC_CANV_WIDTH,CanvasRenderer_TXC_CANV_HEIGHT,CanvasRenderer__listKeyCodesToPrevent",
CanvasRenderer$: function(canvas, canvasSkinTexture, nameSkinTexture) {
  var t1, t2, t3, t4, t5;
  t1 = P.ListQueue$(null, X.RenderRequest);
  t2 = P.HashMap_HashMap(null, null, null, P.Object, W.ImageElement);
  t3 = P.List_List(null, P.Future);
  H.setRuntimeTypeInfo(t3, [P.Future]);
  t4 = null;
  t5 = new P._AsyncCompleter(P._Future$(t4));
  H.setRuntimeTypeInfo(t5, [t4]);
  t5 = new X.CanvasRenderer(null, null, null, null, null, null, true, null, null, null, t1, null, null, null, null, null, null, null, null, 3, false, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t2, t3, t5, null);
  t5.CanvasRenderer$3(canvas, canvasSkinTexture, nameSkinTexture);
  return t5;
}}

},

CanvasRenderer__initSkinTexture_closure: {"": "Closure;this_0",
  call$1: function(e) {
    P.print("_initSkinTexture error!");
    this.this_0._completerSkinTexture.completeError$1(e);
  },
  $is_args1: true
},

CanvasRenderer__initTexture_closure: {"": "Closure;this_0,image_1",
  call$1: function(e) {
    var t1 = this.this_0;
    t1._handleLoadedTexture$2(t1._neheTexture, this.image_1);
    J.clearColor$4$x(t1._gl, 0, 0, 0, 1);
    J.enable$1$x(t1._gl, 2929);
    t1 = t1._textureLoadCompleter.future;
    if (t1._state !== 0)
      H.throwExpression(P.StateError$("Future already completed"));
    t1._asyncComplete$1(null);
  },
  $is_args1: true
},

CanvasRenderer__initTexture_closure0: {"": "Closure;this_2",
  call$1: function(e) {
    P.print("_initTexture error!");
    this.this_2._textureLoadCompleter.completeError$1(e);
  },
  $is_args1: true
},

CanvasRenderer_drawTexturedRectFromName_closure: {"": "Closure;box_0,this_1,name_2,rect_3,u1_4,v1_5,u2_6,v2_7,imageLoadCompleter_8",
  call$1: function(e) {
    var t1, t2, t3;
    t1 = this.this_1;
    t2 = t1._mapImageElements;
    t3 = this.box_0;
    t2.$indexSet(t2, this.name_2, t3.elem_0);
    t1._drawTexturedRect$6(t3.elem_0, this.rect_3, this.u1_4, this.v1_5, this.u2_6, this.v2_7);
    t1 = this.imageLoadCompleter_8.future;
    if (t1._state !== 0)
      H.throwExpression(P.StateError$("Future already completed"));
    t1._asyncComplete$1(null);
  },
  $is_args1: true
},

CanvasRenderer_drawTexturedRectFromName_closure0: {"": "Closure;this_9,name_10,rect_11,imageLoadCompleter_12",
  call$1: function(err) {
    var shortName, t1, shortName0;
    shortName = this.name_10;
    t1 = shortName.length;
    shortName0 = t1 > 20 ? "#" + J.substring$1$s(shortName, t1 - 20) : shortName;
    P.print("texture laod '" + shortName + "' failed. (B)");
    this.this_9.drawMissingTexture$2(this.rect_11, shortName0);
    this.imageLoadCompleter_12.completeError$1(err);
  },
  $is_args1: true
},

CanvasRenderer_initialize_closure: {"": "Closure;multipleTextureCompleter_0",
  call$1: function(e) {
    var t1 = this.multipleTextureCompleter_0.future;
    if (t1._state !== 0)
      H.throwExpression(P.StateError$("Future already completed"));
    t1._asyncComplete$1(null);
  },
  $is_args1: true
},

CanvasRenderer_initialize_closure0: {"": "Closure;multipleTextureCompleter_1",
  call$1: function(err) {
    this.multipleTextureCompleter_1.completeError$1(err);
  },
  $is_args1: true
},

CanvasRenderer_finish_closure: {"": "Closure;this_0",
  call$1: function(_) {
    this.this_0._internalFinish$1(null);
  },
  $is_args1: true
},

CanvasRenderer_finish_closure0: {"": "Closure;this_1",
  call$1: function(err) {
    this.this_1._internalFinish$1(err);
  },
  $is_args1: true
},

CheckBox: {"": "Button;_checked,Checked,UnChecked,CheckChanged,_depressed,IsToggle,_toggleStatus,_centerImage,_image,Pressed,Released,Toggled,ToggledOn,ToggledOff,_text,_align,_textPadding,_autoSizeToContents,_mouseEventHandlerAddedHandler,m_Disposed,m_Parent,m_ActualParent,m_InnerPanel,m_ToolTip,m_Skin,m_Bounds,m_RenderBounds,m_InnerBounds,m_Padding,m_Margin,m_Name,m_RestrictToParent,m_Disabled,m_Hidden,m_MouseInputEnabled,m_KeyboardInputEnabled,m_DrawBackground,m_Dock,m_Cursor,m_Tabable,m_NeedsLayout,m_CacheTextureDirty,m_CacheToTexture,m_DragAndDrop_Package,m_UserData,m_DrawDebugOutlines,m_Children,HoverEnter,HoverLeave,BoundsChanged,Clicked,DoubleClicked,RightClicked,DoubleRightClicked,m_Accelerators,m_MinimumSize,m_MaximumSize,PaddingOutlineColor,MarginOutlineColor,BoundsOutlineColor",
  set$IsChecked: function(value) {
    if (value === this._checked)
      return;
    this._checked = value;
    this.OnCheckChanged$0();
  },
  Toggle$0: function() {
    X.Button.prototype.Toggle$0.call(this);
    this.set$IsChecked(!this._checked);
  },
  get$AllowUncheck: function() {
    return true;
  },
  OnCheckChanged$0: function() {
    if (this._checked)
      this.Checked.Invoke$2(this, $.get$GwenEventArgs_Empty());
    else
      this.UnChecked.Invoke$2(this, $.get$GwenEventArgs_Empty());
    this.CheckChanged.Invoke$2(this, $.get$GwenEventArgs_Empty());
  },
  Render$1: function(skin) {
    X.Button.prototype.Render$1.call(this, skin);
    skin.DrawCheckBox$3(this, this._checked, this._depressed);
  },
  OnClicked$2: function(x, y) {
    if (this.m_Disabled === true)
      return;
    if (this._checked && !this.get$AllowUncheck())
      return;
    X.Button.prototype.OnClicked$2.call(this, x, y);
  }
},

CloseButton: {"": "Button;_window,_depressed,IsToggle,_toggleStatus,_centerImage,_image,Pressed,Released,Toggled,ToggledOn,ToggledOff,_text,_align,_textPadding,_autoSizeToContents,_mouseEventHandlerAddedHandler,m_Disposed,m_Parent,m_ActualParent,m_InnerPanel,m_ToolTip,m_Skin,m_Bounds,m_RenderBounds,m_InnerBounds,m_Padding,m_Margin,m_Name,m_RestrictToParent,m_Disabled,m_Hidden,m_MouseInputEnabled,m_KeyboardInputEnabled,m_DrawBackground,m_Dock,m_Cursor,m_Tabable,m_NeedsLayout,m_CacheTextureDirty,m_CacheToTexture,m_DragAndDrop_Package,m_UserData,m_DrawDebugOutlines,m_Children,HoverEnter,HoverLeave,BoundsChanged,Clicked,DoubleClicked,RightClicked,DoubleRightClicked,m_Accelerators,m_MinimumSize,m_MaximumSize,PaddingOutlineColor,MarginOutlineColor,BoundsOutlineColor",
  Render$1: function(skin) {
    var t1, t2, t3, t4;
    t1 = this._depressed && $.InputHandler_HoveredControl === this;
    t2 = $.InputHandler_HoveredControl === this && this.get$ShouldDrawHover();
    t3 = this._window;
    t4 = t3.m_Parent.m_Children;
    if (0 >= t4.length)
      throw H.ioore(t4, 0);
    skin.DrawWindowCloseButton$4(this, t1, t2, t3 !== t4[0]);
  }
},

CssCursor: {"": "Object;Name", static: {
"": "CssCursor_Default,CssCursor_Auto,CssCursor_Pointer,CssCursor_Text,CssCursor_Wait,CssCursor_CrossHair,CssCursor_Help,CssCursor_Move,CssCursor_Copy,CssCursor_None,CssCursor_NotAllowed,CssCursor_ZoomIn,CssCursor_ZoomOut,CssCursor_SizeNS,CssCursor_SizeWE,CssCursor_SizeNWSE,CssCursor_SizeNESW,CssCursor_NoDrop,CssCursor_SizeAll",
}
},

DockBaseEventHandler: {"": "GwenEventHandler;_dockBase",
  Invoke$2: function(control, args) {
    var t1 = this._dockBase;
    t1.DoRedundancyCheck$0();
    t1.DoConsolidateCheck$0();
  }
},

DockBase: {"": "GwenControlBase;",
  OnKeySpace$1: function(down) {
    return false;
  },
  Render$1: function(skin) {
  },
  get$IsEmpty: function() {
    return true;
  },
  DoRedundancyCheck$0: function() {
    if (!this.get$IsEmpty())
      return;
    var pDockParent = H.interceptedTypeCast(this.m_Parent, "$isDockBase");
    if (null == pDockParent)
      return;
    pDockParent.toString;
    this.set$IsHidden(true);
    pDockParent.DoRedundancyCheck$0();
    pDockParent.DoConsolidateCheck$0();
  },
  DoConsolidateCheck$0: function() {
    if (this.get$IsEmpty())
      return;
    return;
  },
  RenderOver$1: function(skin) {
    var render, t1, t2, t3;
    if (!this._drawHover)
      return;
    render = skin._renderer;
    t1 = new X.Color(null, null, null, null);
    t1.a = 20;
    t1.r = 255;
    t1.g = 200;
    t1.b = 255;
    t2 = render._cvsr;
    J.set$fillStyle$x(t2._txContext, t1.get$StyleString());
    t2._color = t1;
    render.drawFilledRect$1(this.m_RenderBounds);
    t1 = this._hoverRect;
    if (J.$eq(t1.left, 0))
      return;
    t2 = new X.Color(null, null, null, null);
    t2.a = 100;
    t2.r = 255;
    t2.g = 200;
    t2.b = 255;
    t3 = render._cvsr;
    J.set$fillStyle$x(t3._txContext, t2.get$StyleString());
    t3._color = t2;
    render.drawFilledRect$1(t1);
    t2 = new X.Color(null, null, null, null);
    t2.a = 200;
    t2.r = 255;
    t2.g = 200;
    t2.b = 255;
    t3 = render._cvsr;
    J.set$fillStyle$x(t3._txContext, t2.get$StyleString());
    t3._color = t2;
    render.drawLinedRect$1(t1);
  },
  DockBase$1: function($parent) {
    var t1;
    this.set$Padding($.get$GwenPadding_One());
    t1 = this.m_Bounds;
    this.SetBounds$4(t1.left, t1.top, 200, 200);
    this._dockBaseEventHandler = new X.DockBaseEventHandler(this);
  },
  $isDockBase: true
},

Dragger: {"": "GwenControlBase;_held,_holdPos,_base,Dragged,m_Disposed,m_Parent,m_ActualParent,m_InnerPanel,m_ToolTip,m_Skin,m_Bounds,m_RenderBounds,m_InnerBounds,m_Padding,m_Margin,m_Name,m_RestrictToParent,m_Disabled,m_Hidden,m_MouseInputEnabled,m_KeyboardInputEnabled,m_DrawBackground,m_Dock,m_Cursor,m_Tabable,m_NeedsLayout,m_CacheTextureDirty,m_CacheToTexture,m_DragAndDrop_Package,m_UserData,m_DrawDebugOutlines,m_Children,HoverEnter,HoverLeave,BoundsChanged,Clicked,DoubleClicked,RightClicked,DoubleRightClicked,m_Accelerators,m_MinimumSize,m_MaximumSize,PaddingOutlineColor,MarginOutlineColor,BoundsOutlineColor",
  OnMouseClickedLeft$3: function(x, y, down) {
    var t1, t2;
    if (null == this._base)
      return;
    if (down) {
      this._held = true;
      t1 = this._base;
      t2 = new P.Point(x, y);
      H.setRuntimeTypeInfo(t2, [null]);
      this._holdPos = t1.CanvasPosToLocal$1(t2);
      $.InputHandler_MouseFocus = this;
    } else {
      this._held = false;
      $.InputHandler_MouseFocus = null;
    }
  },
  OnMouseMoved$4: function(x, y, dx, dy) {
    var t1, t2, p;
    if (null == this._base)
      return;
    if (this._held !== true)
      return;
    t1 = this._holdPos;
    t2 = t1.x;
    if (typeof t2 !== "number")
      throw H.iae(t2);
    t1 = t1.y;
    if (typeof t1 !== "number")
      throw H.iae(t1);
    p = new P.Point(x - t2, y - t1);
    H.setRuntimeTypeInfo(p, [null]);
    t1 = this._base.m_Parent;
    if (t1 != null)
      p = t1.CanvasPosToLocal$1(p);
    this._base.MoveTo$2(p.x, p.y);
    this.Dragged.Invoke$2(this, $.get$GwenEventArgs_Empty());
  },
  Render$1: function(skin) {
  },
  Dragger$1: function($parent) {
    var t1;
    this.m_MouseInputEnabled = true;
    this._held = false;
    t1 = new P.Point(0, 0);
    H.setRuntimeTypeInfo(t1, [J.JSInt]);
    this._holdPos = t1;
    this._base = null;
  },
  static: {
Dragger$: function($parent) {
  var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10;
  t1 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t1, [X.GwenEventHandler]);
  t2 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t2, [X.GwenEventHandler]);
  t3 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t3, [X.GwenEventHandler]);
  t4 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t4, [X.GwenEventHandler]);
  t5 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t5, [X.GwenEventHandler]);
  t6 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t6, [X.GwenEventHandler]);
  t7 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t7, [X.GwenEventHandler]);
  t8 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t8, [X.GwenEventHandler]);
  t9 = new P.Point(1, 1);
  H.setRuntimeTypeInfo(t9, [J.JSInt]);
  t10 = new P.Point(4096, 4096);
  H.setRuntimeTypeInfo(t10, [J.JSInt]);
  t10 = new X.Dragger(null, null, null, new X.GwenEventHandlerList(t1, null, null), null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, new X.GwenEventHandlerList(t2, null, null), new X.GwenEventHandlerList(t3, null, null), new X.GwenEventHandlerList(t4, null, null), new X.GwenEventHandlerList(t5, null, null), new X.GwenEventHandlerList(t6, null, null), new X.GwenEventHandlerList(t7, null, null), new X.GwenEventHandlerList(t8, null, null), null, t9, t10, null, null, null);
  t10.GwenControlBase$1($parent);
  t10.Dragger$1($parent);
  return t10;
}}

},

GroupBox: {"": "Label;_text,_align,_textPadding,_autoSizeToContents,_mouseEventHandlerAddedHandler,m_Disposed,m_Parent,m_ActualParent,m_InnerPanel,m_ToolTip,m_Skin,m_Bounds,m_RenderBounds,m_InnerBounds,m_Padding,m_Margin,m_Name,m_RestrictToParent,m_Disabled,m_Hidden,m_MouseInputEnabled,m_KeyboardInputEnabled,m_DrawBackground,m_Dock,m_Cursor,m_Tabable,m_NeedsLayout,m_CacheTextureDirty,m_CacheToTexture,m_DragAndDrop_Package,m_UserData,m_DrawDebugOutlines,m_Children,HoverEnter,HoverLeave,BoundsChanged,Clicked,DoubleClicked,RightClicked,DoubleRightClicked,m_Accelerators,m_MinimumSize,m_MaximumSize,PaddingOutlineColor,MarginOutlineColor,BoundsOutlineColor",
  Layout$1: function(skin) {
    X.Label.prototype.Layout$1.call(this, skin);
    if (this._autoSizeToContents === true)
      this.DoSizeToContents$0();
  },
  Render$1: function(skin) {
    var t1 = this._text.m_Bounds;
    skin.DrawGroupBox$4(this, t1.left, t1.height, t1.width);
  },
  SizeToContents$0: function() {
    this.DoSizeToContents$0();
  },
  DoSizeToContents$0: function() {
    var t1, t2, t3;
    this.m_InnerPanel.SizeToChildren$0();
    this.SizeToChildren$0();
    if (J.$lt$n(this.m_Bounds.width, J.$add$ns(J.$add$ns(this._text.m_Bounds.width, this.get$TextPadding().Right), this.get$TextPadding().Left))) {
      t1 = J.$add$ns(J.$add$ns(this._text.m_Bounds.width, this.get$TextPadding().Right), this.get$TextPadding().Left);
      t2 = this.m_Bounds;
      t3 = t2.height;
      this.SetBounds$4(t2.left, t2.top, t1, t3);
    }
  },
  GroupBox$1: function($parent) {
    var t1;
    this._autoSizeToContents = false;
    this.m_NeedsLayout = true;
    this.m_CacheTextureDirty = true;
    this.m_MouseInputEnabled = true;
    this.m_KeyboardInputEnabled = true;
    this._textPadding = new X.GwenPadding(0, 0, 10, 10);
    this.m_NeedsLayout = true;
    this.m_CacheTextureDirty = true;
    t1 = this.m_Parent;
    if (t1 != null) {
      t1.m_NeedsLayout = true;
      t1.m_CacheTextureDirty = true;
    }
    this._align = new X.Pos((C.Pos_8.value | C.Pos_2.value) >>> 0);
    this.m_NeedsLayout = true;
    this.m_CacheTextureDirty = true;
    this.m_NeedsLayout = true;
    this.m_CacheTextureDirty = true;
    this.m_InnerPanel = X.GwenControlBase$(this);
    this.m_InnerPanel.set$Dock(C.Pos_128);
    this.m_InnerPanel.set$Margin(new X.GwenMargin(J.$add$ns(this._text.m_Bounds.height, 5), 5, 5, 5));
  },
  static: {
GroupBox$: function($parent) {
  var t1, t2, t3, t4, t5, t6, t7, t8, t9;
  t1 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t1, [X.GwenEventHandler]);
  t2 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t2, [X.GwenEventHandler]);
  t3 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t3, [X.GwenEventHandler]);
  t4 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t4, [X.GwenEventHandler]);
  t5 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t5, [X.GwenEventHandler]);
  t6 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t6, [X.GwenEventHandler]);
  t7 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t7, [X.GwenEventHandler]);
  t8 = new P.Point(1, 1);
  H.setRuntimeTypeInfo(t8, [J.JSInt]);
  t9 = new P.Point(4096, 4096);
  H.setRuntimeTypeInfo(t9, [J.JSInt]);
  t9 = new X.GroupBox(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, new X.GwenEventHandlerList(t1, null, null), new X.GwenEventHandlerList(t2, null, null), new X.GwenEventHandlerList(t3, null, null), new X.GwenEventHandlerList(t4, null, null), new X.GwenEventHandlerList(t5, null, null), new X.GwenEventHandlerList(t6, null, null), new X.GwenEventHandlerList(t7, null, null), null, t8, t9, null, null, null);
  t9.GwenControlBase$1($parent);
  t9.Label$1($parent);
  t9.GroupBox$1($parent);
  return t9;
}}

},

GwenControlBase: {"": "Object;m_Disposed,m_Parent,m_ActualParent,m_InnerPanel,m_ToolTip,m_Skin,m_Bounds,m_RenderBounds,m_InnerBounds,m_Padding,m_Margin,m_Name,m_RestrictToParent,m_Disabled,m_Hidden,m_MouseInputEnabled,m_KeyboardInputEnabled,m_DrawBackground,m_Dock,m_Cursor,m_Tabable,m_NeedsLayout,m_CacheTextureDirty,m_CacheToTexture,m_DragAndDrop_Package,m_UserData,m_DrawDebugOutlines,m_Children,HoverEnter,HoverLeave,BoundsChanged,Clicked,DoubleClicked,RightClicked,DoubleRightClicked,m_Accelerators,m_MinimumSize,m_MaximumSize,PaddingOutlineColor,MarginOutlineColor,BoundsOutlineColor",
  get$ClickEventAssigned: function() {
    return true;
  },
  get$Children: function() {
    var t1 = this.m_InnerPanel;
    if (t1 != null)
      return t1.get$Children();
    return this.m_Children;
  },
  set$Parent: function(value) {
    var t1 = this.m_Parent;
    if (t1 == null ? value == null : t1 === value)
      return;
    if (t1 != null)
      t1.RemoveChild$2(this, false);
    this.m_Parent = value;
    this.m_ActualParent = null;
    t1 = this.m_Parent;
    if (t1 != null)
      t1.AddChild$1(this);
  },
  get$Dock: function() {
    return this.m_Dock;
  },
  set$Dock: function(value) {
    var t1;
    if (this.m_Dock === value)
      return;
    this.m_Dock = value;
    this.m_NeedsLayout = true;
    this.m_CacheTextureDirty = true;
    t1 = this.m_Parent;
    if (t1 != null) {
      t1.m_NeedsLayout = true;
      t1.m_CacheTextureDirty = true;
    }
  },
  get$Skin: function() {
    var retSkin, t1;
    retSkin = this.m_Skin;
    if (retSkin != null)
      ;
    else {
      t1 = this.m_Parent;
      if (t1 != null)
        retSkin = t1.get$Skin();
      else
        throw H.wrapException(new P.ArgumentError("GwenControlBase.GetSkin: null"));
    }
    return retSkin;
  },
  get$IsMenuComponent: function() {
    var t1 = this.m_Parent;
    if (t1 == null)
      return false;
    return t1.get$IsMenuComponent();
  },
  set$Padding: function(value) {
    var t1 = this.m_Padding;
    if (t1 == null ? value == null : t1 === value)
      return;
    this.m_Padding = value;
    this.m_NeedsLayout = true;
    this.m_CacheTextureDirty = true;
    t1 = this.m_Parent;
    if (t1 != null) {
      t1.m_NeedsLayout = true;
      t1.m_CacheTextureDirty = true;
    }
  },
  set$Margin: function(value) {
    var t1;
    if (this.m_Margin === value)
      return;
    this.m_Margin = value;
    this.m_NeedsLayout = true;
    this.m_CacheTextureDirty = true;
    t1 = this.m_Parent;
    if (t1 != null) {
      t1.m_NeedsLayout = true;
      t1.m_CacheTextureDirty = true;
    }
  },
  get$IsHidden: function() {
    return this.m_Hidden;
  },
  set$IsHidden: function(value) {
    if (value === this.m_Hidden)
      return;
    this.m_Hidden = value;
    this.m_NeedsLayout = true;
    this.m_CacheTextureDirty = true;
  },
  set$MinimumSize: function(value) {
    var t1 = new P.Point(value.x, value.y);
    H.setRuntimeTypeInfo(t1, [J.JSInt]);
    this.m_MinimumSize = t1;
  },
  get$ShouldDrawHover: function() {
    var t1 = $.InputHandler_MouseFocus;
    return t1 === this || t1 == null;
  },
  get$AccelOnlyFocus: function() {
    return false;
  },
  get$IsVisible: function() {
    if (this.get$IsHidden() === true)
      return false;
    var t1 = this.m_Parent;
    if (t1 != null)
      return t1.get$IsVisible();
    return true;
  },
  get$X: function() {
    return this.m_Bounds.left;
  },
  GetCanvas$0: function() {
    var canvas = this.m_Parent;
    if (canvas == null)
      return;
    return canvas.GetCanvas$0();
  },
  InvalidateChildren$1: function(recursive) {
    var t1, child;
    for (t1 = this.m_Children, t1 = new H.ListIterator(t1, t1.length, 0, null); t1.moveNext$0();) {
      child = t1._current;
      child.Invalidate$0();
      if (recursive)
        child.InvalidateChildren$1(true);
    }
    t1 = this.m_InnerPanel;
    if (t1 != null)
      for (t1 = t1.m_Children, t1 = new H.ListIterator(t1, t1.length, 0, null); t1.moveNext$0();) {
        child = t1._current;
        child.Invalidate$0();
        if (recursive)
          child.InvalidateChildren$1(true);
      }
  },
  Invalidate$0: function() {
    this.m_NeedsLayout = true;
    this.m_CacheTextureDirty = true;
  },
  BringToFront$0: function() {
    var t1, t2, t3;
    t1 = this.m_ActualParent;
    if (t1 == null)
      return;
    t1 = t1.m_Children;
    t2 = t1.length;
    if (0 < t2) {
      t3 = t2 - 1;
      if (t3 < 0)
        throw H.ioore(t1, t3);
      t3 = J.$eq(t1[t3], this);
      t1 = t3;
    } else
      t1 = false;
    if (t1)
      return;
    C.JSArray_methods.remove$1(this.m_ActualParent.m_Children, this);
    this.m_ActualParent.m_Children.push(this);
    t1 = this.m_Parent;
    if (t1 != null) {
      t1.m_NeedsLayout = true;
      t1.m_CacheTextureDirty = true;
    }
    this.Redraw$0();
  },
  AddChild$1: function(child) {
    var t1 = this.m_InnerPanel;
    if (t1 != null)
      t1.AddChild$1(child);
    else {
      this.m_Children.push(child);
      child.m_ActualParent = this;
    }
    this.m_NeedsLayout = true;
    this.m_CacheTextureDirty = true;
  },
  RemoveChild$2: function(child, dispose) {
    var t1 = this.m_InnerPanel;
    if (t1 === child) {
      C.JSArray_methods.remove$1(this.m_Children, t1);
      t1 = this.m_InnerPanel;
      t1.GetCanvas$0().RemoveChild$2(t1, false);
      this.m_InnerPanel = null;
      return;
    }
    if (t1 != null && C.JSArray_methods.contains$1(t1.get$Children(), child)) {
      this.m_InnerPanel.RemoveChild$2(child, dispose);
      return;
    }
    C.JSArray_methods.remove$1(this.m_Children, child);
    this.m_NeedsLayout = true;
    this.m_CacheTextureDirty = true;
    if (dispose)
      child.GetCanvas$0().RemoveChild$2(child, false);
  },
  MoveTo$2: function(ix, iy) {
    var $parent, t1, t2, t3, t4;
    if (this.m_RestrictToParent === true && this.m_Parent != null) {
      $parent = this.m_Parent;
      t1 = this.m_Padding;
      t2 = t1.Left;
      if (typeof ix !== "number")
        throw ix.$sub();
      t3 = $parent.m_Margin;
      t4 = t3.Left;
      if (ix - t2 < t4)
        ix = t4 + t2;
      t1 = t1.Top;
      if (typeof iy !== "number")
        throw iy.$sub();
      t3 = t3.Top;
      if (typeof t3 !== "number")
        throw H.iae(t3);
      if (iy - t1 < t3)
        iy = t3 + t1;
      t1 = this.m_Bounds.width;
      if (typeof t1 !== "number")
        throw H.iae(t1);
      t2 = this.m_Padding.Right;
      t3 = J.$sub$n($parent.m_Bounds.width, $parent.m_Margin.Right);
      if (typeof t3 !== "number")
        throw H.iae(t3);
      if (ix + t1 + t2 > t3)
        ix = J.$sub$n(J.$sub$n(J.$sub$n($parent.m_Bounds.width, $parent.m_Margin.Right), this.m_Bounds.width), this.m_Padding.Right);
      t1 = this.m_Bounds.height;
      if (typeof t1 !== "number")
        throw H.iae(t1);
      t2 = this.m_Padding.Bottom;
      t3 = J.$sub$n($parent.m_Bounds.height, $parent.m_Margin.Bottom);
      if (typeof t3 !== "number")
        throw H.iae(t3);
      if (iy + t1 + t2 > t3)
        iy = J.$sub$n(J.$sub$n(J.$sub$n($parent.m_Bounds.height, $parent.m_Margin.Bottom), this.m_Bounds.height), this.m_Padding.Bottom);
    }
    t1 = this.m_Bounds;
    this.SetBounds$4(ix, iy, t1.width, t1.height);
  },
  SetBounds$4: function(x, y, width, height) {
    var oldBounds, t1;
    if (J.$eq(this.m_Bounds.left, x) && J.$eq(this.m_Bounds.top, y) && J.$eq(this.m_Bounds.width, width) && J.$eq(this.m_Bounds.height, height))
      return false;
    oldBounds = this.m_Bounds;
    t1 = new P.Rectangle(x, y, width, height);
    H.setRuntimeTypeInfo(t1, [J.JSInt]);
    this.m_Bounds = t1;
    this.OnBoundsChanged$1(oldBounds);
    this.BoundsChanged.Invoke$2(this, $.get$GwenEventArgs_Empty());
    return true;
  },
  OnBoundsChanged$1: function(oldBounds) {
    var t1 = this.m_Parent;
    if (t1 != null)
      t1.toString;
    if (!J.$eq(this.m_Bounds.width, oldBounds.width) || !J.$eq(this.m_Bounds.height, oldBounds.height)) {
      this.m_NeedsLayout = true;
      this.m_CacheTextureDirty = true;
    }
    this.Redraw$0();
    this.UpdateRenderBounds$0();
  },
  OnScaleChanged$0: function() {
    for (var t1 = this.m_Children, t1 = new H.ListIterator(t1, t1.length, 0, null); t1.moveNext$0();)
      t1._current.OnScaleChanged$0();
  },
  Render$1: function(skin) {
  },
  DoRender$1: function(skin) {
    var skin0 = this.m_Skin;
    if (skin0 != null)
      skin = skin0;
    skin._renderer;
    this.RenderRecursive$2(skin, this.m_Bounds);
    if (this.m_DrawDebugOutlines)
      skin.DrawDebugOutlines$1(this);
  },
  RenderRecursive$2: function(skin, clipRect) {
    var render, oldRenderOffset, oldRegion, t1, t2, child;
    render = skin._renderer;
    oldRenderOffset = render._renderOffset;
    render.AddRenderOffset$1(clipRect);
    this.RenderUnder$1(skin);
    oldRegion = render._clipRegion;
    render.AddClipRegion$1(clipRect);
    if (!render.get$ClipRegionVisible()) {
      render._renderOffset = oldRenderOffset;
      render._clipRegion = oldRegion;
      return;
    }
    render._cvsr.clipCanvas$1(render._clipRegion);
    this.Render$1(skin);
    t1 = this.m_Children;
    t2 = t1.length;
    if (t2 > 0)
      for (t1 = new H.ListIterator(t1, t2, 0, null); t1.moveNext$0();) {
        child = t1._current;
        if (child.get$IsHidden() === true)
          continue;
        child.DoRender$1(skin);
      }
    render._clipRegion = oldRegion;
    render._cvsr.clipCanvas$1(render._clipRegion);
    this.RenderOver$1(skin);
    this.RenderFocus$1(skin);
    render._renderOffset = oldRenderOffset;
  },
  SetSkin$2: function(skin, doChildren) {
    var t1;
    if (this.m_Skin === skin)
      return;
    this.m_Skin = skin;
    this.m_NeedsLayout = true;
    this.m_CacheTextureDirty = true;
    this.Redraw$0();
    if (doChildren)
      for (t1 = this.m_Children, t1 = new H.ListIterator(t1, t1.length, 0, null); t1.moveNext$0();)
        t1._current.SetSkin$2(skin, true);
  },
  SetSkin$1: function(skin) {
    return this.SetSkin$2(skin, false);
  },
  OnMouseMoved$4: function(x, y, dx, dy) {
  },
  OnMouseClickedLeft$3: function(x, y, down) {
    var t1;
    if (down && true) {
      t1 = new X.ClickedEventArgs(null, null, null);
      t1.x = x;
      t1.y = y;
      t1.down = down;
      this.Clicked.Invoke$2(this, t1);
    }
  },
  OnMouseClickedRight$3: function(x, y, down) {
    var t1;
    if (down && true) {
      t1 = new X.ClickedEventArgs(null, null, null);
      t1.x = x;
      t1.y = y;
      t1.down = down;
      this.RightClicked.Invoke$2(this, t1);
    }
  },
  OnMouseDoubleClickedLeft$2: function(x, y) {
    var t1;
    this.OnMouseClickedLeft$3(x, y, true);
    t1 = new X.ClickedEventArgs(null, null, null);
    t1.x = x;
    t1.y = y;
    t1.down = true;
    this.DoubleClicked.Invoke$2(this, t1);
  },
  OnMouseDoubleClickedRight$2: function(x, y) {
    var t1;
    this.OnMouseClickedRight$3(x, y, true);
    t1 = new X.ClickedEventArgs(null, null, null);
    t1.x = x;
    t1.y = y;
    t1.down = true;
    this.DoubleRightClicked.Invoke$2(this, t1);
  },
  OnMouseEntered$0: function() {
    this.HoverEnter.Invoke$2(this, $.get$GwenEventArgs_Empty());
    this.Redraw$0();
  },
  OnMouseLeft$0: function() {
    this.HoverLeave.Invoke$2(this, $.get$GwenEventArgs_Empty());
    this.Redraw$0();
  },
  Focus$0: function() {
    var t1 = $.InputHandler_KeyboardFocus;
    if (t1 === this)
      return;
    if (t1 != null)
      t1.toString;
    $.InputHandler_KeyboardFocus = this;
    this.Redraw$0();
  },
  Blur$0: function() {
    if ($.InputHandler_KeyboardFocus !== this)
      return;
    $.InputHandler_KeyboardFocus = null;
    this.Redraw$0();
  },
  Touch$0: function() {
    var t1 = this.m_Parent;
    if (t1 != null)
      t1.Touch$0();
  },
  GetControlAt$2: function(x, y) {
    var t1, t2, i, child, found;
    if (this.get$IsHidden() === true)
      return;
    if (typeof x !== "number")
      throw x.$lt();
    if (!(x < 0)) {
      if (typeof y !== "number")
        throw y.$lt();
      if (!(y < 0)) {
        t1 = this.m_Bounds;
        t2 = t1.width;
        if (typeof t2 !== "number")
          throw H.iae(t2);
        if (!(x >= t2)) {
          t1 = t1.height;
          if (typeof t1 !== "number")
            throw H.iae(t1);
          t1 = y >= t1;
        } else
          t1 = true;
      } else
        t1 = true;
    } else
      t1 = true;
    if (t1)
      return;
    for (i = this.m_Children.length - 1; i >= 0; --i) {
      t1 = this.m_Children;
      if (i >= t1.length)
        throw H.ioore(t1, i);
      child = t1[i];
      t1 = child.get$X();
      if (typeof t1 !== "number")
        throw H.iae(t1);
      t2 = child.m_Bounds.top;
      if (typeof y !== "number")
        throw y.$sub();
      if (typeof t2 !== "number")
        throw H.iae(t2);
      found = child.GetControlAt$2(x - t1, y - t2);
      if (null != found)
        return found;
    }
    if (this.m_MouseInputEnabled !== true)
      return;
    return this;
  },
  Layout$1: function(skin) {
    skin._renderer;
  },
  RecurseLayout$1: function(skin) {
    var skin0, bounds, height, left, t1, width, $top, t2, height0, t3, t4, t5, t6, t7, child, t8, margin, t9, t10, t11, t12, height2, width2;
    skin0 = this.m_Skin;
    if (skin0 != null)
      skin = skin0;
    if (this.get$IsHidden() === true)
      return;
    if (this.m_NeedsLayout === true) {
      this.m_NeedsLayout = false;
      this.Layout$1(skin);
    }
    bounds = this.m_RenderBounds;
    height = bounds.height;
    left = J.$add$ns(bounds.left, this.m_Padding.Left);
    t1 = this.m_Padding;
    width = J.$sub$n(bounds.width, t1.Left + t1.Right);
    $top = J.$add$ns(bounds.top, this.m_Padding.Top);
    t1 = this.m_Padding;
    t2 = J.getInterceptor$n(height);
    height0 = t2.$sub(height, t1.Top + t1.Bottom);
    for (t1 = this.m_Children, t1 = new H.ListIterator(t1, t1.length, 0, null), t3 = C.Pos_16.value, t4 = C.Pos_4.value, t5 = C.Pos_2.value, t6 = C.Pos_8.value, t7 = C.Pos_128.value; t1.moveNext$0();) {
      child = t1._current;
      if (child.get$IsHidden() === true)
        continue;
      t8 = child.m_Dock.value;
      if (0 !== (t8 & t7) >>> 0)
        continue;
      if (0 !== (t8 & t6) >>> 0) {
        margin = child.m_Margin;
        t9 = margin.Left;
        t10 = J.$add$ns(left, t9);
        t11 = margin.Top;
        t12 = J.getInterceptor$ns($top);
        child.SetBounds$4(t10, t12.$add($top, t11), J.$sub$n(J.$sub$n(width, t9), margin.Right), child.m_Bounds.height);
        height2 = J.$add$ns(J.$add$ns(t11, margin.Bottom), child.m_Bounds.height);
        $top = t12.$add($top, height2);
        height0 = J.$sub$n(height0, height2);
      }
      if (0 !== (t8 & t5) >>> 0) {
        margin = child.m_Margin;
        t9 = margin.Left;
        t10 = J.getInterceptor$ns(left);
        t11 = t10.$add(left, t9);
        t12 = margin.Top;
        child.SetBounds$4(t11, J.$add$ns($top, t12), child.m_Bounds.width, J.$sub$n(J.$sub$n(height0, t12), margin.Bottom));
        t12 = margin.Right;
        t11 = child.m_Bounds.width;
        if (typeof t11 !== "number")
          throw H.iae(t11);
        width2 = t9 + t12 + t11;
        left = t10.$add(left, width2);
        width = J.$sub$n(width, width2);
      }
      if (0 !== (t8 & t4) >>> 0) {
        margin = child.m_Margin;
        t9 = J.$sub$n(J.$add$ns(left, width), child.m_Bounds.width);
        t10 = margin.Right;
        t9 = J.$sub$n(t9, t10);
        t11 = margin.Top;
        child.SetBounds$4(t9, J.$add$ns($top, t11), child.m_Bounds.width, J.$sub$n(J.$sub$n(height0, t11), margin.Bottom));
        t11 = margin.Left;
        t9 = child.m_Bounds.width;
        if (typeof t9 !== "number")
          throw H.iae(t9);
        width = J.$sub$n(width, t11 + t10 + t9);
      }
      if (0 !== (t8 & t3) >>> 0) {
        margin = child.m_Margin;
        t8 = margin.Left;
        t9 = J.$add$ns(left, t8);
        t10 = J.$sub$n(J.$add$ns($top, height), child.m_Bounds.height);
        t11 = margin.Bottom;
        child.SetBounds$4(t9, J.$sub$n(t10, t11), J.$sub$n(J.$sub$n(width, t8), margin.Right), child.m_Bounds.height);
        height0 = J.$sub$n(height0, J.$add$ns(J.$add$ns(child.m_Bounds.height, t11), margin.Top));
      }
      child.RecurseLayout$1(skin);
    }
    this.m_InnerBounds = this.m_RenderBounds;
    for (t1 = this.m_Children, t1 = new H.ListIterator(t1, t1.length, 0, null), t3 = J.getInterceptor$ns(left), t4 = J.getInterceptor$ns($top), t5 = J.getInterceptor$n(width); t1.moveNext$0();) {
      child = t1._current;
      if (0 === (child.get$Dock().value & t7) >>> 0)
        continue;
      margin = child.m_Margin;
      t6 = margin.Left;
      t8 = t3.$add(left, t6);
      t9 = margin.Top;
      child.SetBounds$4(t8, t4.$add($top, t9), J.$sub$n(t5.$sub(width, t6), margin.Right), J.$sub$n(t2.$sub(height, t9), margin.Bottom));
      child.RecurseLayout$1(skin);
    }
    if (this.m_Tabable === true) {
      if (this.GetCanvas$0()._firstTab == null)
        this.GetCanvas$0()._firstTab = this;
      if (this.GetCanvas$0()._nextTab == null)
        this.GetCanvas$0()._nextTab = this;
    }
    if ($.InputHandler_KeyboardFocus === this)
      this.GetCanvas$0()._nextTab = null;
  },
  LocalPosToCanvas$1: function(pnt) {
    var t1, t2, t3, t4, x, y;
    t1 = this.m_Parent;
    if (t1 != null) {
      t2 = pnt.x;
      t3 = this.m_Bounds;
      t4 = t3.left;
      if (typeof t2 !== "number")
        throw t2.$add();
      if (typeof t4 !== "number")
        throw H.iae(t4);
      x = t2 + t4;
      t4 = pnt.y;
      t3 = t3.top;
      if (typeof t4 !== "number")
        throw t4.$add();
      if (typeof t3 !== "number")
        throw H.iae(t3);
      y = t4 + t3;
      t1 = t1.m_InnerPanel;
      if (t1 != null && C.JSArray_methods.contains$1(t1.m_Children, this)) {
        t1 = this.m_Parent.m_InnerPanel.m_Bounds;
        t2 = t1.left;
        if (typeof t2 !== "number")
          throw H.iae(t2);
        x += t2;
        t1 = t1.top;
        if (typeof t1 !== "number")
          throw H.iae(t1);
        y += t1;
      }
      t1 = this.m_Parent;
      t2 = new P.Point(x, y);
      H.setRuntimeTypeInfo(t2, [null]);
      return t1.LocalPosToCanvas$1(t2);
    }
    return pnt;
  },
  CanvasPosToLocal$1: function(pnt) {
    var t1, t2, t3, t4, x, y;
    t1 = this.m_Parent;
    if (t1 != null) {
      t2 = pnt.x;
      t3 = this.m_Bounds;
      t4 = t3.left;
      if (typeof t2 !== "number")
        throw t2.$sub();
      if (typeof t4 !== "number")
        throw H.iae(t4);
      x = t2 - t4;
      t4 = pnt.y;
      t3 = t3.top;
      if (typeof t4 !== "number")
        throw t4.$sub();
      if (typeof t3 !== "number")
        throw H.iae(t3);
      y = t4 - t3;
      t1 = t1.m_InnerPanel;
      if (t1 != null && C.JSArray_methods.contains$1(t1.m_Children, this)) {
        t1 = this.m_Parent.m_InnerPanel.m_Bounds;
        t2 = t1.left;
        if (typeof t2 !== "number")
          throw H.iae(t2);
        x -= t2;
        t1 = t1.top;
        if (typeof t1 !== "number")
          throw H.iae(t1);
        y -= t1;
      }
      t1 = this.m_Parent;
      t2 = new P.Point(x, y);
      H.setRuntimeTypeInfo(t2, [null]);
      return t1.CanvasPosToLocal$1(t2);
    }
    return pnt;
  },
  CloseMenus$0: function() {
    var t1, child;
    for (t1 = this.m_Children, t1 = new H.ListIterator(t1, t1.length, 0, null); t1.moveNext$0();) {
      child = t1._current;
      if (child != null)
        child.CloseMenus$0();
    }
  },
  UpdateRenderBounds$0: function() {
    var t1 = this.m_Bounds;
    t1 = new P.Rectangle(0, 0, t1.width, t1.height);
    H.setRuntimeTypeInfo(t1, [J.JSInt]);
    this.m_RenderBounds = t1;
  },
  SizeToChildren$2: function(width, height) {
    var size, t1, t2, t3, t4;
    size = this.GetChildrenSize$0();
    t1 = size.x;
    t2 = this.m_Padding;
    t3 = t2.Right;
    if (typeof t1 !== "number")
      throw t1.$add();
    t4 = size.y;
    t2 = t2.Bottom;
    if (typeof t4 !== "number")
      throw t4.$add();
    size = new P.Point(t1 + t3, t4 + t2);
    H.setRuntimeTypeInfo(size, [J.JSInt]);
    t1 = width ? size.x : this.m_Bounds.width;
    t2 = height ? size.y : this.m_Bounds.height;
    t3 = this.m_Bounds;
    return this.SetBounds$4(t3.left, t3.top, t1, t2);
  },
  SizeToChildren$0: function() {
    return this.SizeToChildren$2(true, true);
  },
  GetChildrenSize$0: function() {
    var size, t1, child, t2, t3;
    size = new P.Point(0, 0);
    H.setRuntimeTypeInfo(size, [null]);
    for (t1 = this.m_Children, t1 = new H.ListIterator(t1, t1.length, 0, null); t1.moveNext$0();) {
      child = t1._current;
      if (child.get$IsHidden() === true)
        continue;
      t2 = child.m_Bounds;
      t2 = P.max(size.x, J.$add$ns(J.$add$ns(t2.left, t2.width), child.m_Margin.Right));
      t3 = child.m_Bounds;
      size = new P.Point(t2, P.max(size.y, J.$add$ns(J.$add$ns(t3.top, t3.height), child.m_Margin.Bottom)));
      size.$builtinTypeInfo = [J.JSInt];
    }
    return size;
  },
  HandleAccelerator$1: function(accelerator) {
    var t1;
    if ($.InputHandler_KeyboardFocus === this || !this.get$AccelOnlyFocus())
      if (this.m_Accelerators.containsKey$1(accelerator)) {
        t1 = this.m_Accelerators;
        t1.$index(t1, accelerator).Invoke$2(this, $.get$GwenEventArgs_Empty());
        return true;
      }
    t1 = this.m_Children;
    if (t1.length > 0)
      return t1[0].HandleAccelerator$1(accelerator);
    return false;
  },
  Redraw$0: function() {
    this.UpdateColors$0();
    this.m_CacheTextureDirty = true;
    var t1 = this.m_Parent;
    if (t1 != null)
      t1.Redraw$0();
  },
  UpdateColors$0: function() {
  },
  OnKeyPressed$2: function(key, down) {
    var handled;
    switch (key) {
      case C.GwenKey_7:
        handled = this.OnKeyTab$1(down);
        break;
      case C.GwenKey_8:
        handled = this.OnKeySpace$1(down);
        break;
      case C.GwenKey_9:
        handled = this.OnKeyHome$1(down);
        break;
      case C.GwenKey_10:
        handled = this.OnKeyEnd$1(down);
        break;
      case C.GwenKey_1:
        handled = this.OnKeyReturn$1(down);
        break;
      case C.GwenKey_2:
        handled = this.OnKeyBackspace$1(down);
        break;
      case C.GwenKey_3:
        handled = this.OnKeyDelete$1(down);
        break;
      case C.GwenKey_5:
        handled = this.OnKeyRight$1(down);
        break;
      case C.GwenKey_4:
        handled = this.OnKeyLeft$1(down);
        break;
      case C.GwenKey_12:
        handled = false;
        break;
      case C.GwenKey_13:
        handled = false;
        break;
      case C.GwenKey_14:
        handled = false;
        break;
      default:
        handled = false;
        break;
    }
    if (handled !== true && this.m_Parent != null)
      this.m_Parent.OnKeyPressed$2(key, down);
    return handled;
  },
  OnKeyTab$1: function(down) {
    if (!down)
      return true;
    if (this.GetCanvas$0()._nextTab != null) {
      this.GetCanvas$0()._nextTab.Focus$0();
      this.Redraw$0();
    }
    return true;
  },
  OnKeySpace$1: function(down) {
    return false;
  },
  OnKeyReturn$1: function(down) {
    return false;
  },
  OnKeyBackspace$1: function(down) {
    return false;
  },
  OnKeyDelete$1: function(down) {
    return false;
  },
  OnKeyRight$1: function(down) {
    return false;
  },
  OnKeyLeft$1: function(down) {
    return false;
  },
  OnKeyHome$1: function(down) {
    return false;
  },
  OnKeyEnd$1: function(down) {
    return false;
  },
  RenderFocus$1: function(skin) {
    if ($.InputHandler_KeyboardFocus !== this)
      return;
    if (this.m_Tabable !== true)
      return;
    skin.DrawKeyboardHighlight$3(this, this.m_RenderBounds, 3);
  },
  RenderUnder$1: function(skin) {
  },
  RenderOver$1: function(skin) {
  },
  OnChar$1: function(chr) {
    return false;
  },
  GwenControlBase$1: function($parent) {
    var t1;
    this.m_DrawDebugOutlines = false;
    t1 = P.List_List(null, X.GwenControlBase);
    H.setRuntimeTypeInfo(t1, [X.GwenControlBase]);
    this.m_Children = t1;
    this.m_Accelerators = P.HashMap_HashMap(null, null, null, J.JSString, X.GwenEventHandler);
    t1 = new P.Rectangle(0, 0, 0, 0);
    H.setRuntimeTypeInfo(t1, [J.JSInt]);
    this.m_RenderBounds = t1;
    this.set$Parent($parent);
    this.m_Hidden = false;
    t1 = new P.Rectangle(0, 0, 10, 10);
    H.setRuntimeTypeInfo(t1, [null]);
    this.m_Bounds = t1;
    this.m_Padding = $.get$GwenPadding_Zero();
    this.m_Margin = $.get$GwenMargin_Zero();
    this.m_RestrictToParent = false;
    this.m_MouseInputEnabled = true;
    this.m_KeyboardInputEnabled = false;
    this.m_Dock = C.Pos_0;
    this.m_NeedsLayout = true;
    this.m_CacheTextureDirty = true;
    this.m_Cursor = C.CssCursor_auto;
    this.m_Tabable = false;
    this.m_DrawBackground = true;
    this.m_Disabled = false;
    this.m_CacheTextureDirty = true;
    this.m_CacheToTexture = false;
    this.BoundsOutlineColor = X.Color__getDefaultColor(16711680);
    this.MarginOutlineColor = X.Color__getDefaultColor(65280);
    this.PaddingOutlineColor = X.Color__getDefaultColor(255);
  },
  static: {
"": "GwenControlBase_MaxCoord",
GwenControlBase$: function($parent) {
  var t1, t2, t3, t4, t5, t6, t7, t8, t9;
  t1 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t1, [X.GwenEventHandler]);
  t2 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t2, [X.GwenEventHandler]);
  t3 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t3, [X.GwenEventHandler]);
  t4 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t4, [X.GwenEventHandler]);
  t5 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t5, [X.GwenEventHandler]);
  t6 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t6, [X.GwenEventHandler]);
  t7 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t7, [X.GwenEventHandler]);
  t8 = new P.Point(1, 1);
  H.setRuntimeTypeInfo(t8, [J.JSInt]);
  t9 = new P.Point(4096, 4096);
  H.setRuntimeTypeInfo(t9, [J.JSInt]);
  t9 = new X.GwenControlBase(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, new X.GwenEventHandlerList(t1, null, null), new X.GwenEventHandlerList(t2, null, null), new X.GwenEventHandlerList(t3, null, null), new X.GwenEventHandlerList(t4, null, null), new X.GwenEventHandlerList(t5, null, null), new X.GwenEventHandlerList(t6, null, null), new X.GwenEventHandlerList(t7, null, null), null, t8, t9, null, null, null);
  t9.GwenControlBase$1($parent);
  return t9;
}}

},

GwenControlCanvas: {"": "GwenControlBase;NeedsRedraw,_scale,_backgroundColor,_firstTab,_nextTab,m_Disposed,m_Parent,m_ActualParent,m_InnerPanel,m_ToolTip,m_Skin,m_Bounds,m_RenderBounds,m_InnerBounds,m_Padding,m_Margin,m_Name,m_RestrictToParent,m_Disabled,m_Hidden,m_MouseInputEnabled,m_KeyboardInputEnabled,m_DrawBackground,m_Dock,m_Cursor,m_Tabable,m_NeedsLayout,m_CacheTextureDirty,m_CacheToTexture,m_DragAndDrop_Package,m_UserData,m_DrawDebugOutlines,m_Children,HoverEnter,HoverLeave,BoundsChanged,Clicked,DoubleClicked,RightClicked,DoubleRightClicked,m_Accelerators,m_MinimumSize,m_MaximumSize,PaddingOutlineColor,MarginOutlineColor,BoundsOutlineColor",
  set$Scale: function(value) {
    var t1;
    if (this._scale === value)
      return;
    this._scale = value;
    if (this.get$Skin() != null) {
      this.get$Skin()._renderer;
      t1 = true;
    } else
      t1 = false;
    if (t1)
      this.get$Skin()._renderer._scale = this._scale;
    this.OnScaleChanged$0();
    this.Redraw$0();
  },
  Redraw$0: function() {
    this.NeedsRedraw = true;
    X.GwenControlBase.prototype.Redraw$0.call(this);
    this.get$Skin()._renderer.notifyRedrawRequested$0();
  },
  GetCanvas$0: function() {
    return this;
  },
  RenderCanvas$0: function() {
    var render, t1, t2;
    this.DoThink$0();
    render = this.get$Skin()._renderer;
    render.begin$0();
    this.RecurseLayout$1(this.get$Skin());
    render._clipRegion = this.m_Bounds;
    t1 = new P.Point(0, 0);
    H.setRuntimeTypeInfo(t1, [J.JSInt]);
    render._renderOffset = t1;
    render._scale = this._scale;
    if (this.m_DrawBackground === true) {
      t1 = this._backgroundColor;
      t2 = render._cvsr;
      J.set$fillStyle$x(t2._txContext, t1.get$StyleString());
      t2._color = t1;
      render.drawFilledRect$1(this.m_RenderBounds);
    }
    this.DoRender$1(this.get$Skin());
    J.restore$0$x(render._cvsr._txContext);
    t1 = render._cvsr;
    t1.finish$0(t1);
  },
  Render$1: function(skin) {
    X.GwenControlBase.prototype.Render$1.call(this, skin);
    this.NeedsRedraw = false;
  },
  OnBoundsChanged$1: function(oldBounds) {
    X.GwenControlBase.prototype.OnBoundsChanged$1.call(this, oldBounds);
    this.InvalidateChildren$1(true);
  },
  DoThink$0: function() {
    if (this.m_Hidden === true)
      return;
    this._nextTab = null;
    this._firstTab = null;
    this.RecurseLayout$1(this.get$Skin());
    if (this._nextTab == null)
      this._nextTab = this._firstTab;
    X.InputHandler_OnCanvasThink(this);
  },
  Input_MouseMoved$4: function(x, y, dx, dy) {
    var t1, t2;
    if (this.m_Hidden === true)
      return false;
    t1 = new P.Point(x, y);
    H.setRuntimeTypeInfo(t1, [null]);
    $.InputHandler_MousePosition = t1;
    X.InputHandler_UpdateHoveredControl(this);
    t1 = $.InputHandler_HoveredControl;
    if (t1 == null)
      return false;
    if (t1 === this)
      return false;
    if (t1.GetCanvas$0() !== this)
      return false;
    $.InputHandler_HoveredControl.OnMouseMoved$4(x, y, dx, dy);
    t1 = $.InputHandler_HoveredControl;
    t2 = t1.get$Skin()._renderer;
    t1 = t1.m_Cursor;
    t2 = t2._cvsr;
    t1 = t1.Name;
    J.set$cursor$x(t2._canvas.style, t1);
    return true;
  },
  Input_MouseButton$2: function(button, down) {
    if (this.m_Hidden === true)
      return false;
    return X.InputHandler_OnMouseClicked(this, button, down);
  },
  Input_Key$2: function(key, down) {
    var t1;
    if (this.m_Hidden === true)
      return false;
    t1 = key.value;
    if (t1 <= C.GwenKey_0.value)
      return false;
    if (t1 >= C.GwenKey_16.value)
      return false;
    return X.InputHandler_OnKeyEvent(this, key, down);
  },
  Input_Character$1: function(chr) {
    var t1, t2;
    if (this.m_Hidden === true)
      return false;
    if (X.GwenUtil_scharIsControl(chr))
      return false;
    if (X.InputHandler_HandleAccelerator(this, chr))
      return true;
    t1 = $.InputHandler_KeyboardFocus;
    if (t1 == null)
      return false;
    if (t1.GetCanvas$0() !== this)
      return false;
    if (!$.InputHandler_KeyboardFocus.get$IsVisible())
      return false;
    t1 = $.get$InputHandler_m_KeyData().KeyState;
    t2 = C.GwenKey_11.value;
    if (t2 < 0 || t2 >= t1.length)
      throw H.ioore(t1, t2);
    if (t1[t2] === true)
      return false;
    return $.InputHandler_KeyboardFocus.OnChar$1(chr);
  },
  GwenControlCanvas$1: function(skin) {
    this.SetSkin$1(skin);
    this.SetBounds$4(0, 0, 10000, 1000);
    this.set$Scale(1);
    this._backgroundColor = X.Color__getDefaultColor(16777215);
    this.m_DrawBackground = false;
  },
  static: {
GwenControlCanvas$: function(skin) {
  var t1, t2, t3, t4, t5, t6, t7, t8, t9;
  t1 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t1, [X.GwenEventHandler]);
  t2 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t2, [X.GwenEventHandler]);
  t3 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t3, [X.GwenEventHandler]);
  t4 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t4, [X.GwenEventHandler]);
  t5 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t5, [X.GwenEventHandler]);
  t6 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t6, [X.GwenEventHandler]);
  t7 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t7, [X.GwenEventHandler]);
  t8 = new P.Point(1, 1);
  H.setRuntimeTypeInfo(t8, [J.JSInt]);
  t9 = new P.Point(4096, 4096);
  H.setRuntimeTypeInfo(t9, [J.JSInt]);
  t9 = new X.GwenControlCanvas(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, new X.GwenEventHandlerList(t1, null, null), new X.GwenEventHandlerList(t2, null, null), new X.GwenEventHandlerList(t3, null, null), new X.GwenEventHandlerList(t4, null, null), new X.GwenEventHandlerList(t5, null, null), new X.GwenEventHandlerList(t6, null, null), new X.GwenEventHandlerList(t7, null, null), null, t8, t9, null, null, null);
  t9.GwenControlBase$1(null);
  t9.GwenControlCanvas$1(skin);
  return t9;
}}

},

GwenEventArgs: {"": "Object;", static: {
"": "GwenEventArgs_Empty",
}
},

ClickedEventArgs: {"": "GwenEventArgs;x>,y>,down"},

GwenEventHandler: {"": "Object;"},

GwenEventHandlerList: {"": "GwenEventHandler;_list,HandlerAddedNotifyHandler,HandlerRemovedNotifyHandler",
  Invoke$2: function(controlBase, $arguments) {
    var t1;
    for (t1 = this._list, t1 = new H.ListIterator(t1, t1.length, 0, null); t1.moveNext$0();)
      t1._current.Invoke$2(controlBase, $arguments);
  },
  add$1: function(_, handler) {
    var t1 = this._list;
    if (C.JSArray_methods.contains$1(t1, handler))
      throw H.wrapException(new P.ArgumentError("Err - this handler already added."));
    t1.push(handler);
    t1 = this.HandlerAddedNotifyHandler;
    if (null != t1) {
      t1 = t1._label;
      t1.m_MouseInputEnabled = true;
    }
  },
  addFromList$1: function(list) {
    var t1, t2, handler, t3;
    for (t1 = new H.ListIterator(list, list.length, 0, null), t2 = this._list; t1.moveNext$0();) {
      handler = t1._current;
      if (C.JSArray_methods.contains$1(t2, handler))
        H.throwExpression(new P.ArgumentError("Err - this handler already added."));
      t2.push(handler);
      t3 = this.HandlerAddedNotifyHandler;
      if (null != t3) {
        t3 = t3._label;
        t3.m_MouseInputEnabled = true;
      }
    }
  },
  remove$1: function(_, handler) {
    var t1 = this._list;
    if (C.JSArray_methods.contains$1(t1, handler)) {
      C.JSArray_methods.remove$1(t1, handler);
      t1 = this.HandlerRemovedNotifyHandler;
      if (null != t1) {
        t1 = t1._label;
        t1.m_MouseInputEnabled = t1.get$ClickEventAssigned();
      }
    }
  },
  $add: function(_, handler) {
    var t1, newList;
    t1 = P.List_List(null, X.GwenEventHandler);
    H.setRuntimeTypeInfo(t1, [X.GwenEventHandler]);
    newList = new X.GwenEventHandlerList(t1, null, null);
    t1 = this._list;
    newList.addFromList$1(t1);
    newList.add$1(newList, handler);
    C.JSArray_methods.set$length(t1, 0);
    return newList;
  },
  $sub: function(_, handler) {
    var t1, newList;
    t1 = P.List_List(null, X.GwenEventHandler);
    H.setRuntimeTypeInfo(t1, [X.GwenEventHandler]);
    newList = new X.GwenEventHandlerList(t1, null, null);
    t1 = this._list;
    newList.addFromList$1(t1);
    newList.remove$1(newList, handler);
    C.JSArray_methods.set$length(t1, 0);
    return newList;
  }
},

GwenFont: {"": "Object;",
  GwenFont$_internal$3: function(renderer, faceName, size) {
    this.set$FaceName(faceName);
    this.set$Size(size);
    this.set$Smooth(false);
  }
},

GwenKey: {"": "Object;value>", static: {
"": "GwenKey_Invalid,GwenKey_Return,GwenKey_Backspace,GwenKey_Delete,GwenKey_Left,GwenKey_Right,GwenKey_Shift,GwenKey_Tab,GwenKey_Space,GwenKey_Home,GwenKey_End,GwenKey_Control,GwenKey_Up,GwenKey_Down,GwenKey_Escape,GwenKey_Alt,GwenKey_Count",
GwenKey_getKeyFromValue: function(iKey) {
  var t1, key;
  for (t1 = new H.ListIterator([C.GwenKey_0, C.GwenKey_1, C.GwenKey_2, C.GwenKey_3, C.GwenKey_4, C.GwenKey_5, C.GwenKey_6, C.GwenKey_7, C.GwenKey_8, C.GwenKey_9, C.GwenKey_10, C.GwenKey_11, C.GwenKey_12, C.GwenKey_13, C.GwenKey_14, C.GwenKey_15, C.GwenKey_16], 17, 0, null); t1.moveNext$0();) {
    key = t1._current;
    if (J.$eq(J.get$value$x(key), iKey))
      return key;
  }
  return;
}}
},

GwenMargin: {"": "Object;Top,Bottom,Left,Right",
  get$hashCode: function(_) {
    var t1 = J.$mul$n(this.Top, 397);
    if (typeof t1 !== "number")
      throw t1.$xor();
    return (((((t1 ^ this.Bottom) >>> 0) * 397 ^ this.Left) >>> 0) * 397 ^ this.Right) >>> 0;
  },
  static: {
"": "GwenMargin_Zero,GwenMargin_One,GwenMargin_Two,GwenMargin_Three,GwenMargin_Four,GwenMargin_Five,GwenMargin_Six,GwenMargin_Seven,GwenMargin_Eight,GwenMargin_Nine,GwenMargin_Ten",
}

},

CanvasFont: {"": "GwenFont;_facename,_size,_bSmooth,_data,_renderer",
  set$FaceName: function(value) {
    this._facename = value;
  },
  set$Size: function(value) {
    this._size = value;
  },
  set$Smooth: function(value) {
    this._bSmooth = value;
  }
},

CanvasTexture: {"": "GwenTexture;_gwendart$_name,_data,_bFailed,_width,_height,_hasData,_renderer",
  set$Failed: function(value) {
    this._bFailed = value;
  },
  set$Width: function(value) {
    this._width = value;
  },
  set$Height: function(value) {
    this._height = value;
  },
  CanvasTexture$1: function(renderer) {
    this._data = new P.Object();
    this._bFailed = false;
    this._hasData = false;
  },
  static: {
CanvasTexture$: function(renderer) {
  var t1 = new X.CanvasTexture(null, null, null, null, null, null, renderer);
  t1.GwenTexture$_internal$1(renderer);
  t1.CanvasTexture$1(renderer);
  return t1;
}}

},

GwenRenderer: {"": "GwenRendererBase;_scale,_cvsr,_gwenCanvas,lastKnownMouseX,lastKnownMouseY,_frameNumber,RenderRequestQueue,_bAlreadyRendering,_bRenderUpdateNeeded,_renderOffset,_clipRegion",
  _initKeyXlateDict$0: function() {
    var d = $.get$GwenRenderer_KeyXlateDict();
    d.$indexSet(d, 65, "a");
    d.$indexSet(d, 192, "`");
    d.$indexSet(d, 66, "b");
    d.$indexSet(d, 220, "\\");
    d.$indexSet(d, 8, "\u0008");
    d.$indexSet(d, 67, "c");
    d.$indexSet(d, 221, "]");
    d.$indexSet(d, 188, ",");
    d.$indexSet(d, 68, "d");
    d.$indexSet(d, 189, "-");
    d.$indexSet(d, 69, "e");
    d.$indexSet(d, 13, "\r");
    d.$indexSet(d, 56, "8");
    d.$indexSet(d, 187, "=");
    d.$indexSet(d, 27, "\u001b");
    d.$indexSet(d, 70, "f");
    d.$indexSet(d, 53, "5");
    d.$indexSet(d, 52, "4");
    d.$indexSet(d, 71, "g");
    d.$indexSet(d, 72, "h");
    d.$indexSet(d, 73, "i");
    d.$indexSet(d, 74, "j");
    d.$indexSet(d, 75, "k");
    d.$indexSet(d, 76, "l");
    d.$indexSet(d, 77, "m");
    d.$indexSet(d, 78, "n");
    d.$indexSet(d, 57, "9");
    d.$indexSet(d, 101, "5");
    d.$indexSet(d, 100, "4");
    d.$indexSet(d, 99, "3");
    d.$indexSet(d, 98, "2");
    d.$indexSet(d, 97, "1");
    d.$indexSet(d, 96, "0");
    d.$indexSet(d, 102, "6");
    d.$indexSet(d, 103, "7");
    d.$indexSet(d, 104, "8");
    d.$indexSet(d, 105, "9");
    d.$indexSet(d, 111, "/");
    d.$indexSet(d, 106, "*");
    d.$indexSet(d, 109, "-");
    d.$indexSet(d, 107, "+");
    d.$indexSet(d, 79, "o");
    d.$indexSet(d, 49, "1");
    d.$indexSet(d, 80, "p");
    d.$indexSet(d, 190, ".");
    d.$indexSet(d, 81, "q");
    d.$indexSet(d, 63, "?");
    d.$indexSet(d, 83, "s");
    d.$indexSet(d, 55, "7");
    d.$indexSet(d, 222, "'");
    d.$indexSet(d, 54, "6");
    d.$indexSet(d, 191, "/");
    d.$indexSet(d, 32, " ");
    d.$indexSet(d, 84, "t");
    d.$indexSet(d, 9, "\t");
    d.$indexSet(d, 51, "3");
    d.$indexSet(d, 192, "~");
    d.$indexSet(d, 50, "2");
    d.$indexSet(d, 85, "u");
    d.$indexSet(d, 86, "v");
    d.$indexSet(d, 88, "x");
    d.$indexSet(d, 89, "y");
    d.$indexSet(d, 90, "z");
    d.$indexSet(d, 48, "0");
    d = $.get$GwenRenderer_KeyXlateDictShift();
    d.$indexSet(d, 65, "A");
    d.$indexSet(d, 192, "~");
    d.$indexSet(d, 66, "B");
    d.$indexSet(d, 220, "|");
    d.$indexSet(d, 8, "\u0008");
    d.$indexSet(d, 67, "C");
    d.$indexSet(d, 221, "}");
    d.$indexSet(d, 188, "<");
    d.$indexSet(d, 68, "D");
    d.$indexSet(d, 189, "_");
    d.$indexSet(d, 69, "E");
    d.$indexSet(d, 13, "\r");
    d.$indexSet(d, 56, "*");
    d.$indexSet(d, 187, "+");
    d.$indexSet(d, 27, "\u001b");
    d.$indexSet(d, 70, "F");
    d.$indexSet(d, 53, "%");
    d.$indexSet(d, 52, "$");
    d.$indexSet(d, 71, "G");
    d.$indexSet(d, 72, "H");
    d.$indexSet(d, 73, "I");
    d.$indexSet(d, 74, "J");
    d.$indexSet(d, 75, "K");
    d.$indexSet(d, 76, "L");
    d.$indexSet(d, 77, "M");
    d.$indexSet(d, 78, "N");
    d.$indexSet(d, 57, "(");
    d.$indexSet(d, 101, "5");
    d.$indexSet(d, 100, "4");
    d.$indexSet(d, 99, "3");
    d.$indexSet(d, 98, "2");
    d.$indexSet(d, 97, "1");
    d.$indexSet(d, 96, "0");
    d.$indexSet(d, 102, "6");
    d.$indexSet(d, 103, "7");
    d.$indexSet(d, 104, "8");
    d.$indexSet(d, 105, "9");
    d.$indexSet(d, 111, "/");
    d.$indexSet(d, 106, "*");
    d.$indexSet(d, 109, "-");
    d.$indexSet(d, 107, "+");
    d.$indexSet(d, 79, "O");
    d.$indexSet(d, 49, "!");
    d.$indexSet(d, 80, "P");
    d.$indexSet(d, 190, ">");
    d.$indexSet(d, 81, "Q");
    d.$indexSet(d, 63, "?");
    d.$indexSet(d, 83, "S");
    d.$indexSet(d, 55, "&");
    d.$indexSet(d, 222, "\"");
    d.$indexSet(d, 54, "^");
    d.$indexSet(d, 191, "?");
    d.$indexSet(d, 32, " ");
    d.$indexSet(d, 84, "T");
    d.$indexSet(d, 9, "\t");
    d.$indexSet(d, 51, "#");
    d.$indexSet(d, 192, "~");
    d.$indexSet(d, 50, "@");
    d.$indexSet(d, 85, "U");
    d.$indexSet(d, 86, "V");
    d.$indexSet(d, 88, "X");
    d.$indexSet(d, 89, "Y");
    d.$indexSet(d, 90, "Z");
    d.$indexSet(d, 48, ")");
    d = $.get$GwenRenderer_KeyXlateDictCtrl();
    d.$indexSet(d, 65, "\u0001");
    d.$indexSet(d, 66, "\u0002");
    d.$indexSet(d, 67, "\u0003");
    d.$indexSet(d, 68, "\u0004");
    d.$indexSet(d, 69, "\u0005");
    d.$indexSet(d, 70, "\u0006");
    d.$indexSet(d, 71, "\u0007");
    d.$indexSet(d, 72, "\u0008");
    d.$indexSet(d, 73, "\t");
    d.$indexSet(d, 74, "\n");
    d.$indexSet(d, 75, "\u000b");
    d.$indexSet(d, 76, "\u000c");
    d.$indexSet(d, 77, "\r");
    d.$indexSet(d, 78, "\u000e");
    d.$indexSet(d, 79, "\u000f");
    d.$indexSet(d, 80, "\u0010");
    d.$indexSet(d, 81, "\u0011");
    d.$indexSet(d, 83, "\u0012");
    d.$indexSet(d, 84, "\u0013");
    d.$indexSet(d, 85, "\u0014");
    d.$indexSet(d, 86, "\u0015");
    d.$indexSet(d, 88, "\u0016");
    d.$indexSet(d, 89, "\u0017");
    d.$indexSet(d, 90, "\u0018");
  },
  get$Scale: function() {
    return this._scale;
  },
  set$Scale: function(value) {
    this._scale = value;
  },
  begin$0: function() {
    this._cvsr.requestRenderFrame$0().get$completer().future.then$2$onError(this.get$doFrameComplete(), this.get$doFrameCompleteError());
    var t1 = this._cvsr;
    t1.start$0(t1);
  },
  get$CTT: function() {
    return;
  },
  get$ClipRegionVisible: function() {
    return !J.$eq(this._clipRegion.width, 0) || !J.$eq(this._clipRegion.height, 0);
  },
  drawFilledRect$1: function(r) {
    var rect, t1;
    rect = this.translateRect$1(r);
    t1 = this._cvsr;
    J.fillRect$4$x(t1._txContext, rect.left, rect.top, rect.width, rect.height);
    t1._bTextureModified = true;
  },
  loadTextureKnownSize$3: function(t, width, height) {
    if (t._gwendart$_name != null)
      t._hasData = true;
    t._width = width;
    t._height = height;
  },
  renderText$3: function(font, position, text) {
    this._cvsr._strCssFont = H.S(font._size) + "px " + font._facename;
    this._cvsr.drawTextOnCanvas$3(text, this.translateX$1(position.x), this.translateY$1(position.y));
  },
  drawLinedRect$1: function(r) {
    var rect, t1, t2, t3, t4, t5;
    rect = this.translateRect$1(r);
    t1 = rect.left;
    t2 = rect.top;
    t3 = rect.width;
    t4 = new P.Rectangle(t1, t2, t3, 1);
    H.setRuntimeTypeInfo(t4, [J.JSInt]);
    this.drawFilledRect$1(t4);
    t4 = rect.height;
    t5 = new P.Rectangle(t1, J.$sub$n(J.$add$ns(t2, t4), 1), t3, 1);
    H.setRuntimeTypeInfo(t5, [J.JSInt]);
    this.drawFilledRect$1(t5);
    t5 = new P.Rectangle(t1, t2, 1, t4);
    H.setRuntimeTypeInfo(t5, [J.JSInt]);
    this.drawFilledRect$1(t5);
    t4 = new P.Rectangle(J.$sub$n(J.$add$ns(t1, t3), 1), t2, 1, t4);
    H.setRuntimeTypeInfo(t4, [J.JSInt]);
    this.drawFilledRect$1(t4);
  },
  pixelColor$4: function(texture, x, y, defaultColor) {
    var t1, t2;
    t1 = texture._gwendart$_name;
    t2 = this._cvsr;
    if (t1 === t2._nameSkinTexture)
      return t2.getSkinTexturePixelColor$2(x, y);
    else
      return defaultColor;
  },
  onMouseDownHandler$1: function(me) {
    var t1, t2, t3, t4, t5;
    if (this._frameNumber === 0)
      return;
    t1 = J.getInterceptor$x(me);
    t2 = t1.get$client(me);
    t2 = t2.get$x(t2);
    t3 = J.toInt$0$n(J.get$left$x(this._cvsr._canvas.getBoundingClientRect()));
    if (typeof t2 !== "number")
      throw t2.$sub();
    t4 = t1.get$client(me);
    t4 = t4.get$y(t4);
    t5 = J.toInt$0$n(J.get$top$x(this._cvsr._canvas.getBoundingClientRect()));
    if (typeof t4 !== "number")
      throw t4.$sub();
    this.lastKnownMouseX = t2 - t3;
    this.lastKnownMouseY = t4 - t5;
    t5 = this._gwenCanvas;
    t5.Input_MouseButton$2(t1.get$button(me) === 2 ? 1 : 0, true);
  },
  get$onMouseDownHandler: function() {
    return new H.BoundClosure$1(this, X.GwenRenderer.prototype.onMouseDownHandler$1, null, "onMouseDownHandler$1");
  },
  onMouseUpHandler$1: function(me) {
    var t1, t2, t3, t4, t5;
    if (this._frameNumber === 0)
      return;
    t1 = J.getInterceptor$x(me);
    t2 = t1.get$client(me);
    t2 = t2.get$x(t2);
    t3 = J.toInt$0$n(J.get$left$x(this._cvsr._canvas.getBoundingClientRect()));
    if (typeof t2 !== "number")
      throw t2.$sub();
    t4 = t1.get$client(me);
    t4 = t4.get$y(t4);
    t5 = J.toInt$0$n(J.get$top$x(this._cvsr._canvas.getBoundingClientRect()));
    if (typeof t4 !== "number")
      throw t4.$sub();
    this.lastKnownMouseX = t2 - t3;
    this.lastKnownMouseY = t4 - t5;
    t5 = this._gwenCanvas;
    t5.Input_MouseButton$2(t1.get$button(me) === 2 ? 1 : 0, false);
  },
  get$onMouseUpHandler: function() {
    return new H.BoundClosure$1(this, X.GwenRenderer.prototype.onMouseUpHandler$1, null, "onMouseUpHandler$1");
  },
  onMouseMoveHandler$1: function(me) {
    var t1, t2, t3, mx, my;
    if (this._frameNumber === 0)
      return;
    t1 = J.getInterceptor$x(me);
    t2 = t1.get$client(me);
    t2 = t2.get$x(t2);
    t3 = J.toInt$0$n(J.get$left$x(this._cvsr._canvas.getBoundingClientRect()));
    if (typeof t2 !== "number")
      throw t2.$sub();
    mx = t2 - t3;
    t1 = t1.get$client(me);
    t1 = t1.get$y(t1);
    t3 = J.toInt$0$n(J.get$top$x(this._cvsr._canvas.getBoundingClientRect()));
    if (typeof t1 !== "number")
      throw t1.$sub();
    my = t1 - t3;
    if ($.GwenRenderer_g_bShiftKeyDown === true)
      this.notifyRedrawRequested$0();
    this._gwenCanvas.Input_MouseMoved$4(mx, my, mx - this.lastKnownMouseX, my - this.lastKnownMouseY);
    this.lastKnownMouseX = mx;
    this.lastKnownMouseY = my;
  },
  get$onMouseMoveHandler: function() {
    return new H.BoundClosure$1(this, X.GwenRenderer.prototype.onMouseMoveHandler$1, null, "onMouseMoveHandler$1");
  },
  onKeyDownHandler$1: function(ke) {
    var t1;
    if (this._frameNumber === 0)
      return;
    this._gwenCanvas.Input_Key$2(this.getGwenKeyFromEvent$1(ke), true);
    t1 = J.getInterceptor$x(ke);
    if (t1.get$shiftKey(ke) === true)
      $.GwenRenderer_g_bShiftKeyDown = true;
    if (t1.get$keyCode(ke) === 32)
      P.Future_Future(new X.GwenRenderer_onKeyDownHandler_closure(this), null);
  },
  get$onKeyDownHandler: function() {
    return new H.BoundClosure$1(this, X.GwenRenderer.prototype.onKeyDownHandler$1, null, "onKeyDownHandler$1");
  },
  onKeyUpHandler$1: function(ke) {
    if (this._frameNumber === 0)
      return;
    this._gwenCanvas.Input_Key$2(this.getGwenKeyFromEvent$1(ke), false);
    $.GwenRenderer_g_bShiftKeyDown = J.get$shiftKey$x(ke);
  },
  get$onKeyUpHandler: function() {
    return new H.BoundClosure$1(this, X.GwenRenderer.prototype.onKeyUpHandler$1, null, "onKeyUpHandler$1");
  },
  onKeyPressHandler$1: function(ke) {
    if (this._frameNumber === 0)
      return;
    this._gwenCanvas.Input_Character$1(P.String_String$fromCharCodes([J.get$charCode$x(ke)]));
  },
  get$onKeyPressHandler: function() {
    return new H.BoundClosure$1(this, X.GwenRenderer.prototype.onKeyPressHandler$1, null, "onKeyPressHandler$1");
  },
  connectEventsToGwenCanvas$1: function(canvas) {
    var t1, t2;
    this._gwenCanvas = canvas;
    t1 = this._cvsr._canvas;
    t1.toString;
    t1 = new W._ElementEventStreamImpl(t1, C.EventStreamProvider_mousedown._eventType, false);
    H.setRuntimeTypeInfo(t1, [null]);
    t2 = this.get$onMouseDownHandler();
    t2 = new W._EventStreamSubscription(0, t1._html$_target, t1._eventType, W._wrapZone(t2), t1._useCapture);
    H.setRuntimeTypeInfo(t2, [H.getRuntimeTypeArgument(t1, "_EventStream", 0)]);
    t2._tryResume$0();
    t2 = this._cvsr._canvas;
    t2.toString;
    t2 = new W._ElementEventStreamImpl(t2, C.EventStreamProvider_mouseup._eventType, false);
    H.setRuntimeTypeInfo(t2, [null]);
    t1 = this.get$onMouseUpHandler();
    t1 = new W._EventStreamSubscription(0, t2._html$_target, t2._eventType, W._wrapZone(t1), t2._useCapture);
    H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(t2, "_EventStream", 0)]);
    t1._tryResume$0();
    t1 = this._cvsr._canvas;
    t1.toString;
    t1 = new W._ElementEventStreamImpl(t1, C.EventStreamProvider_mousemove._eventType, false);
    H.setRuntimeTypeInfo(t1, [null]);
    t2 = this.get$onMouseMoveHandler();
    t2 = new W._EventStreamSubscription(0, t1._html$_target, t1._eventType, W._wrapZone(t2), t1._useCapture);
    H.setRuntimeTypeInfo(t2, [H.getRuntimeTypeArgument(t1, "_EventStream", 0)]);
    t2._tryResume$0();
    t2 = this._cvsr._canvas;
    t2.toString;
    t2 = new W._ElementEventStreamImpl(t2, C.EventStreamProvider_keydown._eventType, false);
    H.setRuntimeTypeInfo(t2, [null]);
    t1 = this.get$onKeyDownHandler();
    t1 = new W._EventStreamSubscription(0, t2._html$_target, t2._eventType, W._wrapZone(t1), t2._useCapture);
    H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(t2, "_EventStream", 0)]);
    t1._tryResume$0();
    t1 = this._cvsr._canvas;
    t1.toString;
    t1 = new W._ElementEventStreamImpl(t1, C.EventStreamProvider_keyup._eventType, false);
    H.setRuntimeTypeInfo(t1, [null]);
    t2 = this.get$onKeyUpHandler();
    t2 = new W._EventStreamSubscription(0, t1._html$_target, t1._eventType, W._wrapZone(t2), t1._useCapture);
    H.setRuntimeTypeInfo(t2, [H.getRuntimeTypeArgument(t1, "_EventStream", 0)]);
    t2._tryResume$0();
    t2 = this._cvsr._canvas;
    t2.toString;
    t2 = new W._ElementEventStreamImpl(t2, C.EventStreamProvider_keypress._eventType, false);
    H.setRuntimeTypeInfo(t2, [null]);
    t1 = this.get$onKeyPressHandler();
    t1 = new W._EventStreamSubscription(0, t2._html$_target, t2._eventType, W._wrapZone(t1), t2._useCapture);
    H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(t2, "_EventStream", 0)]);
    t1._tryResume$0();
  },
  getGwenKeyFromEvent$1: function(ke) {
    switch (J.get$keyCode$x(ke)) {
      case 8:
        return C.GwenKey_2;
      case 13:
        return C.GwenKey_1;
      case 46:
        return C.GwenKey_3;
      case 37:
        return C.GwenKey_4;
      case 39:
        return C.GwenKey_5;
      case 16:
        return C.GwenKey_6;
      case 9:
        return C.GwenKey_7;
      case 32:
        return C.GwenKey_8;
      case 36:
        return C.GwenKey_9;
      case 35:
        return C.GwenKey_10;
      case 17:
        return C.GwenKey_11;
      case 38:
        return C.GwenKey_12;
      case 40:
        return C.GwenKey_13;
      case 27:
        return C.GwenKey_14;
      case 18:
        return C.GwenKey_15;
      default:
        return C.GwenKey_0;
    }
  },
  notifyRedrawRequested$0: function() {
    if (null != this._gwenCanvas && !this._bAlreadyRendering) {
      this._bRenderUpdateNeeded = false;
      this._bAlreadyRendering = true;
      this._gwenCanvas.RenderCanvas$0();
      this._bAlreadyRendering = false;
    } else
      this._bRenderUpdateNeeded = true;
  },
  get$notifyRedrawRequested: function() {
    return new P.BoundClosure$0(this, X.GwenRenderer.prototype.notifyRedrawRequested$0, null, "notifyRedrawRequested$0");
  },
  doFrameComplete$1: function(rreq) {
    var timeCompleted, t1, t2;
    timeCompleted = rreq.get$timeFinished().difference$1(rreq.timeStarted);
    this._cvsr.removeCompletedRenderRequestsFromQueue$0();
    t1 = this._bRenderUpdateNeeded;
    t2 = this._frameNumber;
    if (t1) {
      P.print("Frame " + t2 + " took " + H.S(C.JSNumber_methods.$tdiv(timeCompleted._duration, 1000)) + " (" + H.S(this.lastKnownMouseX) + ", " + H.S(this.lastKnownMouseY) + ")");
      P.Future_Future(this.get$notifyRedrawRequested(), null);
    } else
      P.print("Frame " + t2 + " finished at " + H.S(timeCompleted));
    this._frameNumber = this._frameNumber + 1;
  },
  get$doFrameComplete: function() {
    return new H.BoundClosure$1(this, X.GwenRenderer.prototype.doFrameComplete$1, null, "doFrameComplete$1");
  },
  doFrameCompleteError$2: function(err, stacktrace) {
    P.print("doFrameCompleteError called.  Err: " + H.S(err) + ", stacktrace: " + H.S(stacktrace));
  },
  get$doFrameCompleteError: function() {
    return new X.BoundClosure$20(this, X.GwenRenderer.prototype.doFrameCompleteError$2, null, "doFrameCompleteError$2");
  },
  GwenRenderer$1: function(cvsr) {
    this._cvsr = cvsr;
    this._frameNumber = 0;
    this._initKeyXlateDict$0();
    X.InputHandler_init();
  },
  static: {
"": "GwenRenderer_KeyXlateDict,GwenRenderer_KeyXlateDictShift,GwenRenderer_KeyXlateDictCtrl,GwenRenderer_g_bShiftKeyDown",
GwenRenderer$: function(cvsr) {
  var t1 = new X.GwenRenderer(1, null, null, 0, 0, null, P.ListQueue$(null, P.DateTime), false, true, null, null);
  t1.GwenRendererBase$0();
  t1.GwenRenderer$1(cvsr);
  return t1;
}}

},

GwenRenderer_onKeyDownHandler_closure: {"": "Closure;this_0",
  call$0: function() {
    this.this_0._gwenCanvas.Input_Character$1(" ");
  }
},

Color: {"": "Object;a,r,g,b",
  get$StyleString: function() {
    return "rgba(" + this.r + ", " + this.g + ", " + this.b + ", " + this.a / 255 + ")";
  },
  Color$fromInt$1: function(clrbits) {
    this.a = 255;
    this.r = 255 & C.JSInt_methods.$shr(clrbits, 16);
    this.g = 255 & C.JSInt_methods.$shr(clrbits, 8);
    this.b = 255 & clrbits;
  },
  static: {
"": "Color__map",
Color__getDefaultColor: function(colorbits) {
  var clr, t1;
  if (!$.get$Color__map().containsKey$1(colorbits)) {
    clr = X.Color$fromInt(colorbits);
    t1 = $.get$Color__map();
    t1.$indexSet(t1, colorbits, clr);
  }
  t1 = $.get$Color__map();
  return t1.$index(t1, colorbits);
},

Color$fromInt: function(clrbits) {
  var t1 = new X.Color(null, null, null, null);
  t1.Color$fromInt$1(clrbits);
  return t1;
}}

},

GwenRendererBase: {"": "Object;",
  translateX$1: function(x) {
    return J.ceil$0$n(J.$mul$n(J.$add$ns(x, this._renderOffset.x), this.get$Scale()));
  },
  translateY$1: function(y) {
    return J.ceil$0$n(J.$mul$n(J.$add$ns(y, this._renderOffset.y), this.get$Scale()));
  },
  translateRect$1: function(r) {
    var t1, t2, t3;
    t1 = r.left;
    t2 = this.translateX$1(t1);
    t3 = r.top;
    t3 = new P.Rectangle(t2, this.translateY$1(t3), this.translateX$1(J.$add$ns(t1, r.width)) - this.translateX$1(t1), this.translateY$1(J.$add$ns(t3, r.height)) - this.translateY$1(t3));
    H.setRuntimeTypeInfo(t3, [null]);
    return t3;
  },
  AddRenderOffset$1: function(offset) {
    var t1, t2, t3, t4;
    t1 = this._renderOffset;
    t2 = t1.x;
    t3 = offset.left;
    if (typeof t2 !== "number")
      throw t2.$add();
    if (typeof t3 !== "number")
      throw H.iae(t3);
    t1 = t1.y;
    t4 = offset.top;
    if (typeof t1 !== "number")
      throw t1.$add();
    if (typeof t4 !== "number")
      throw H.iae(t4);
    t4 = new P.Point(t2 + t3, t1 + t4);
    H.setRuntimeTypeInfo(t4, [null]);
    this._renderOffset = t4;
  },
  AddClipRegion$1: function(rect) {
    var t1, rect2, left, $top, width, right, height, bottom;
    t1 = this._renderOffset;
    rect2 = new P.Rectangle(t1.x, t1.y, rect.width, rect.height);
    H.setRuntimeTypeInfo(rect2, [J.JSInt]);
    left = rect2.left;
    $top = rect2.top;
    width = rect2.width;
    t1 = J.getInterceptor$ns(left);
    right = t1.$add(left, width);
    height = rect2.height;
    rect2 = J.getInterceptor$ns($top);
    bottom = rect2.$add($top, height);
    if (t1.$lt(left, this._clipRegion.left)) {
      width = J.$sub$n(width, J.$sub$n(this._clipRegion.left, left));
      right = J.$sub$n(right, J.$sub$n(this._clipRegion.left, left));
      left = this._clipRegion.left;
    }
    if (rect2.$lt($top, this._clipRegion.top)) {
      height = J.$sub$n(height, J.$sub$n(this._clipRegion.top, $top));
      bottom = J.$sub$n(bottom, J.$sub$n(this._clipRegion.top, $top));
      $top = this._clipRegion.top;
    }
    t1 = this._clipRegion;
    if (J.$gt$n(right, J.$add$ns(t1.left, t1.width))) {
      t1 = this._clipRegion;
      width = J.$sub$n(J.$add$ns(t1.left, t1.width), left);
      J.$add$ns(left, width);
    }
    t1 = this._clipRegion;
    if (J.$gt$n(bottom, J.$add$ns(t1.top, t1.height))) {
      t1 = this._clipRegion;
      height = J.$sub$n(J.$add$ns(t1.top, t1.height), $top);
      J.$add$ns($top, height);
    }
    t1 = new P.Rectangle(left, $top, width, height);
    H.setRuntimeTypeInfo(t1, [J.JSInt]);
    this._clipRegion = t1;
  },
  GwenRendererBase$0: function() {
    var t1 = new P.Point(0, 0);
    H.setRuntimeTypeInfo(t1, [J.JSInt]);
    this._renderOffset = t1;
    this.set$Scale(1);
    this.get$CTT();
  }
},

SkinWindow: {"": "Object;TitleActive,TitleInactive",
  SkinWindow$0: function() {
    this.TitleActive = X.Color__getDefaultColor(16711680);
    this.TitleInactive = X.Color__getDefaultColor(16776960);
  },
  static: {
SkinWindow$: function() {
  var t1 = new X.SkinWindow(null, null);
  t1.SkinWindow$0();
  return t1;
}}

},

SkinButton: {"": "Object;Normal,Hover,Down,Disabled",
  SkinButton$0: function() {
    this.Normal = X.Color__getDefaultColor(16776960);
    this.Hover = X.Color__getDefaultColor(16776960);
    this.Down = X.Color__getDefaultColor(16776960);
    this.Disabled = X.Color__getDefaultColor(16776960);
  },
  static: {
SkinButton$: function() {
  var t1 = new X.SkinButton(null, null, null, null);
  t1.SkinButton$0();
  return t1;
}}

},

SkinInactive: {"": "Object;Normal,Hover,Down,Disabled"},

SkinActive: {"": "Object;Normal,Hover,Down,Disabled",
  SkinActive$0: function() {
    this.Normal = X.Color__getDefaultColor(16776960);
    this.Hover = X.Color__getDefaultColor(16776960);
    this.Down = X.Color__getDefaultColor(16776960);
    this.Disabled = X.Color__getDefaultColor(16776960);
  },
  static: {
SkinActive$: function() {
  var t1 = new X.SkinActive(null, null, null, null);
  t1.SkinActive$0();
  return t1;
}}

},

SkinTab: {"": "Object;m_Inactive,m_Active",
  SkinTab$0: function() {
    this.m_Inactive = new X.SkinInactive(X.Color__getDefaultColor(16776960), X.Color__getDefaultColor(16776960), X.Color__getDefaultColor(16776960), X.Color__getDefaultColor(16776960));
    this.m_Active = X.SkinActive$();
  },
  static: {
SkinTab$: function() {
  var t1 = new X.SkinTab(null, null);
  t1.SkinTab$0();
  return t1;
}}

},

SkinLabel: {"": "Object;Default,Bright,Dark,Highlight",
  SkinLabel$0: function() {
    this.Default = X.Color__getDefaultColor(8355711);
    this.Bright = X.Color__getDefaultColor(16777215);
    this.Dark = X.Color__getDefaultColor(0);
    this.Highlight = X.Color__getDefaultColor(16776960);
  },
  static: {
SkinLabel$: function() {
  var t1 = new X.SkinLabel(null, null, null, null);
  t1.SkinLabel$0();
  return t1;
}}

},

SkinTree: {"": "Object;Lines,Normal,Hover,Selected",
  SkinTree$0: function() {
    this.Lines = X.Color__getDefaultColor(255);
    this.Normal = X.Color__getDefaultColor(8355711);
    this.Hover = X.Color__getDefaultColor(65280);
    this.Selected = X.Color__getDefaultColor(16777215);
  },
  static: {
SkinTree$: function() {
  var t1 = new X.SkinTree(null, null, null, null);
  t1.SkinTree$0();
  return t1;
}}

},

SkinProperties: {"": "Object;Line_Normal,Line_Selected,Line_Hover,Column_Normal,Column_Selected,Column_Hover,Label_Normal,Label_Selected,Label_Hover,Border,Title",
  SkinProperties$0: function() {
    this.Line_Normal = X.Color__getDefaultColor(255);
    this.Line_Selected = X.Color__getDefaultColor(16777215);
    this.Line_Hover = X.Color__getDefaultColor(65280);
    this.Column_Normal = X.Color__getDefaultColor(8355711);
    this.Column_Selected = X.Color__getDefaultColor(16711935);
    this.Column_Hover = X.Color__getDefaultColor(255);
    this.Label_Normal = X.Color__getDefaultColor(8355711);
    this.Label_Selected = X.Color__getDefaultColor(16777215);
    this.Label_Hover = X.Color__getDefaultColor(0);
    this.Border = X.Color__getDefaultColor(0);
    X.Color__getDefaultColor(16776960);
  },
  static: {
SkinProperties$: function() {
  var t1 = new X.SkinProperties(null, null, null, null, null, null, null, null, null, null, null);
  t1.SkinProperties$0();
  return t1;
}}

},

SkinLine: {"": "Object;Text,Text_Hover,Text_Selected,Button,Button_Hover,Button_Selected",
  SkinLine$0: function() {
    this.Text = X.Color__getDefaultColor(16777215);
    this.Text_Hover = X.Color__getDefaultColor(16777215);
    this.Text_Selected = X.Color__getDefaultColor(255);
    this.Button = X.Color__getDefaultColor(8355711);
    this.Button_Hover = X.Color__getDefaultColor(16776960);
    this.Button_Selected = X.Color__getDefaultColor(65280);
  },
  static: {
SkinLine$: function() {
  var t1 = new X.SkinLine(null, null, null, null, null, null);
  t1.SkinLine$0();
  return t1;
}}

},

SkinLineAlt: {"": "Object;Text,Text_Hover,Text_Selected,Button,Button_Hover,Button_Selected",
  SkinLineAlt$0: function() {
    this.Text = X.Color__getDefaultColor(16777215);
    this.Text_Hover = X.Color__getDefaultColor(16777215);
    this.Text_Selected = X.Color__getDefaultColor(255);
    this.Button = X.Color__getDefaultColor(8355711);
    this.Button_Hover = X.Color__getDefaultColor(16776960);
    this.Button_Selected = X.Color__getDefaultColor(65280);
  },
  static: {
SkinLineAlt$: function() {
  var t1 = new X.SkinLineAlt(null, null, null, null, null, null);
  t1.SkinLineAlt$0();
  return t1;
}}

},

SkinCategory: {"": "Object;Header,Header_Closed,m_Line,m_LineAlt",
  SkinCategory$0: function() {
    this.Header = X.Color__getDefaultColor(16776960);
    this.Header_Closed = X.Color__getDefaultColor(8355711);
    this.m_Line = X.SkinLine$();
    this.m_LineAlt = X.SkinLineAlt$();
  },
  static: {
SkinCategory$: function() {
  var t1 = new X.SkinCategory(null, null, null, null);
  t1.SkinCategory$0();
  return t1;
}}

},

GwenSkinColors: {"": "Object;m_ModalBackground,m_TooltipText,m_Window,m_Button,m_Tab,m_Label,m_Tree,m_Properties,m_Category",
  GwenSkinColors$0: function() {
    this.m_ModalBackground = X.Color__getDefaultColor(8355711);
    this.m_TooltipText = X.Color__getDefaultColor(16777215);
    this.m_Window = X.SkinWindow$();
    this.m_Button = X.SkinButton$();
    this.m_Tab = X.SkinTab$();
    this.m_Label = X.SkinLabel$();
    this.m_Tree = X.SkinTree$();
    this.m_Properties = X.SkinProperties$();
    this.m_Category = X.SkinCategory$();
  },
  static: {
GwenSkinColors$: function() {
  var t1 = new X.GwenSkinColors(null, null, null, null, null, null, null, null, null);
  t1.GwenSkinColors$0();
  return t1;
}}

},

GwenSkinBase: {"": "Object;",
  DrawDebugOutlines$1: function(control) {
    var t1, t2, t3, inner, outer;
    t1 = this._renderer;
    t2 = control.PaddingOutlineColor;
    t3 = t1._cvsr;
    J.set$fillStyle$x(t3._txContext, t2.get$StyleString());
    t3._color = t2;
    inner = new P.Rectangle(J.$add$ns(control.m_Bounds.left, control.m_Padding.Left), J.$add$ns(control.m_Bounds.top, control.m_Padding.Top), J.$sub$n(J.$sub$n(control.m_Bounds.width, control.m_Padding.Right), control.m_Padding.Left), J.$sub$n(J.$sub$n(control.m_Bounds.height, control.m_Padding.Bottom), control.m_Padding.Top));
    H.setRuntimeTypeInfo(inner, [null]);
    t1.drawLinedRect$1(inner);
    t2 = control.MarginOutlineColor;
    t3 = t1._cvsr;
    J.set$fillStyle$x(t3._txContext, t2.get$StyleString());
    t3._color = t2;
    outer = new P.Rectangle(J.$sub$n(control.m_Bounds.left, control.m_Margin.Left), J.$sub$n(control.m_Bounds.top, control.m_Margin.Top), J.$add$ns(J.$add$ns(control.m_Bounds.width, control.m_Margin.Right), control.m_Margin.Left), J.$add$ns(J.$add$ns(control.m_Bounds.height, control.m_Margin.Bottom), control.m_Margin.Top));
    H.setRuntimeTypeInfo(outer, [null]);
    t1.drawLinedRect$1(outer);
    t2 = control.BoundsOutlineColor;
    t3 = t1._cvsr;
    J.set$fillStyle$x(t3._txContext, t2.get$StyleString());
    t3._color = t2;
    t1.drawLinedRect$1(control.m_Bounds);
  }
},

GwenText: {"": "GwenControlBase;_string,_font,TextColor,TextColorOverride,TextOverride,m_Disposed,m_Parent,m_ActualParent,m_InnerPanel,m_ToolTip,m_Skin,m_Bounds,m_RenderBounds,m_InnerBounds,m_Padding,m_Margin,m_Name,m_RestrictToParent,m_Disabled,m_Hidden,m_MouseInputEnabled,m_KeyboardInputEnabled,m_DrawBackground,m_Dock,m_Cursor,m_Tabable,m_NeedsLayout,m_CacheTextureDirty,m_CacheToTexture,m_DragAndDrop_Package,m_UserData,m_DrawDebugOutlines,m_Children,HoverEnter,HoverLeave,BoundsChanged,Clicked,DoubleClicked,RightClicked,DoubleRightClicked,m_Accelerators,m_MinimumSize,m_MaximumSize,PaddingOutlineColor,MarginOutlineColor,BoundsOutlineColor",
  SizeToContents$0: function() {
    var t1, p, t2, t3, t4;
    t1 = this._font;
    if (t1 == null)
      throw H.wrapException(new P.ArgumentError("Text.SizeToContents() - No Font!!\n"));
    p = new P.Point(1, t1._size);
    H.setRuntimeTypeInfo(p, [null]);
    if (this._string.length > 0) {
      t1 = this.get$Skin()._renderer;
      t2 = this._font;
      t3 = this._string;
      t1._cvsr._strCssFont = H.S(t2._size) + "px " + t2._facename;
      t1 = t1._cvsr;
      p = t1.measureText$1(t1, t3);
    }
    t1 = p.x;
    t2 = this.m_Bounds;
    t3 = t2.width;
    if (t1 == null ? t3 == null : t1 === t3) {
      t3 = p.y;
      t4 = t2.height;
      t4 = t3 == null ? t4 == null : t3 === t4;
      t3 = t4;
    } else
      t3 = false;
    if (t3)
      return;
    this.SetBounds$4(t2.left, t2.top, t1, p.y);
    this.m_NeedsLayout = true;
    this.m_CacheTextureDirty = true;
    t1 = this.m_Parent;
    if (t1 != null) {
      t1.m_NeedsLayout = true;
      t1.m_CacheTextureDirty = true;
    }
  },
  Render$1: function(skin) {
    var t1, t2, t3;
    if (0 === this._string.length)
      return;
    if (null == this._font)
      return;
    t1 = this.TextColorOverride;
    t2 = skin._renderer;
    if (t1.a === 0) {
      t1 = this.TextColor;
      t2 = t2._cvsr;
      J.set$fillStyle$x(t2._txContext, t1.get$StyleString());
      t2._color = t1;
    } else {
      t2 = t2._cvsr;
      J.set$fillStyle$x(t2._txContext, t1.get$StyleString());
      t2._color = t1;
    }
    t1 = this._font;
    t2 = new P.Point(0, 0);
    H.setRuntimeTypeInfo(t2, [J.JSInt]);
    t3 = this._string;
    skin._renderer.renderText$3(t1, t2, t3);
  },
  Layout$1: function(skin) {
    this.SizeToContents$0();
    X.GwenControlBase.prototype.Layout$1.call(this, skin);
  },
  GetCharacterPosition$1: function(index) {
    var t1, sub, t2, p;
    t1 = this._string;
    if (0 === t1.length || 0 === index) {
      t1 = new P.Point(0, 0);
      t1.$builtinTypeInfo = [J.JSInt];
      return t1;
    }
    sub = J.substring$2$s(t1, 0, index);
    t1 = this.get$Skin()._renderer;
    t2 = this._font;
    t1._cvsr._strCssFont = H.S(t2._size) + "px " + t2._facename;
    t1 = t1._cvsr;
    p = new P.Point(t1.measureText$1(t1, sub).x, 0);
    p.$builtinTypeInfo = [J.JSInt];
    return p;
  },
  GetClosestCharacter$1: function(p) {
    var t1, t2, distance, c, i, cp, t3, t4, dist;
    for (t1 = p.x, t2 = p.y, distance = 4096, c = 0, i = 0; i < this._string.length + 1; ++i) {
      cp = this.GetCharacterPosition$1(i);
      t3 = cp.x;
      if (typeof t3 !== "number")
        throw t3.$sub();
      if (typeof t1 !== "number")
        throw H.iae(t1);
      t3 = X.GwenText_abs(t3 - t1);
      t4 = cp.y;
      if (typeof t4 !== "number")
        throw t4.$sub();
      if (typeof t2 !== "number")
        throw H.iae(t2);
      dist = t3 + X.GwenText_abs(t4 - t2);
      if (dist > distance)
        continue;
      c = i;
      distance = dist;
    }
    return c;
  },
  GwenText$1: function($parent) {
    var skin, t1;
    skin = this.get$Skin();
    this._font = skin.DefaultFont;
    this._string = "";
    this.TextColor = skin.SkinColors.m_Label.Default;
    this.m_MouseInputEnabled = false;
    t1 = new X.Color(null, null, null, null);
    t1.a = 0;
    t1.r = 255;
    t1.g = 255;
    t1.b = 255;
    this.TextColorOverride = t1;
  },
  static: {
"": "GwenText_MaxCoord",
GwenText$: function($parent) {
  var t1, t2, t3, t4, t5, t6, t7, t8, t9;
  t1 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t1, [X.GwenEventHandler]);
  t2 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t2, [X.GwenEventHandler]);
  t3 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t3, [X.GwenEventHandler]);
  t4 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t4, [X.GwenEventHandler]);
  t5 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t5, [X.GwenEventHandler]);
  t6 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t6, [X.GwenEventHandler]);
  t7 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t7, [X.GwenEventHandler]);
  t8 = new P.Point(1, 1);
  H.setRuntimeTypeInfo(t8, [J.JSInt]);
  t9 = new P.Point(4096, 4096);
  H.setRuntimeTypeInfo(t9, [J.JSInt]);
  t9 = new X.GwenText(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, new X.GwenEventHandlerList(t1, null, null), new X.GwenEventHandlerList(t2, null, null), new X.GwenEventHandlerList(t3, null, null), new X.GwenEventHandlerList(t4, null, null), new X.GwenEventHandlerList(t5, null, null), new X.GwenEventHandlerList(t6, null, null), new X.GwenEventHandlerList(t7, null, null), null, t8, t9, null, null, null);
  t9.GwenControlBase$1($parent);
  t9.GwenText$1($parent);
  return t9;
},

GwenText_abs: function(a) {
  if (a >= 0)
    return a;
  return 0 - a;
}}

},

GwenTexture: {"": "Object;",
  GwenTexture$_internal$1: function(renderer) {
    this.set$Width(4);
    this.set$Height(4);
    this.set$Failed(false);
  }
},

_Active: {"": "Object;Normal,Checked"},

_Disabled: {"": "Object;Normal,Checked"},

_ScrollerButton: {"": "Object;Normal,Hover,Down,Disabled"},

_Panel: {"": "Object;Normal,Bright,Dark,Highlight"},

_Window: {"": "Object;Normal,Inactive,Close,Close_Hover,Close_Down,Close_Disabled"},

_CheckBox: {"": "Object;m_Active,m_Disabled"},

_RadioButton: {"": "Object;m_Active,m_Disabled"},

_TextBox: {"": "Object;Normal,Focus,Disabled"},

_Tree: {"": "Object;Background,Minus,Plus"},

_ProgressBar: {"": "Object;Back,Front"},

_Menu: {"": "Object;RightArrow,Check,Strip,Background,BackgroundWithMargin,Hover"},

_Scroller: {"": "Object;TrackV,TrackH,ButtonV_Normal,ButtonV_Hover,ButtonV_Down,ButtonV_Disabled,ButtonH_Normal,ButtonH_Hover,ButtonH_Down,ButtonH_Disabled,m_ScrollerButton"},

_H: {"": "Object;Normal,Hover,Down,Disabled"},

_V: {"": "Object;Normal,Hover,Down,Disabled"},

_Slider: {"": "Object;m_H,m_V"},

_Button: {"": "Object;Normal,Hover,Down,Disabled"},

_ComboBox: {"": "Object;Normal,Hover,Down,Disabled,m_Button"},

_ListBox: {"": "Object;Background,Hovered,EvenLine,OddLine,EvenLineSelected,OddLineSelected"},

_Up: {"": "Object;Normal,Hover,Down,Disabled"},

_Down: {"": "Object;Normal,Hover,Down,Disabled"},

_UpDown: {"": "Object;m_Up,m_Down"},

_InputButton: {"": "Object;Normal,Hovered,Disabled,Pressed"},

_Input: {"": "Object;m_InputButton,m_ComboBox,m_Slider,m_ListBox,m_UpDown"},

_Bottom: {"": "Object;Inactive,Active"},

_Top: {"": "Object;Inactive,Active"},

_Left: {"": "Object;Inactive,Active"},

_Right: {"": "Object;Inactive,Active"},

_Tab: {"": "Object;m_Bottom,m_Top,m_Left,m_Right,Control,HeaderBar"},

_CategoryList: {"": "Object;Outer,Inner,Header"},

SkinTextures: {"": "Object;StatusBar,Selection,Shadow,Tooltip,m_Panel,m_Window,m_CheckBox,m_RadioButton,m_TextBox,m_Tree,m_ProgressBar,m_Scroller,m_Menu,m_Input,m_Tab,m_CategoryList"},

GwenTexturedSkinBase: {"": "GwenSkinBase;MySkinTextures,_Texture,DefaultFont,_renderer,SkinColors",
  InitializeColors$0: function() {
    this.SkinColors = X.GwenSkinColors$();
    var t1 = this._renderer;
    this.SkinColors.m_Window.TitleActive = t1.pixelColor$4(this._Texture, 4, 508, X.Color__getDefaultColor(16711680));
    this.SkinColors.m_Window.TitleInactive = t1.pixelColor$4(this._Texture, 12, 508, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Button.Normal = t1.pixelColor$4(this._Texture, 20, 508, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Button.Hover = t1.pixelColor$4(this._Texture, 28, 508, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Button.Down = t1.pixelColor$4(this._Texture, 20, 500, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Button.Disabled = t1.pixelColor$4(this._Texture, 28, 500, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Tab.m_Active.Normal = t1.pixelColor$4(this._Texture, 36, 508, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Tab.m_Active.Hover = t1.pixelColor$4(this._Texture, 44, 508, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Tab.m_Active.Down = t1.pixelColor$4(this._Texture, 36, 500, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Tab.m_Active.Disabled = t1.pixelColor$4(this._Texture, 44, 500, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Tab.m_Inactive.Normal = t1.pixelColor$4(this._Texture, 52, 508, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Tab.m_Inactive.Hover = t1.pixelColor$4(this._Texture, 60, 508, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Tab.m_Inactive.Down = t1.pixelColor$4(this._Texture, 52, 500, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Tab.m_Inactive.Disabled = t1.pixelColor$4(this._Texture, 60, 500, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Label.Default = t1.pixelColor$4(this._Texture, 68, 508, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Label.Bright = t1.pixelColor$4(this._Texture, 76, 508, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Label.Dark = t1.pixelColor$4(this._Texture, 68, 500, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Label.Highlight = t1.pixelColor$4(this._Texture, 76, 500, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Tree.Lines = t1.pixelColor$4(this._Texture, 84, 508, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Tree.Normal = t1.pixelColor$4(this._Texture, 92, 508, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Tree.Hover = t1.pixelColor$4(this._Texture, 84, 500, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Tree.Selected = t1.pixelColor$4(this._Texture, 92, 500, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Properties.Line_Normal = t1.pixelColor$4(this._Texture, 100, 508, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Properties.Line_Selected = t1.pixelColor$4(this._Texture, 108, 508, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Properties.Line_Hover = t1.pixelColor$4(this._Texture, 100, 500, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Properties.Title = t1.pixelColor$4(this._Texture, 108, 500, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Properties.Column_Normal = t1.pixelColor$4(this._Texture, 116, 508, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Properties.Column_Selected = t1.pixelColor$4(this._Texture, 124, 508, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Properties.Column_Hover = t1.pixelColor$4(this._Texture, 116, 500, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Properties.Border = t1.pixelColor$4(this._Texture, 124, 500, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Properties.Label_Normal = t1.pixelColor$4(this._Texture, 132, 508, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Properties.Label_Selected = t1.pixelColor$4(this._Texture, 140, 508, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Properties.Label_Hover = t1.pixelColor$4(this._Texture, 132, 500, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_ModalBackground = t1.pixelColor$4(this._Texture, 148, 508, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_TooltipText = t1.pixelColor$4(this._Texture, 156, 508, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Category.Header = t1.pixelColor$4(this._Texture, 148, 500, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Category.Header_Closed = t1.pixelColor$4(this._Texture, 156, 500, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Category.m_Line.Text = t1.pixelColor$4(this._Texture, 164, 508, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Category.m_Line.Text_Hover = t1.pixelColor$4(this._Texture, 172, 508, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Category.m_Line.Text_Selected = t1.pixelColor$4(this._Texture, 164, 500, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Category.m_Line.Button = t1.pixelColor$4(this._Texture, 172, 500, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Category.m_Line.Button_Hover = t1.pixelColor$4(this._Texture, 180, 508, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Category.m_Line.Button_Selected = t1.pixelColor$4(this._Texture, 188, 508, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Category.m_LineAlt.Text = t1.pixelColor$4(this._Texture, 180, 500, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Category.m_LineAlt.Text_Hover = t1.pixelColor$4(this._Texture, 188, 500, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Category.m_LineAlt.Text_Selected = t1.pixelColor$4(this._Texture, 196, 508, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Category.m_LineAlt.Button = t1.pixelColor$4(this._Texture, 204, 508, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Category.m_LineAlt.Button_Hover = t1.pixelColor$4(this._Texture, 196, 500, X.Color__getDefaultColor(16776960));
    this.SkinColors.m_Category.m_LineAlt.Button_Selected = t1.pixelColor$4(this._Texture, 204, 500, X.Color__getDefaultColor(16776960));
  },
  InitializeTextures$0: function() {
    var Bor_Shadow, Bor_Tooltip, Bor_StatusBar, Bor_Selection, Bor_Panel_Normal, Bor_Panel_Bright, Bor_Panel_Dark, Bor_Panel_Highlight, Bor_m_Window_Normal, Bor_m_Window_Inactive, Sing_Window_Close, Sing_Window_Close_Hover, Sing_Window_Close_Down, Sing_Window_Close_Disabled, Sing_CheckBox_Active_Checked, Sing_CheckBox_Active_Normal, Sing_CheckBox_Disabled_Checked, Sing_CheckBox_Disabled_Normal, Sing_RadioButton_Active_Checked, Sing_RadioButton_Active_Normal, Sing_RadioButton_Disabled_Normal, Bor_TextBox_Normal, Bor_TextBox_Focus, Bor_TextBox_Disabled, Bor_Menu_Strip, Bor_Menu_BackgroundWithMargin, Bor_Menu_Background, Bor_Menu_Hover, Sing_Menu_RightArrow, Sing_Menu_Check, Bor_Tab_Control, Bor_Tab_Bottom_Active, Bor_Tab_Bottom_Inactive, Bor_Tab_Top_Active, Bor_Tab_Top_Inactive, Bor_Tab_Left_Active, Bor_Tab_Left_Inactive, Bor_Tab_Right_Active, Bor_Tab_Right_Inactive, Bor_Tab_HeaderBar, Bor_Scroller_TrackV, Bor_Scroller_ButtonV_Normal, Bor_Scroller_ButtonV_Hover, Bor_Scroller_ButtonV_Down, Bor_Scroller_ButtonV_Disabled, Bor_Scroller_TrackH, Bor_Scroller_ButtonH_Normal, Bor_Scroller_ButtonH_Hover, Bor_Scroller_ButtonH_Down, Bor_Scroller_ButtonH_Disabled, List_Scroller_ScrollerButton_Normal, List_Scroller_ScrollerButton_Disabled, List_Scroller_ScrollerButton_Hover, List_Scroller_ScrollerButton_Down, Bore_Background, Sing_Tree_Plus, Sing_Tree_Minus, Bor_Input_InputButton_Normal, Bor_Input_InputButton_Hovered, Bor_Input_InputButton_Disabled, Bor_Input_InputButton_Pressed, i, t1, t2, t3, Bor_Input_ListBox_Background, Bor_Input_ListBox_Hovered, Bor_Input_ListBox_EvenLine, Bor_Input_ListBox_OddLine, Bor_Input_ListBox_EvenLineSelected, Bor_Input_ListBox_OddLineSelected, Bor_Input_ComboBox_Normal, Bor_Input_ComboBox_Hover, Bor_Input_ComboBox_Down, Bor_Input_ComboBox_Disabled, Sing_Input_ComboBox__Button_Normal, Sing_Input_ComboBox__Button_Hover, Sing_Input_ComboBox__Button_Down, Sing_Input_ComboBox__Button_Disabled, Sing_Input_UpDown_Up_Normal, Sing_Input_UpDown_Up_Hover, Sing_Input_UpDown_Up_Down, Sing_Input_UpDown_Up_Disabled, Sing_Input_UpDown_Down_Normal, Sing_Input_UpDown_Down_Hover, Sing_Input_UpDown_Down_Down, Sing_Input_UpDown_Down_Disabled, Bor_ProgressBar_Back, Bor_ProgressBar_Front, Sing_Input_Slider_H_Normal, Sing_Input_Slider_H_Hover, Sing_Input_Slider_H_Down, Sing_Input_Slider_H_Disabled, Sing_Input_Slider_V_Normal, Sing_Input_Slider_V_Hover, Sing_Input_Slider_V_Down, Sing_Input_Slider_V_Disabled, Bor_CategoryList_Outer, Bor_CategoryList_Inner, Bor_CategoryList_Header;
    Bor_Shadow = X.Bordered$(this._Texture, 448, 0, 31, 31, $.get$GwenMargin_Eight());
    Bor_Tooltip = X.Bordered$(this._Texture, 128, 320, 127, 31, $.get$GwenMargin_Eight());
    Bor_StatusBar = X.Bordered$(this._Texture, 128, 288, 127, 31, $.get$GwenMargin_Eight());
    Bor_Selection = X.Bordered$(this._Texture, 384, 32, 31, 31, $.get$GwenMargin_Four());
    Bor_Panel_Normal = X.Bordered$(this._Texture, 256, 0, 63, 63, new X.GwenMargin(16, 16, 16, 16));
    Bor_Panel_Bright = X.Bordered$(this._Texture, 320, 0, 63, 63, new X.GwenMargin(16, 16, 16, 16));
    Bor_Panel_Dark = X.Bordered$(this._Texture, 256, 64, 63, 63, new X.GwenMargin(16, 16, 16, 16));
    Bor_Panel_Highlight = X.Bordered$(this._Texture, 320, 64, 63, 63, new X.GwenMargin(16, 16, 16, 16));
    Bor_m_Window_Normal = X.Bordered$(this._Texture, 0, 0, 127, 127, new X.GwenMargin(32, 8, 8, 8));
    Bor_m_Window_Inactive = X.Bordered$(this._Texture, 128, 0, 127, 127, new X.GwenMargin(32, 8, 8, 8));
    Sing_Window_Close = X.Single$(this._Texture, 0, 224, 24, 24);
    Sing_Window_Close_Hover = X.Single$(this._Texture, 32, 224, 24, 24);
    Sing_Window_Close_Down = X.Single$(this._Texture, 64, 224, 24, 24);
    Sing_Window_Close_Disabled = X.Single$(this._Texture, 96, 224, 24, 24);
    Sing_CheckBox_Active_Checked = X.Single$(this._Texture, 448, 32, 15, 15);
    Sing_CheckBox_Active_Normal = X.Single$(this._Texture, 464, 32, 15, 15);
    Sing_CheckBox_Disabled_Checked = X.Single$(this._Texture, 448, 48, 15, 15);
    Sing_CheckBox_Disabled_Normal = X.Single$(this._Texture, 464, 48, 15, 15);
    Sing_RadioButton_Active_Checked = X.Single$(this._Texture, 448, 64, 15, 15);
    Sing_RadioButton_Active_Normal = X.Single$(this._Texture, 464, 64, 15, 15);
    X.Single$(this._Texture, 448, 80, 15, 15);
    Sing_RadioButton_Disabled_Normal = X.Single$(this._Texture, 464, 80, 15, 15);
    Bor_TextBox_Normal = X.Bordered$(this._Texture, 0, 150, 127, 21, $.get$GwenMargin_Four());
    Bor_TextBox_Focus = X.Bordered$(this._Texture, 0, 172, 127, 21, $.get$GwenMargin_Four());
    Bor_TextBox_Disabled = X.Bordered$(this._Texture, 0, 193, 127, 21, $.get$GwenMargin_Four());
    Bor_Menu_Strip = X.Bordered$(this._Texture, 0, 128, 127, 21, $.get$GwenMargin_One());
    Bor_Menu_BackgroundWithMargin = X.Bordered$(this._Texture, 128, 128, 127, 63, new X.GwenMargin(8, 8, 24, 8));
    Bor_Menu_Background = X.Bordered$(this._Texture, 128, 192, 127, 63, $.get$GwenMargin_Eight());
    Bor_Menu_Hover = X.Bordered$(this._Texture, 128, 256, 127, 31, $.get$GwenMargin_Eight());
    Sing_Menu_RightArrow = X.Single$(this._Texture, 464, 112, 15, 15);
    Sing_Menu_Check = X.Single$(this._Texture, 448, 112, 15, 15);
    Bor_Tab_Control = X.Bordered$(this._Texture, 0, 256, 127, 127, $.get$GwenMargin_Eight());
    Bor_Tab_Bottom_Active = X.Bordered$(this._Texture, 0, 416, 63, 31, $.get$GwenMargin_Eight());
    Bor_Tab_Bottom_Inactive = X.Bordered$(this._Texture, 128, 416, 63, 31, $.get$GwenMargin_Eight());
    Bor_Tab_Top_Active = X.Bordered$(this._Texture, 0, 384, 63, 31, $.get$GwenMargin_Eight());
    Bor_Tab_Top_Inactive = X.Bordered$(this._Texture, 128, 384, 63, 31, $.get$GwenMargin_Eight());
    Bor_Tab_Left_Active = X.Bordered$(this._Texture, 64, 384, 31, 63, $.get$GwenMargin_Eight());
    Bor_Tab_Left_Inactive = X.Bordered$(this._Texture, 192, 384, 31, 63, $.get$GwenMargin_Eight());
    Bor_Tab_Right_Active = X.Bordered$(this._Texture, 96, 384, 31, 63, $.get$GwenMargin_Eight());
    Bor_Tab_Right_Inactive = X.Bordered$(this._Texture, 224, 384, 31, 63, $.get$GwenMargin_Eight());
    Bor_Tab_HeaderBar = X.Bordered$(this._Texture, 128, 352, 127, 31, $.get$GwenMargin_Four());
    Bor_Scroller_TrackV = X.Bordered$(this._Texture, 384, 208, 15, 127, $.get$GwenMargin_Four());
    Bor_Scroller_ButtonV_Normal = X.Bordered$(this._Texture, 400, 208, 15, 127, $.get$GwenMargin_Four());
    Bor_Scroller_ButtonV_Hover = X.Bordered$(this._Texture, 416, 208, 15, 127, $.get$GwenMargin_Four());
    Bor_Scroller_ButtonV_Down = X.Bordered$(this._Texture, 432, 208, 15, 127, $.get$GwenMargin_Four());
    Bor_Scroller_ButtonV_Disabled = X.Bordered$(this._Texture, 448, 208, 15, 127, $.get$GwenMargin_Four());
    Bor_Scroller_TrackH = X.Bordered$(this._Texture, 384, 128, 127, 15, $.get$GwenMargin_Four());
    Bor_Scroller_ButtonH_Normal = X.Bordered$(this._Texture, 384, 144, 127, 15, $.get$GwenMargin_Four());
    Bor_Scroller_ButtonH_Hover = X.Bordered$(this._Texture, 384, 160, 127, 15, $.get$GwenMargin_Four());
    Bor_Scroller_ButtonH_Down = X.Bordered$(this._Texture, 384, 176, 127, 15, $.get$GwenMargin_Four());
    Bor_Scroller_ButtonH_Disabled = X.Bordered$(this._Texture, 384, 192, 127, 15, $.get$GwenMargin_Four());
    List_Scroller_ScrollerButton_Normal = P.List_List(4, X.Bordered);
    H.setRuntimeTypeInfo(List_Scroller_ScrollerButton_Normal, [X.Bordered]);
    List_Scroller_ScrollerButton_Disabled = P.List_List(4, X.Bordered);
    H.setRuntimeTypeInfo(List_Scroller_ScrollerButton_Disabled, [X.Bordered]);
    List_Scroller_ScrollerButton_Hover = P.List_List(4, X.Bordered);
    H.setRuntimeTypeInfo(List_Scroller_ScrollerButton_Hover, [X.Bordered]);
    List_Scroller_ScrollerButton_Down = P.List_List(4, X.Bordered);
    H.setRuntimeTypeInfo(List_Scroller_ScrollerButton_Down, [X.Bordered]);
    Bore_Background = X.Bordered$(this._Texture, 256, 128, 127, 127, new X.GwenMargin(16, 16, 16, 16));
    Sing_Tree_Plus = X.Single$(this._Texture, 448, 96, 15, 15);
    Sing_Tree_Minus = X.Single$(this._Texture, 464, 96, 15, 15);
    Bor_Input_InputButton_Normal = X.Bordered$(this._Texture, 480, 0, 31, 31, $.get$GwenMargin_Eight());
    Bor_Input_InputButton_Hovered = X.Bordered$(this._Texture, 480, 32, 31, 31, $.get$GwenMargin_Eight());
    Bor_Input_InputButton_Disabled = X.Bordered$(this._Texture, 480, 64, 31, 31, $.get$GwenMargin_Eight());
    Bor_Input_InputButton_Pressed = X.Bordered$(this._Texture, 480, 96, 31, 31, $.get$GwenMargin_Eight());
    for (i = 0; t1 = this._Texture, i < 4; ++i) {
      t2 = i * 16;
      t3 = 208 + t2;
      List_Scroller_ScrollerButton_Normal[i] = X.Bordered$(t1, 464, t3, 15, 15, $.get$GwenMargin_Two());
      List_Scroller_ScrollerButton_Hover[i] = X.Bordered$(this._Texture, 480, t3, 15, 15, $.get$GwenMargin_Two());
      t2 = 272 + t2;
      List_Scroller_ScrollerButton_Down[i] = X.Bordered$(this._Texture, 464, t2, 15, 15, $.get$GwenMargin_Two());
      List_Scroller_ScrollerButton_Disabled[i] = X.Bordered$(this._Texture, 528, t2, 15, 15, $.get$GwenMargin_Two());
    }
    Bor_Input_ListBox_Background = X.Bordered$(t1, 256, 256, 63, 127, $.get$GwenMargin_Eight());
    Bor_Input_ListBox_Hovered = X.Bordered$(this._Texture, 320, 320, 31, 31, $.get$GwenMargin_Eight());
    Bor_Input_ListBox_EvenLine = X.Bordered$(this._Texture, 352, 256, 31, 31, $.get$GwenMargin_Eight());
    Bor_Input_ListBox_OddLine = X.Bordered$(this._Texture, 352, 288, 31, 31, $.get$GwenMargin_Eight());
    Bor_Input_ListBox_EvenLineSelected = X.Bordered$(this._Texture, 320, 270, 31, 31, $.get$GwenMargin_Eight());
    Bor_Input_ListBox_OddLineSelected = X.Bordered$(this._Texture, 320, 288, 31, 31, $.get$GwenMargin_Eight());
    Bor_Input_ComboBox_Normal = X.Bordered$(this._Texture, 384, 336, 127, 31, new X.GwenMargin(8, 8, 8, 32));
    Bor_Input_ComboBox_Hover = X.Bordered$(this._Texture, 384, 368, 127, 31, new X.GwenMargin(8, 8, 8, 32));
    Bor_Input_ComboBox_Down = X.Bordered$(this._Texture, 384, 400, 127, 31, new X.GwenMargin(8, 8, 8, 32));
    Bor_Input_ComboBox_Disabled = X.Bordered$(this._Texture, 384, 432, 127, 31, new X.GwenMargin(8, 8, 8, 32));
    Sing_Input_ComboBox__Button_Normal = X.Single$(this._Texture, 496, 272, 15, 15);
    Sing_Input_ComboBox__Button_Hover = X.Single$(this._Texture, 496, 288, 15, 15);
    Sing_Input_ComboBox__Button_Down = X.Single$(this._Texture, 496, 304, 15, 15);
    Sing_Input_ComboBox__Button_Disabled = X.Single$(this._Texture, 496, 320, 15, 15);
    Sing_Input_UpDown_Up_Normal = X.Single$(this._Texture, 384, 112, 7, 7);
    Sing_Input_UpDown_Up_Hover = X.Single$(this._Texture, 392, 112, 7, 7);
    Sing_Input_UpDown_Up_Down = X.Single$(this._Texture, 400, 112, 7, 7);
    Sing_Input_UpDown_Up_Disabled = X.Single$(this._Texture, 408, 112, 7, 7);
    Sing_Input_UpDown_Down_Normal = X.Single$(this._Texture, 384, 120, 7, 7);
    Sing_Input_UpDown_Down_Hover = X.Single$(this._Texture, 392, 120, 7, 7);
    Sing_Input_UpDown_Down_Down = X.Single$(this._Texture, 400, 120, 7, 7);
    Sing_Input_UpDown_Down_Disabled = X.Single$(this._Texture, 408, 120, 7, 7);
    Bor_ProgressBar_Back = X.Bordered$(this._Texture, 384, 0, 31, 31, $.get$GwenMargin_Eight());
    Bor_ProgressBar_Front = X.Bordered$(this._Texture, 416, 0, 31, 31, $.get$GwenMargin_Eight());
    Sing_Input_Slider_H_Normal = X.Single$(this._Texture, 416, 32, 15, 15);
    Sing_Input_Slider_H_Hover = X.Single$(this._Texture, 416, 48, 15, 15);
    Sing_Input_Slider_H_Down = X.Single$(this._Texture, 416, 64, 15, 15);
    Sing_Input_Slider_H_Disabled = X.Single$(this._Texture, 416, 80, 15, 15);
    Sing_Input_Slider_V_Normal = X.Single$(this._Texture, 432, 32, 15, 15);
    Sing_Input_Slider_V_Hover = X.Single$(this._Texture, 432, 48, 15, 15);
    Sing_Input_Slider_V_Down = X.Single$(this._Texture, 432, 64, 15, 15);
    Sing_Input_Slider_V_Disabled = X.Single$(this._Texture, 432, 80, 15, 15);
    Bor_CategoryList_Outer = X.Bordered$(this._Texture, 256, 384, 63, 63, $.get$GwenMargin_Eight());
    Bor_CategoryList_Inner = X.Bordered$(this._Texture, 320, 384, 63, 63, new X.GwenMargin(21, 8, 8, 8));
    Bor_CategoryList_Header = X.Bordered$(this._Texture, 320, 352, 63, 31, $.get$GwenMargin_Eight());
    t1 = new X._Active(null, null);
    t1.Normal = Sing_CheckBox_Active_Normal;
    t1.Checked = Sing_CheckBox_Active_Checked;
    t2 = new X._Active(null, null);
    t2.Normal = Sing_RadioButton_Active_Normal;
    t2.Checked = Sing_RadioButton_Active_Checked;
    this.MySkinTextures = new X.SkinTextures(Bor_StatusBar, Bor_Selection, Bor_Shadow, Bor_Tooltip, new X._Panel(Bor_Panel_Normal, Bor_Panel_Bright, Bor_Panel_Dark, Bor_Panel_Highlight), new X._Window(Bor_m_Window_Normal, Bor_m_Window_Inactive, Sing_Window_Close, Sing_Window_Close_Hover, Sing_Window_Close_Down, Sing_Window_Close_Disabled), new X._CheckBox(t1, new X._Disabled(Sing_CheckBox_Disabled_Normal, Sing_CheckBox_Disabled_Checked)), new X._RadioButton(t2, new X._Disabled(Sing_RadioButton_Disabled_Normal, Sing_CheckBox_Disabled_Checked)), new X._TextBox(Bor_TextBox_Normal, Bor_TextBox_Focus, Bor_TextBox_Disabled), new X._Tree(Bore_Background, Sing_Tree_Plus, Sing_Tree_Minus), new X._ProgressBar(Bor_ProgressBar_Back, Bor_ProgressBar_Front), new X._Scroller(Bor_Scroller_TrackV, Bor_Scroller_TrackH, Bor_Scroller_ButtonV_Normal, Bor_Scroller_ButtonV_Hover, Bor_Scroller_ButtonV_Down, Bor_Scroller_ButtonV_Disabled, Bor_Scroller_ButtonH_Normal, Bor_Scroller_ButtonH_Hover, Bor_Scroller_ButtonH_Down, Bor_Scroller_ButtonH_Disabled, new X._ScrollerButton(List_Scroller_ScrollerButton_Normal, List_Scroller_ScrollerButton_Hover, List_Scroller_ScrollerButton_Down, List_Scroller_ScrollerButton_Disabled)), new X._Menu(Sing_Menu_RightArrow, Sing_Menu_Check, Bor_Menu_Strip, Bor_Menu_Background, Bor_Menu_BackgroundWithMargin, Bor_Menu_Hover), new X._Input(new X._InputButton(Bor_Input_InputButton_Normal, Bor_Input_InputButton_Hovered, Bor_Input_InputButton_Disabled, Bor_Input_InputButton_Pressed), new X._ComboBox(Bor_Input_ComboBox_Normal, Bor_Input_ComboBox_Hover, Bor_Input_ComboBox_Down, Bor_Input_ComboBox_Disabled, new X._Button(Sing_Input_ComboBox__Button_Normal, Sing_Input_ComboBox__Button_Hover, Sing_Input_ComboBox__Button_Down, Sing_Input_ComboBox__Button_Disabled)), new X._Slider(new X._H(Sing_Input_Slider_H_Normal, Sing_Input_Slider_H_Hover, Sing_Input_Slider_H_Down, Sing_Input_Slider_H_Disabled), new X._V(Sing_Input_Slider_V_Normal, Sing_Input_Slider_V_Hover, Sing_Input_Slider_V_Down, Sing_Input_Slider_V_Disabled)), new X._ListBox(Bor_Input_ListBox_Background, Bor_Input_ListBox_Hovered, Bor_Input_ListBox_EvenLine, Bor_Input_ListBox_OddLine, Bor_Input_ListBox_EvenLineSelected, Bor_Input_ListBox_OddLineSelected), new X._UpDown(new X._Up(Sing_Input_UpDown_Up_Normal, Sing_Input_UpDown_Up_Hover, Sing_Input_UpDown_Up_Down, Sing_Input_UpDown_Up_Disabled), new X._Down(Sing_Input_UpDown_Down_Normal, Sing_Input_UpDown_Down_Hover, Sing_Input_UpDown_Down_Down, Sing_Input_UpDown_Down_Disabled))), new X._Tab(new X._Bottom(Bor_Tab_Bottom_Inactive, Bor_Tab_Bottom_Active), new X._Top(Bor_Tab_Top_Inactive, Bor_Tab_Top_Active), new X._Left(Bor_Tab_Left_Inactive, Bor_Tab_Left_Active), new X._Right(Bor_Tab_Right_Inactive, Bor_Tab_Right_Active), Bor_Tab_Control, Bor_Tab_HeaderBar), new X._CategoryList(Bor_CategoryList_Outer, Bor_CategoryList_Inner, Bor_CategoryList_Header));
  },
  DrawButton$4: function(control, depressed, hovered, disabled) {
    if (disabled === true) {
      this.MySkinTextures.m_Input.m_InputButton.Disabled.Draw$2(this._renderer, control.m_RenderBounds);
      return;
    }
    if (depressed) {
      this.MySkinTextures.m_Input.m_InputButton.Pressed.Draw$2(this._renderer, control.m_RenderBounds);
      return;
    }
    if (hovered) {
      this.MySkinTextures.m_Input.m_InputButton.Hovered.Draw$2(this._renderer, control.m_RenderBounds);
      return;
    }
    this.MySkinTextures.m_Input.m_InputButton.Normal.Draw$2(this._renderer, control.m_RenderBounds);
  },
  DrawShadow$1: function(control) {
    var r, t1, t2;
    r = control.m_RenderBounds;
    t1 = this.MySkinTextures.Shadow;
    t2 = new P.Rectangle(J.$sub$n(r.left, 4), J.$sub$n(r.top, 4), J.$add$ns(r.width, 10), J.$add$ns(r.height, 10));
    H.setRuntimeTypeInfo(t2, [null]);
    t1.Draw$2(this._renderer, t2);
  },
  DrawRadioButton$3: function(control, selected, depressed) {
    var t1, t2, t3, t4;
    if (selected) {
      t1 = control.m_Disabled;
      t2 = this.MySkinTextures;
      t3 = control.m_RenderBounds;
      t4 = this._renderer;
      if (t1 === true)
        t2.m_RadioButton.m_Disabled.Checked.Draw$2(t4, t3);
      else
        t2.m_RadioButton.m_Active.Checked.Draw$2(t4, t3);
    } else {
      t1 = control.m_Disabled;
      t2 = this.MySkinTextures;
      t3 = control.m_RenderBounds;
      t4 = this._renderer;
      if (t1 === true)
        t2.m_RadioButton.m_Disabled.Normal.Draw$2(t4, t3);
      else
        t2.m_RadioButton.m_Active.Normal.Draw$2(t4, t3);
    }
  },
  DrawCheckBox$3: function(control, selected, depressed) {
    var t1, t2, t3, t4;
    if (selected) {
      t1 = control.m_Disabled;
      t2 = this.MySkinTextures;
      t3 = control.m_RenderBounds;
      t4 = this._renderer;
      if (t1 === true)
        t2.m_CheckBox.m_Disabled.Checked.Draw$2(t4, t3);
      else
        t2.m_CheckBox.m_Active.Checked.Draw$2(t4, t3);
    } else {
      t1 = control.m_Disabled;
      t2 = this.MySkinTextures;
      t3 = control.m_RenderBounds;
      t4 = this._renderer;
      if (t1 === true)
        t2.m_CheckBox.m_Disabled.Normal.Draw$2(t4, t3);
      else
        t2.m_CheckBox.m_Active.Normal.Draw$2(t4, t3);
    }
  },
  DrawGroupBox$4: function(control, textStart, textHeight, textWidth) {
    var rect1, t1, rect, m_colDarker, m_colLighter, t2, t3, t4, t5, t6, t7, t8, t9, t10;
    rect1 = control.m_RenderBounds;
    t1 = J.getInterceptor$n(textHeight);
    rect = new P.Rectangle(rect1.left, J.$add$ns(rect1.top, J.toInt$0$n(t1.$mul(textHeight, 0.5))), rect1.width, J.$sub$n(rect1.height, J.toInt$0$n(t1.$mul(textHeight, 0.5))));
    H.setRuntimeTypeInfo(rect, [null]);
    m_colDarker = new X.Color(null, null, null, null);
    m_colDarker.a = 50;
    m_colDarker.r = 0;
    m_colDarker.g = 50;
    m_colDarker.b = 60;
    m_colLighter = new X.Color(null, null, null, null);
    m_colLighter.a = 150;
    m_colLighter.r = 255;
    m_colLighter.g = 255;
    m_colLighter.b = 255;
    t1 = this._renderer;
    rect1 = t1._cvsr;
    J.set$fillStyle$x(rect1._txContext, m_colLighter.get$StyleString());
    rect1._color = m_colLighter;
    rect1 = rect.left;
    t2 = J.getInterceptor$ns(rect1);
    t3 = rect.top;
    t4 = J.getInterceptor$ns(t3);
    t5 = J.getInterceptor$n(textStart);
    t6 = new P.Rectangle(t2.$add(rect1, 1), t4.$add(t3, 1), t5.$sub(textStart, 3), 1);
    H.setRuntimeTypeInfo(t6, [null]);
    t1.drawFilledRect$1(t6);
    t6 = rect.width;
    t7 = J.getInterceptor$n(t6);
    t8 = new P.Rectangle(J.$add$ns(J.$add$ns(t2.$add(rect1, 1), textStart), textWidth), t4.$add(t3, 1), J.$sub$n(J.$add$ns(t7.$sub(t6, textStart), textWidth), 2), 1);
    H.setRuntimeTypeInfo(t8, [null]);
    t1.drawFilledRect$1(t8);
    t8 = rect.height;
    t9 = new P.Rectangle(t2.$add(rect1, 1), J.$sub$n(t4.$add(t3, t8), 1), J.$sub$n(t2.$add(rect1, t6), 2), 1);
    H.setRuntimeTypeInfo(t9, [null]);
    t1.drawFilledRect$1(t9);
    t9 = new P.Rectangle(t2.$add(rect1, 1), t4.$add(t3, 1), 1, t8);
    H.setRuntimeTypeInfo(t9, [null]);
    t1.drawFilledRect$1(t9);
    t9 = J.getInterceptor$n(t8);
    t10 = new P.Rectangle(J.$sub$n(t2.$add(rect1, t6), 2), t4.$add(t3, 1), 1, t9.$sub(t8, 1));
    H.setRuntimeTypeInfo(t10, [null]);
    t1.drawFilledRect$1(t10);
    t10 = t1._cvsr;
    J.set$fillStyle$x(t10._txContext, m_colDarker.get$StyleString());
    t10._color = m_colDarker;
    t5 = new P.Rectangle(t2.$add(rect1, 1), t3, t5.$sub(textStart, 3), 1);
    H.setRuntimeTypeInfo(t5, [null]);
    t1.drawFilledRect$1(t5);
    t7 = new P.Rectangle(J.$add$ns(J.$add$ns(t2.$add(rect1, 1), textStart), textWidth), t3, J.$sub$n(J.$sub$n(t7.$sub(t6, textStart), textWidth), 2), 1);
    H.setRuntimeTypeInfo(t7, [null]);
    t1.drawFilledRect$1(t7);
    t7 = new P.Rectangle(t2.$add(rect1, 1), J.$sub$n(t4.$add(t3, t8), 1), J.$sub$n(t2.$add(rect1, t6), 2), 1);
    H.setRuntimeTypeInfo(t7, [null]);
    t1.drawFilledRect$1(t7);
    t7 = new P.Rectangle(rect1, t4.$add(t3, 1), 1, t9.$sub(t8, 1));
    H.setRuntimeTypeInfo(t7, [null]);
    t1.drawFilledRect$1(t7);
    t8 = new P.Rectangle(J.$sub$n(t2.$add(rect1, t6), 1), t4.$add(t3, 1), 1, t9.$sub(t8, 1));
    H.setRuntimeTypeInfo(t8, [null]);
    t1.drawFilledRect$1(t8);
  },
  DrawTextBox$1: function(control) {
    var t1, t2, t3, t4;
    if (control.m_Disabled === true) {
      this.MySkinTextures.m_TextBox.Disabled.Draw$2(this._renderer, control.m_RenderBounds);
      return;
    }
    t1 = $.InputHandler_KeyboardFocus;
    t2 = control.m_RenderBounds;
    t3 = this.MySkinTextures;
    t4 = this._renderer;
    if (t1 === control)
      t3.m_TextBox.Focus.Draw$2(t4, t2);
    else
      t3.m_TextBox.Normal.Draw$2(t4, t2);
  },
  DrawWindow$3: function(control, topHeight, inFocus) {
    var t1, t2, t3;
    t1 = this.MySkinTextures;
    t2 = control.m_RenderBounds;
    t3 = this._renderer;
    if (inFocus)
      t1.m_Window.Normal.Draw$2(t3, t2);
    else
      t1.m_Window.Inactive.Draw$2(t3, t2);
  },
  DrawKeyboardHighlight$3: function(control, r, offset) {
    var left, $top, t1, width, rect, t2, t3, t4, t5, t6, t7, skip, i, t8, t9, rect0, t10;
    left = J.$add$ns(r.left, offset);
    $top = J.$add$ns(r.top, offset);
    t1 = offset * 2;
    width = J.$sub$n(r.width, t1);
    rect = new P.Rectangle(left, $top, width, J.$sub$n(r.height, t1));
    H.setRuntimeTypeInfo(rect, [null]);
    t1 = J.getInterceptor$n(width);
    t2 = this._renderer;
    t3 = rect.left;
    t4 = J.getInterceptor$ns(t3);
    t5 = rect.top;
    t6 = rect.height;
    t7 = J.getInterceptor$ns(t5);
    skip = true;
    i = 0;
    while (true) {
      t8 = t1.$mul(width, 0.5);
      if (typeof t8 !== "number")
        throw H.iae(t8);
      if (!(i < t8))
        break;
      t8 = X.Color__getDefaultColor(0);
      t9 = t2._cvsr;
      J.set$fillStyle$x(t9._txContext, t8.get$StyleString());
      t9._color = t8;
      if (!skip) {
        t8 = i * 2;
        t9 = new P.Rectangle(t4.$add(t3, t8), t5, 1, 1);
        t9.$builtinTypeInfo = [null];
        rect0 = t2.translateRect$1(t9);
        t9 = t2._cvsr;
        J.fillRect$4$x(t9._txContext, rect0.left, rect0.top, rect0.width, rect0.height);
        t9._bTextureModified = true;
        t8 = new P.Rectangle(t4.$add(t3, t8), J.$sub$n(t7.$add(t5, t6), 1), 1, 1);
        t8.$builtinTypeInfo = [null];
        rect0 = t2.translateRect$1(t8);
        t8 = t2._cvsr;
        J.fillRect$4$x(t8._txContext, rect0.left, rect0.top, rect0.width, rect0.height);
        t8._bTextureModified = true;
      } else
        skip = false;
      ++i;
    }
    t1 = J.getInterceptor$n(t6);
    t8 = rect.width;
    i = 0;
    while (true) {
      t9 = t1.$mul(t6, 0.5);
      if (typeof t9 !== "number")
        throw H.iae(t9);
      if (!(i < t9))
        break;
      t9 = X.Color__getDefaultColor(0);
      t10 = t2._cvsr;
      J.set$fillStyle$x(t10._txContext, t9.get$StyleString());
      t10._color = t9;
      t9 = i * 2;
      t10 = new P.Rectangle(t3, t7.$add(t5, t9), 1, 1);
      t10.$builtinTypeInfo = [null];
      rect = t2.translateRect$1(t10);
      t10 = t2._cvsr;
      J.fillRect$4$x(t10._txContext, rect.left, rect.top, rect.width, rect.height);
      t10._bTextureModified = true;
      t9 = new P.Rectangle(J.$sub$n(t4.$add(t3, t8), 1), t7.$add(t5, t9), 1, 1);
      t9.$builtinTypeInfo = [null];
      rect = t2.translateRect$1(t9);
      t9 = t2._cvsr;
      J.fillRect$4$x(t9._txContext, rect.left, rect.top, rect.width, rect.height);
      t9._bTextureModified = true;
      ++i;
    }
  },
  DrawModalControl$1: function(control) {
    var rect, t1, t2, t3;
    if (control.m_DrawBackground !== true)
      return;
    rect = control.m_RenderBounds;
    t1 = this._renderer;
    t2 = this.SkinColors.m_ModalBackground;
    t3 = t1._cvsr;
    J.set$fillStyle$x(t3._txContext, t2.get$StyleString());
    t3._color = t2;
    t1.drawFilledRect$1(rect);
  },
  DrawWindowCloseButton$4: function(control, depressed, hovered, disabled) {
    if (disabled) {
      this.MySkinTextures.m_Window.Close_Disabled.Draw$2(this._renderer, control.m_RenderBounds);
      return;
    }
    if (depressed) {
      this.MySkinTextures.m_Window.Close_Down.Draw$2(this._renderer, control.m_RenderBounds);
      return;
    }
    if (hovered) {
      this.MySkinTextures.m_Window.Close_Hover.Draw$2(this._renderer, control.m_RenderBounds);
      return;
    }
    this.MySkinTextures.m_Window.Close.Draw$2(this._renderer, control.m_RenderBounds);
  },
  GwenTexturedSkinBase$2: function(renderer, textureName) {
    this._Texture = X.CanvasTexture$(renderer);
    this._Texture._gwendart$_name = textureName;
    renderer.loadTextureKnownSize$3(this._Texture, 512, 512);
    this.InitializeColors$0();
    this.InitializeTextures$0();
  },
  static: {
GwenTexturedSkinBase$: function(renderer, textureName) {
  var t1, t2;
  t1 = new X.GwenTexturedSkinBase(null, null, null, renderer, null);
  t2 = new X.CanvasFont(null, null, null, null, renderer);
  t2.GwenFont$_internal$3(renderer, "Arial", 10);
  t2._data = new P.Object();
  t2._bSmooth = false;
  t1.DefaultFont = t2;
  t1.GwenTexturedSkinBase$2(renderer, textureName);
  return t1;
}}

},

KeyData: {"": "Object;KeyState,NextRepeat,Target,LeftMouseDown,RightMouseDown",
  KeyData$0: function() {
    this.Target = null;
    this.LeftMouseDown = false;
    this.RightMouseDown = false;
  },
  static: {
KeyData$: function() {
  var t1, t2;
  t1 = C.GwenKey_16.value;
  t2 = P.List_List(t1, J.JSBool);
  H.setRuntimeTypeInfo(t2, [J.JSBool]);
  t1 = P.List_List(t1, J.JSDouble);
  H.setRuntimeTypeInfo(t1, [J.JSDouble]);
  t1 = new X.KeyData(t2, t1, null, null, null);
  t1.KeyData$0();
  return t1;
}}

},

MouseEventHandlerAddedHandler: {"": "GwenEventHandler;_label",
  Invoke$2: function(willBeNull, handler) {
    var t1 = this._label;
    t1.m_MouseInputEnabled = t1.get$ClickEventAssigned();
  }
},

Label: {"": "GwenControlBase;_text,_align,_textPadding,_autoSizeToContents,_mouseEventHandlerAddedHandler,m_Disposed,m_Parent,m_ActualParent,m_InnerPanel,m_ToolTip,m_Skin,m_Bounds,m_RenderBounds,m_InnerBounds,m_Padding,m_Margin,m_Name,m_RestrictToParent,m_Disabled,m_Hidden,m_MouseInputEnabled,m_KeyboardInputEnabled,m_DrawBackground,m_Dock,m_Cursor,m_Tabable,m_NeedsLayout,m_CacheTextureDirty,m_CacheToTexture,m_DragAndDrop_Package,m_UserData,m_DrawDebugOutlines,m_Children,HoverEnter,HoverLeave,BoundsChanged,Clicked,DoubleClicked,RightClicked,DoubleRightClicked,m_Accelerators,m_MinimumSize,m_MaximumSize,PaddingOutlineColor,MarginOutlineColor,BoundsOutlineColor",
  get$Text: function() {
    return this._text._string;
  },
  get$TextPadding: function() {
    if (null == this._textPadding)
      this._textPadding = new X.GwenPadding(0, 0, 0, 0);
    return this._textPadding;
  },
  SetText$2: function(str, doEvents) {
    var t1, t2;
    t1 = this._text;
    t2 = t1._string;
    if (t2 == null ? str == null : t2 === str)
      return;
    t1._string = str;
    t1.SizeToContents$0();
    if (this._autoSizeToContents === true)
      this.SizeToContents$0();
    this.m_NeedsLayout = true;
    this.m_CacheTextureDirty = true;
    t1 = this.m_Parent;
    if (t1 != null) {
      t1.m_NeedsLayout = true;
      t1.m_CacheTextureDirty = true;
    }
    if (doEvents)
      this.OnTextChanged$0();
  },
  SetText$1: function(str) {
    return this.SetText$2(str, true);
  },
  GetClosestCharacter$2: function(x, y) {
    var t1, t2, pLocal;
    t1 = this._text;
    t2 = new P.Point(x, y);
    H.setRuntimeTypeInfo(t2, [null]);
    pLocal = t1.CanvasPosToLocal$1(t2);
    t2 = new P.Point(this._text.GetClosestCharacter$1(pLocal), 0);
    H.setRuntimeTypeInfo(t2, [J.JSInt]);
    return t2;
  },
  OnTextChanged$0: function() {
  },
  GetCharacterPosition$1: function(index) {
    var p, t1, t2, t3, t4;
    p = this._text.GetCharacterPosition$1(index);
    t1 = p.x;
    t2 = this._text.m_Bounds;
    t3 = t2.left;
    if (typeof t1 !== "number")
      throw t1.$add();
    if (typeof t3 !== "number")
      throw H.iae(t3);
    t4 = p.y;
    t2 = t2.top;
    if (typeof t4 !== "number")
      throw t4.$add();
    if (typeof t2 !== "number")
      throw H.iae(t2);
    t2 = new P.Point(t1 + t3, t4 + t2);
    H.setRuntimeTypeInfo(t2, [null]);
    return t2;
  },
  SizeToContents$0: function() {
    var t1, t2, t3, t4, t5, t6;
    t1 = this._text;
    t2 = this.get$TextPadding().Left;
    t3 = this.m_Padding.Left;
    t4 = this.get$TextPadding().Top;
    t5 = this.m_Padding.Top;
    t6 = t1.m_Bounds;
    t1.SetBounds$4(t2 + t3, t4 + t5, t6.width, t6.height);
    this._text.SizeToContents$0();
    t6 = J.$add$ns(J.$add$ns(J.$add$ns(J.$add$ns(this._text.m_Bounds.width, this.m_Padding.Left), this.m_Padding.Right), this.get$TextPadding().Left), this.get$TextPadding().Right);
    t5 = J.$add$ns(J.$add$ns(J.$add$ns(J.$add$ns(this._text.m_Bounds.height, this.m_Padding.Top), this.m_Padding.Bottom), this.get$TextPadding().Top), this.get$TextPadding().Bottom);
    t4 = this.m_Bounds;
    this.SetBounds$4(t4.left, t4.top, t6, t5);
    t1 = this.m_Parent;
    if (t1 != null) {
      t1.m_NeedsLayout = true;
      t1.m_CacheTextureDirty = true;
    }
  },
  Layout$1: function(skin) {
    var align, x, y, t1, t2, t3, t4;
    X.GwenControlBase.prototype.Layout$1.call(this, skin);
    align = this._align;
    if (this._autoSizeToContents === true)
      this.SizeToContents$0();
    x = this.get$TextPadding().Left + this.m_Padding.Left;
    y = this.get$TextPadding().Top + this.m_Padding.Top;
    t1 = align.value;
    if (0 !== (t1 & C.Pos_4.value) >>> 0)
      x = J.$sub$n(J.$sub$n(J.$sub$n(this.m_Bounds.width, this._text.m_Bounds.width), this.get$TextPadding().Right), this.m_Padding.Right);
    if (0 !== (t1 & C.Pos_64.value) >>> 0) {
      t2 = this.get$TextPadding().Left;
      t3 = this.m_Padding.Left;
      t4 = J.$mul$n(J.$sub$n(J.$sub$n(J.$sub$n(J.$sub$n(J.$sub$n(this.m_Bounds.width, this._text.m_Bounds.width), this.get$TextPadding().Left), this.m_Padding.Left), this.get$TextPadding().Right), this.m_Padding.Right), 0.5);
      if (typeof t4 !== "number")
        throw H.iae(t4);
      x = C.JSNumber_methods.toInt$0(C.JSNumber_methods.roundToDouble$0(t2 + t3 + t4));
    }
    if (0 !== (t1 & C.Pos_32.value) >>> 0) {
      t2 = this.get$TextPadding().Top;
      t3 = this.m_Padding.Top;
      t4 = J.$mul$n(J.$sub$n(this.m_Bounds.height, this._text.m_Bounds.height), 0.5);
      if (typeof t4 !== "number")
        throw H.iae(t4);
      y = C.JSNumber_methods.toInt$0(C.JSNumber_methods.roundToDouble$0(t2 + t3 + t4 - this.get$TextPadding().Bottom - this.m_Padding.Bottom));
    }
    if (0 !== (t1 & C.Pos_16.value) >>> 0)
      y = J.$sub$n(J.$sub$n(J.$sub$n(this.m_Bounds.height, this._text.m_Bounds.height), this.get$TextPadding().Bottom), this.m_Padding.Bottom);
    t1 = this._text;
    t2 = t1.m_Bounds;
    t1.SetBounds$4(x, y, t2.width, t2.height);
  },
  Label$1: function($parent) {
    var t1, t2, t3, t4, t5, t6;
    this._text = X.GwenText$(this);
    this.m_MouseInputEnabled = false;
    t1 = this.m_Bounds;
    this.SetBounds$4(t1.left, t1.top, 100, 10);
    t1 = C.Pos_8.value;
    this._align = new X.Pos((t1 | t1) >>> 0);
    this.m_NeedsLayout = true;
    this.m_CacheTextureDirty = true;
    this._autoSizeToContents = true;
    this._mouseEventHandlerAddedHandler = new X.MouseEventHandlerAddedHandler(this);
    t1 = this.HoverEnter;
    t1.HandlerAddedNotifyHandler = this._mouseEventHandlerAddedHandler;
    t2 = this.HoverLeave;
    t2.HandlerAddedNotifyHandler = this._mouseEventHandlerAddedHandler;
    t3 = this.Clicked;
    t3.HandlerAddedNotifyHandler = this._mouseEventHandlerAddedHandler;
    t4 = this.DoubleClicked;
    t4.HandlerAddedNotifyHandler = this._mouseEventHandlerAddedHandler;
    t5 = this.RightClicked;
    t5.HandlerAddedNotifyHandler = this._mouseEventHandlerAddedHandler;
    t6 = this.DoubleRightClicked;
    t6.HandlerAddedNotifyHandler = this._mouseEventHandlerAddedHandler;
    t1.HandlerRemovedNotifyHandler = this._mouseEventHandlerAddedHandler;
    t2.HandlerRemovedNotifyHandler = this._mouseEventHandlerAddedHandler;
    t3.HandlerRemovedNotifyHandler = this._mouseEventHandlerAddedHandler;
    t4.HandlerRemovedNotifyHandler = this._mouseEventHandlerAddedHandler;
    t5.HandlerRemovedNotifyHandler = this._mouseEventHandlerAddedHandler;
    t6.HandlerRemovedNotifyHandler = this._mouseEventHandlerAddedHandler;
    this.m_MouseInputEnabled = false;
  },
  static: {
Label$: function($parent) {
  var t1, t2, t3, t4, t5, t6, t7, t8, t9;
  t1 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t1, [X.GwenEventHandler]);
  t2 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t2, [X.GwenEventHandler]);
  t3 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t3, [X.GwenEventHandler]);
  t4 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t4, [X.GwenEventHandler]);
  t5 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t5, [X.GwenEventHandler]);
  t6 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t6, [X.GwenEventHandler]);
  t7 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t7, [X.GwenEventHandler]);
  t8 = new P.Point(1, 1);
  H.setRuntimeTypeInfo(t8, [J.JSInt]);
  t9 = new P.Point(4096, 4096);
  H.setRuntimeTypeInfo(t9, [J.JSInt]);
  t9 = new X.Label(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, new X.GwenEventHandlerList(t1, null, null), new X.GwenEventHandlerList(t2, null, null), new X.GwenEventHandlerList(t3, null, null), new X.GwenEventHandlerList(t4, null, null), new X.GwenEventHandlerList(t5, null, null), new X.GwenEventHandlerList(t6, null, null), new X.GwenEventHandlerList(t7, null, null), null, t8, t9, null, null, null);
  t9.GwenControlBase$1($parent);
  t9.Label$1($parent);
  return t9;
}}

},

GwenPressEventHandler: {"": "GwenEventHandler;_checkbox",
  Invoke$2: function(control, args) {
    this._checkbox.OnClicked$2(0, 0);
  }
},

GwenCheckBoxChangedEventHandler: {"": "GwenEventHandler;_checkbox",
  Invoke$2: function(control, args) {
    this._checkbox.OnCheckChanged$2(control, args);
  }
},

LabeledCheckBox: {"": "GwenControlBase;_checkBox,_label,Checked,UnChecked,CheckChanged,m_Disposed,m_Parent,m_ActualParent,m_InnerPanel,m_ToolTip,m_Skin,m_Bounds,m_RenderBounds,m_InnerBounds,m_Padding,m_Margin,m_Name,m_RestrictToParent,m_Disabled,m_Hidden,m_MouseInputEnabled,m_KeyboardInputEnabled,m_DrawBackground,m_Dock,m_Cursor,m_Tabable,m_NeedsLayout,m_CacheTextureDirty,m_CacheToTexture,m_DragAndDrop_Package,m_UserData,m_DrawDebugOutlines,m_Children,HoverEnter,HoverLeave,BoundsChanged,Clicked,DoubleClicked,RightClicked,DoubleRightClicked,m_Accelerators,m_MinimumSize,m_MaximumSize,PaddingOutlineColor,MarginOutlineColor,BoundsOutlineColor",
  OnCheckChanged$2: function(control, args) {
    if (this._checkBox._checked)
      this.Checked.Invoke$2(this, $.get$GwenEventArgs_Empty());
    else
      this.UnChecked.Invoke$2(this, $.get$GwenEventArgs_Empty());
    this.CheckChanged.Invoke$2(this, $.get$GwenEventArgs_Empty());
  },
  OnKeySpace$1: function(down) {
    var t1;
    X.GwenControlBase.prototype.OnKeySpace$1.call(this, down);
    if (!down) {
      t1 = this._checkBox;
      t1.set$IsChecked(!t1._checked);
    }
  },
  LabeledCheckBox$1: function($parent) {
    var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17;
    t1 = this.m_Bounds;
    this.SetBounds$4(t1.left, t1.top, 200, 19);
    t1 = P.List_List(null, X.GwenEventHandler);
    H.setRuntimeTypeInfo(t1, [X.GwenEventHandler]);
    t2 = P.List_List(null, X.GwenEventHandler);
    H.setRuntimeTypeInfo(t2, [X.GwenEventHandler]);
    t3 = P.List_List(null, X.GwenEventHandler);
    H.setRuntimeTypeInfo(t3, [X.GwenEventHandler]);
    t4 = P.List_List(null, X.GwenEventHandler);
    H.setRuntimeTypeInfo(t4, [X.GwenEventHandler]);
    t5 = P.List_List(null, X.GwenEventHandler);
    H.setRuntimeTypeInfo(t5, [X.GwenEventHandler]);
    t6 = P.List_List(null, X.GwenEventHandler);
    H.setRuntimeTypeInfo(t6, [X.GwenEventHandler]);
    t7 = P.List_List(null, X.GwenEventHandler);
    H.setRuntimeTypeInfo(t7, [X.GwenEventHandler]);
    t8 = P.List_List(null, X.GwenEventHandler);
    H.setRuntimeTypeInfo(t8, [X.GwenEventHandler]);
    t9 = P.List_List(null, X.GwenEventHandler);
    H.setRuntimeTypeInfo(t9, [X.GwenEventHandler]);
    t10 = P.List_List(null, X.GwenEventHandler);
    H.setRuntimeTypeInfo(t10, [X.GwenEventHandler]);
    t11 = P.List_List(null, X.GwenEventHandler);
    H.setRuntimeTypeInfo(t11, [X.GwenEventHandler]);
    t12 = P.List_List(null, X.GwenEventHandler);
    H.setRuntimeTypeInfo(t12, [X.GwenEventHandler]);
    t13 = P.List_List(null, X.GwenEventHandler);
    H.setRuntimeTypeInfo(t13, [X.GwenEventHandler]);
    t14 = P.List_List(null, X.GwenEventHandler);
    H.setRuntimeTypeInfo(t14, [X.GwenEventHandler]);
    t15 = P.List_List(null, X.GwenEventHandler);
    H.setRuntimeTypeInfo(t15, [X.GwenEventHandler]);
    t16 = new P.Point(1, 1);
    H.setRuntimeTypeInfo(t16, [J.JSInt]);
    t17 = new P.Point(4096, 4096);
    H.setRuntimeTypeInfo(t17, [J.JSInt]);
    t17 = new X.CheckBox(false, new X.GwenEventHandlerList(t1, null, null), new X.GwenEventHandlerList(t2, null, null), new X.GwenEventHandlerList(t3, null, null), false, false, false, false, null, new X.GwenEventHandlerList(t4, null, null), new X.GwenEventHandlerList(t5, null, null), new X.GwenEventHandlerList(t6, null, null), new X.GwenEventHandlerList(t7, null, null), new X.GwenEventHandlerList(t8, null, null), null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, new X.GwenEventHandlerList(t9, null, null), new X.GwenEventHandlerList(t10, null, null), new X.GwenEventHandlerList(t11, null, null), new X.GwenEventHandlerList(t12, null, null), new X.GwenEventHandlerList(t13, null, null), new X.GwenEventHandlerList(t14, null, null), new X.GwenEventHandlerList(t15, null, null), null, t16, t17, null, null, null);
    t17.GwenControlBase$1(this);
    t17.Label$1(this);
    t17.Button$1(this);
    t16 = t17.m_Bounds;
    t17.SetBounds$4(t16.left, t16.top, 15, 15);
    t17.IsToggle = true;
    this._checkBox = t17;
    this._checkBox.set$Dock(C.Pos_2);
    this._checkBox.set$Margin(new X.GwenMargin(2, 2, 0, 2));
    this._checkBox.m_Tabable = false;
    t17 = this._checkBox.CheckChanged;
    t17.add$1(t17, new X.GwenCheckBoxChangedEventHandler(this));
    this._label = X.Label$(this);
    this._label.set$Dock(C.Pos_128);
    t17 = this._label.Clicked;
    t17.add$1(t17, new X.GwenPressEventHandler(this._checkBox));
    this._label.m_Tabable = false;
    t17 = this._label;
    t17._autoSizeToContents = false;
    t17.m_NeedsLayout = true;
    t17.m_CacheTextureDirty = true;
  },
  static: {
LabeledCheckBox$: function($parent) {
  var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12;
  t1 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t1, [X.GwenEventHandler]);
  t2 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t2, [X.GwenEventHandler]);
  t3 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t3, [X.GwenEventHandler]);
  t4 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t4, [X.GwenEventHandler]);
  t5 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t5, [X.GwenEventHandler]);
  t6 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t6, [X.GwenEventHandler]);
  t7 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t7, [X.GwenEventHandler]);
  t8 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t8, [X.GwenEventHandler]);
  t9 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t9, [X.GwenEventHandler]);
  t10 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t10, [X.GwenEventHandler]);
  t11 = new P.Point(1, 1);
  H.setRuntimeTypeInfo(t11, [J.JSInt]);
  t12 = new P.Point(4096, 4096);
  H.setRuntimeTypeInfo(t12, [J.JSInt]);
  t12 = new X.LabeledCheckBox(null, null, new X.GwenEventHandlerList(t1, null, null), new X.GwenEventHandlerList(t2, null, null), new X.GwenEventHandlerList(t3, null, null), null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, new X.GwenEventHandlerList(t4, null, null), new X.GwenEventHandlerList(t5, null, null), new X.GwenEventHandlerList(t6, null, null), new X.GwenEventHandlerList(t7, null, null), new X.GwenEventHandlerList(t8, null, null), new X.GwenEventHandlerList(t9, null, null), new X.GwenEventHandlerList(t10, null, null), null, t11, t12, null, null, null);
  t12.GwenControlBase$1($parent);
  t12.LabeledCheckBox$1($parent);
  return t12;
}}

},

GwenRBPressEventHandler: {"": "GwenEventHandler;_checkbox",
  Invoke$2: function(control, args) {
    this._checkbox.OnClicked$2(0, 0);
  }
},

LabeledRadioButton: {"": "GwenControlBase;_radioButton,_label,m_Disposed,m_Parent,m_ActualParent,m_InnerPanel,m_ToolTip,m_Skin,m_Bounds,m_RenderBounds,m_InnerBounds,m_Padding,m_Margin,m_Name,m_RestrictToParent,m_Disabled,m_Hidden,m_MouseInputEnabled,m_KeyboardInputEnabled,m_DrawBackground,m_Dock,m_Cursor,m_Tabable,m_NeedsLayout,m_CacheTextureDirty,m_CacheToTexture,m_DragAndDrop_Package,m_UserData,m_DrawDebugOutlines,m_Children,HoverEnter,HoverLeave,BoundsChanged,Clicked,DoubleClicked,RightClicked,DoubleRightClicked,m_Accelerators,m_MinimumSize,m_MaximumSize,PaddingOutlineColor,MarginOutlineColor,BoundsOutlineColor",
  Layout$1: function(skin) {
    var t1, t2, t3;
    if (J.$gt$n(this._label.m_Bounds.height, this._radioButton.m_Bounds.height)) {
      t1 = this._radioButton;
      t2 = J.$tdiv$n(J.$sub$n(this._label.m_Bounds.height, t1.m_Bounds.height), 2);
      t3 = t1.m_Bounds;
      t1.SetBounds$4(t3.left, t2, t3.width, t3.height);
    }
    X.Align_PlaceRightBottom(this._label, this._radioButton, 0);
    this.SizeToChildren$0();
    X.GwenControlBase.prototype.Layout$1.call(this, skin);
  },
  RenderFocus$1: function(skin) {
    if ($.InputHandler_KeyboardFocus !== this)
      return;
    if (this.m_Tabable !== true)
      return;
    skin.DrawKeyboardHighlight$3(this, this.m_RenderBounds, 0);
  },
  OnKeySpace$1: function(down) {
    var t1;
    if (down) {
      t1 = this._radioButton;
      t1.set$IsChecked(!t1._checked);
    }
    return true;
  },
  LabeledRadioButton$1: function($parent) {
    var t1;
    this.m_MouseInputEnabled = true;
    t1 = this.m_Bounds;
    this.SetBounds$4(t1.left, t1.top, 100, 20);
    this._radioButton = X.RadioButton$(this);
    this._radioButton.m_Tabable = false;
    this._radioButton.m_KeyboardInputEnabled = false;
    this._label = X.Label$(this);
    t1 = this._label;
    t1._align = new X.Pos((C.Pos_32.value | C.Pos_2.value) >>> 0);
    t1.m_NeedsLayout = true;
    t1.m_CacheTextureDirty = true;
    this._label.SetText$1("Radio Button");
    t1 = this._label.Clicked;
    t1.add$1(t1, new X.GwenRBPressEventHandler(this._radioButton));
    this._label.m_Tabable = false;
    this._label.m_KeyboardInputEnabled = false;
    t1 = this._label;
    t1._autoSizeToContents = false;
    t1.m_NeedsLayout = true;
    t1.m_CacheTextureDirty = true;
  },
  static: {
LabeledRadioButton$: function($parent) {
  var t1, t2, t3, t4, t5, t6, t7, t8, t9;
  t1 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t1, [X.GwenEventHandler]);
  t2 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t2, [X.GwenEventHandler]);
  t3 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t3, [X.GwenEventHandler]);
  t4 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t4, [X.GwenEventHandler]);
  t5 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t5, [X.GwenEventHandler]);
  t6 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t6, [X.GwenEventHandler]);
  t7 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t7, [X.GwenEventHandler]);
  t8 = new P.Point(1, 1);
  H.setRuntimeTypeInfo(t8, [J.JSInt]);
  t9 = new P.Point(4096, 4096);
  H.setRuntimeTypeInfo(t9, [J.JSInt]);
  t9 = new X.LabeledRadioButton(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, new X.GwenEventHandlerList(t1, null, null), new X.GwenEventHandlerList(t2, null, null), new X.GwenEventHandlerList(t3, null, null), new X.GwenEventHandlerList(t4, null, null), new X.GwenEventHandlerList(t5, null, null), new X.GwenEventHandlerList(t6, null, null), new X.GwenEventHandlerList(t7, null, null), null, t8, t9, null, null, null);
  t9.GwenControlBase$1($parent);
  t9.LabeledRadioButton$1($parent);
  return t9;
}}

},

Modal: {"": "GwenControlBase;m_Disposed,m_Parent,m_ActualParent,m_InnerPanel,m_ToolTip,m_Skin,m_Bounds,m_RenderBounds,m_InnerBounds,m_Padding,m_Margin,m_Name,m_RestrictToParent,m_Disabled,m_Hidden,m_MouseInputEnabled,m_KeyboardInputEnabled,m_DrawBackground,m_Dock,m_Cursor,m_Tabable,m_NeedsLayout,m_CacheTextureDirty,m_CacheToTexture,m_DragAndDrop_Package,m_UserData,m_DrawDebugOutlines,m_Children,HoverEnter,HoverLeave,BoundsChanged,Clicked,DoubleClicked,RightClicked,DoubleRightClicked,m_Accelerators,m_MinimumSize,m_MaximumSize,PaddingOutlineColor,MarginOutlineColor,BoundsOutlineColor",
  Layout$1: function(skin) {
    this.SetBounds$4(0, 0, this.GetCanvas$0().m_Bounds.width, this.GetCanvas$0().m_Bounds.height);
  },
  Render$1: function(skin) {
    skin.DrawModalControl$1(this);
  },
  Modal$1: function($parent) {
    this.m_KeyboardInputEnabled = true;
    this.m_MouseInputEnabled = true;
    this.m_DrawBackground = true;
    this.SetBounds$4(0, 0, this.GetCanvas$0().m_Bounds.width, this.GetCanvas$0().m_Bounds.height);
  },
  static: {
Modal$: function($parent) {
  var t1, t2, t3, t4, t5, t6, t7, t8, t9;
  t1 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t1, [X.GwenEventHandler]);
  t2 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t2, [X.GwenEventHandler]);
  t3 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t3, [X.GwenEventHandler]);
  t4 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t4, [X.GwenEventHandler]);
  t5 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t5, [X.GwenEventHandler]);
  t6 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t6, [X.GwenEventHandler]);
  t7 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t7, [X.GwenEventHandler]);
  t8 = new P.Point(1, 1);
  H.setRuntimeTypeInfo(t8, [J.JSInt]);
  t9 = new P.Point(4096, 4096);
  H.setRuntimeTypeInfo(t9, [J.JSInt]);
  t9 = new X.Modal(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, new X.GwenEventHandlerList(t1, null, null), new X.GwenEventHandlerList(t2, null, null), new X.GwenEventHandlerList(t3, null, null), new X.GwenEventHandlerList(t4, null, null), new X.GwenEventHandlerList(t5, null, null), new X.GwenEventHandlerList(t6, null, null), new X.GwenEventHandlerList(t7, null, null), null, t8, t9, null, null, null);
  t9.GwenControlBase$1($parent);
  t9.Modal$1($parent);
  return t9;
}}

},

GwenPadding: {"": "Object;Top,Bottom,Left,Right", static: {
"": "GwenPadding_Zero,GwenPadding_One,GwenPadding_Two,GwenPadding_Three,GwenPadding_Four,GwenPadding_Five",
}
},

Pos: {"": "Object;value>", static: {
"": "Pos_None,Pos_Left,Pos_Right,Pos_Top,Pos_Bottom,Pos_CenterV,Pos_CenterH,Pos_Fill,Pos_Center",
}
},

RadioButton: {"": "CheckBox;_checked,Checked,UnChecked,CheckChanged,_depressed,IsToggle,_toggleStatus,_centerImage,_image,Pressed,Released,Toggled,ToggledOn,ToggledOff,_text,_align,_textPadding,_autoSizeToContents,_mouseEventHandlerAddedHandler,m_Disposed,m_Parent,m_ActualParent,m_InnerPanel,m_ToolTip,m_Skin,m_Bounds,m_RenderBounds,m_InnerBounds,m_Padding,m_Margin,m_Name,m_RestrictToParent,m_Disabled,m_Hidden,m_MouseInputEnabled,m_KeyboardInputEnabled,m_DrawBackground,m_Dock,m_Cursor,m_Tabable,m_NeedsLayout,m_CacheTextureDirty,m_CacheToTexture,m_DragAndDrop_Package,m_UserData,m_DrawDebugOutlines,m_Children,HoverEnter,HoverLeave,BoundsChanged,Clicked,DoubleClicked,RightClicked,DoubleRightClicked,m_Accelerators,m_MinimumSize,m_MaximumSize,PaddingOutlineColor,MarginOutlineColor,BoundsOutlineColor",
  get$AllowUncheck: function() {
    return false;
  },
  Render$1: function(skin) {
    skin.DrawRadioButton$3(this, this._checked, this._depressed);
  },
  RadioButton$1: function($parent) {
    var t1 = this.m_Bounds;
    this.SetBounds$4(t1.left, t1.top, 15, 15);
    this.m_MouseInputEnabled = true;
    this.m_Tabable = false;
    this.IsToggle = true;
  },
  static: {
RadioButton$: function($parent) {
  var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17;
  t1 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t1, [X.GwenEventHandler]);
  t2 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t2, [X.GwenEventHandler]);
  t3 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t3, [X.GwenEventHandler]);
  t4 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t4, [X.GwenEventHandler]);
  t5 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t5, [X.GwenEventHandler]);
  t6 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t6, [X.GwenEventHandler]);
  t7 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t7, [X.GwenEventHandler]);
  t8 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t8, [X.GwenEventHandler]);
  t9 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t9, [X.GwenEventHandler]);
  t10 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t10, [X.GwenEventHandler]);
  t11 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t11, [X.GwenEventHandler]);
  t12 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t12, [X.GwenEventHandler]);
  t13 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t13, [X.GwenEventHandler]);
  t14 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t14, [X.GwenEventHandler]);
  t15 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t15, [X.GwenEventHandler]);
  t16 = new P.Point(1, 1);
  H.setRuntimeTypeInfo(t16, [J.JSInt]);
  t17 = new P.Point(4096, 4096);
  H.setRuntimeTypeInfo(t17, [J.JSInt]);
  t17 = new X.RadioButton(false, new X.GwenEventHandlerList(t1, null, null), new X.GwenEventHandlerList(t2, null, null), new X.GwenEventHandlerList(t3, null, null), false, false, false, false, null, new X.GwenEventHandlerList(t4, null, null), new X.GwenEventHandlerList(t5, null, null), new X.GwenEventHandlerList(t6, null, null), new X.GwenEventHandlerList(t7, null, null), new X.GwenEventHandlerList(t8, null, null), null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, new X.GwenEventHandlerList(t9, null, null), new X.GwenEventHandlerList(t10, null, null), new X.GwenEventHandlerList(t11, null, null), new X.GwenEventHandlerList(t12, null, null), new X.GwenEventHandlerList(t13, null, null), new X.GwenEventHandlerList(t14, null, null), new X.GwenEventHandlerList(t15, null, null), null, t16, t17, null, null, null);
  t17.GwenControlBase$1($parent);
  t17.Label$1($parent);
  t17.Button$1($parent);
  t16 = t17.m_Bounds;
  t17.SetBounds$4(t16.left, t16.top, 15, 15);
  t17.IsToggle = true;
  t17.RadioButton$1($parent);
  return t17;
}}

},

ResizableEventHandler: {"": "GwenEventHandler;_control",
  Invoke$2: function(control, args) {
    var t1 = this._control;
    t1.Resized.Invoke$2(t1, $.get$GwenEventArgs_Empty());
  }
},

ResizableControl: {"": "GwenControlBase;",
  ResizableControl$1: function($parent) {
    var t1, t2, t3, t4;
    this.ClampMovement = false;
    t1 = new P.Point(5, 5);
    H.setRuntimeTypeInfo(t1, [null]);
    this.set$MinimumSize(t1);
    this._onResizeHandler = new X.ResizableEventHandler(this);
    t1 = this._resizer;
    t1[2] = X.Resizer$(this);
    t1[2].set$Dock(C.Pos_16);
    t1[2].set$ResizeDir(C.Pos_16);
    t2 = t1[2].Resized;
    t2.add$1(t2, this._onResizeHandler);
    t2 = t1[2];
    t2._base = this;
    t1[1] = X.Resizer$(t2);
    t1[1].set$Dock(C.Pos_2);
    t2 = C.Pos_16.value;
    t3 = C.Pos_2.value;
    t1[1].set$ResizeDir(new X.Pos((t2 | t3) >>> 0));
    t4 = t1[1].Resized;
    t4.add$1(t4, this._onResizeHandler);
    t1[1]._base = this;
    t1[3] = X.Resizer$(t1[2]);
    t1[3].set$Dock(C.Pos_4);
    t4 = C.Pos_4.value;
    t1[3].set$ResizeDir(new X.Pos((t2 | t4) >>> 0));
    t2 = t1[3].Resized;
    t2.add$1(t2, this._onResizeHandler);
    t1[3]._base = this;
    t1[8] = X.Resizer$(this);
    t1[8].set$Dock(C.Pos_8);
    t1[8].set$ResizeDir(C.Pos_8);
    t2 = t1[8].Resized;
    t2.add$1(t2, this._onResizeHandler);
    t2 = t1[8];
    t2._base = this;
    t1[7] = X.Resizer$(t2);
    t1[7].set$Dock(C.Pos_2);
    t2 = C.Pos_8.value;
    t1[7].set$ResizeDir(new X.Pos((t3 | t2) >>> 0));
    t3 = t1[7].Resized;
    t3.add$1(t3, this._onResizeHandler);
    t1[7]._base = this;
    t1[9] = X.Resizer$(t1[8]);
    t1[9].set$Dock(C.Pos_4);
    t1[9].set$ResizeDir(new X.Pos((t4 | t2) >>> 0));
    t2 = t1[9].Resized;
    t2.add$1(t2, this._onResizeHandler);
    t1[9]._base = this;
    t1[4] = X.Resizer$(this);
    t1[4].set$Dock(C.Pos_2);
    t1[4].set$ResizeDir(C.Pos_2);
    t2 = t1[4].Resized;
    t2.add$1(t2, this._onResizeHandler);
    t1[4]._base = this;
    t1[6] = X.Resizer$(this);
    t1[6].set$Dock(C.Pos_4);
    t1[6].set$ResizeDir(C.Pos_4);
    t2 = t1[6].Resized;
    t2.add$1(t2, this._onResizeHandler);
    t1[6]._base = this;
  }
},

Resizer: {"": "Dragger;_resizeDir,Resized,_held,_holdPos,_base,Dragged,m_Disposed,m_Parent,m_ActualParent,m_InnerPanel,m_ToolTip,m_Skin,m_Bounds,m_RenderBounds,m_InnerBounds,m_Padding,m_Margin,m_Name,m_RestrictToParent,m_Disabled,m_Hidden,m_MouseInputEnabled,m_KeyboardInputEnabled,m_DrawBackground,m_Dock,m_Cursor,m_Tabable,m_NeedsLayout,m_CacheTextureDirty,m_CacheToTexture,m_DragAndDrop_Package,m_UserData,m_DrawDebugOutlines,m_Children,HoverEnter,HoverLeave,BoundsChanged,Clicked,DoubleClicked,RightClicked,DoubleRightClicked,m_Accelerators,m_MinimumSize,m_MaximumSize,PaddingOutlineColor,MarginOutlineColor,BoundsOutlineColor",
  OnMouseMoved$4: function(x, y, dx, dy) {
    var t1, oldBounds, minsz, t2, pCursorPos, rawdelta, delta, left, width, right, $top, height, bottom, diff, height0, woff, width0, hoff;
    t1 = this._base;
    if (null == t1)
      return;
    if (this._held !== true)
      return;
    oldBounds = t1.m_Bounds;
    minsz = t1.m_MinimumSize;
    t2 = new P.Point(x, y);
    H.setRuntimeTypeInfo(t2, [null]);
    pCursorPos = t1.CanvasPosToLocal$1(t2);
    rawdelta = this._base.LocalPosToCanvas$1(this._holdPos);
    t2 = rawdelta.x;
    if (typeof t2 !== "number")
      throw t2.$sub();
    t1 = rawdelta.y;
    if (typeof t1 !== "number")
      throw t1.$sub();
    delta = new P.Point(t2 - x, t1 - y);
    H.setRuntimeTypeInfo(delta, [null]);
    left = oldBounds.left;
    width = oldBounds.width;
    t1 = J.getInterceptor$ns(left);
    right = t1.$add(left, width);
    $top = oldBounds.top;
    height = oldBounds.height;
    bottom = J.$add$ns($top, height);
    if (0 !== (this._resizeDir.value & C.Pos_2.value) >>> 0) {
      t2 = delta.x;
      left = t1.$sub(left, t2);
      width = J.$add$ns(width, t2);
      right = J.$add$ns(right, t2);
      t1 = minsz.x;
      if (J.$lt$n(width, t1)) {
        if (typeof t1 !== "number")
          throw t1.$sub();
        if (typeof width !== "number")
          throw H.iae(width);
        diff = t1 - width;
        width += diff;
        right = J.$add$ns(right, diff);
        left = J.$sub$n(left, diff);
      }
    }
    if (0 !== (this._resizeDir.value & C.Pos_8.value) >>> 0) {
      t1 = delta.y;
      right = J.$sub$n(right, t1);
      height0 = J.$add$ns(height, t1);
      J.$add$ns(bottom, t1);
      t1 = minsz.y;
      t2 = J.getInterceptor$n(height0);
      if (t2.$lt(height0, t1)) {
        if (typeof t1 !== "number")
          throw t1.$sub();
        if (typeof height !== "number")
          throw H.iae(height);
        diff = t1 - height;
        height = t2.$add(height0, diff);
        J.$sub$n(right, diff);
      } else
        height = height0;
    }
    if (0 !== (this._resizeDir.value & C.Pos_4.value) >>> 0) {
      t1 = J.getInterceptor$n(width);
      woff = t1.$sub(width, this._holdPos.x);
      t2 = pCursorPos.x;
      if (typeof t2 !== "number")
        throw t2.$add();
      if (typeof woff !== "number")
        throw H.iae(woff);
      width0 = t2 + woff;
      if (typeof left !== "number")
        throw H.iae(left);
      t2 = minsz.x;
      if (typeof t2 !== "number")
        throw H.iae(t2);
      if (width0 < t2)
        width0 = t2;
      diff = t1.$sub(width, width0);
      t1 = this._holdPos;
      t2 = t1.x;
      if (typeof t2 !== "number")
        throw t2.$sub();
      if (typeof diff !== "number")
        throw H.iae(diff);
      t1 = new P.Point(t2 - diff, t1.y);
      H.setRuntimeTypeInfo(t1, [J.JSInt]);
      this._holdPos = t1;
      width = width0;
    }
    if (0 !== (this._resizeDir.value & C.Pos_16.value) >>> 0) {
      t1 = J.getInterceptor$n(height);
      hoff = t1.$sub(height, this._holdPos.y);
      t2 = pCursorPos.y;
      if (typeof t2 !== "number")
        throw t2.$add();
      if (typeof hoff !== "number")
        throw H.iae(hoff);
      height0 = t2 + hoff;
      if (typeof $top !== "number")
        throw H.iae($top);
      t2 = minsz.y;
      if (typeof t2 !== "number")
        throw H.iae(t2);
      if (height0 < t2)
        height0 = t2;
      diff = t1.$sub(height, height0);
      t1 = this._holdPos;
      t2 = t1.x;
      t1 = t1.y;
      if (typeof t1 !== "number")
        throw t1.$sub();
      if (typeof diff !== "number")
        throw H.iae(diff);
      t1 = new P.Point(t2, t1 - diff);
      H.setRuntimeTypeInfo(t1, [J.JSInt]);
      this._holdPos = t1;
      height = height0;
    }
    this._base.SetBounds$4(left, $top, width, height);
    this.Resized.Invoke$2(this, $.get$GwenEventArgs_Empty());
  },
  set$ResizeDir: function(value) {
    var t1, t2, t3, t4;
    t1 = value.value;
    this._resizeDir = new X.Pos(t1);
    t2 = 0 !== (t1 & C.Pos_2.value) >>> 0;
    if (!(t2 && 0 !== (t1 & C.Pos_8.value) >>> 0))
      t3 = 0 !== (t1 & C.Pos_4.value) >>> 0 && 0 !== (t1 & C.Pos_16.value) >>> 0;
    else
      t3 = true;
    if (t3) {
      this.m_Cursor = C.CssCursor_I9i;
      return;
    }
    t3 = 0 === (t1 & C.Pos_4.value) >>> 0;
    if (!(!t3 && 0 !== (t1 & C.Pos_8.value) >>> 0))
      t4 = t2 && 0 !== (t1 & C.Pos_16.value) >>> 0;
    else
      t4 = true;
    if (t4) {
      this.m_Cursor = C.CssCursor_oyU;
      return;
    }
    if (!t3 || t2) {
      this.m_Cursor = C.CssCursor_wp3;
      return;
    }
    if (0 !== (t1 & C.Pos_8.value) >>> 0 || 0 !== (t1 & C.Pos_16.value) >>> 0) {
      this.m_Cursor = C.CssCursor_sww;
      return;
    }
  },
  Resizer$1: function($parent) {
    var t1;
    this._resizeDir = C.Pos_2;
    this.m_MouseInputEnabled = true;
    t1 = this.m_Bounds;
    this.SetBounds$4(t1.left, t1.top, 6, 6);
    this._base = $parent;
  },
  static: {
Resizer$: function($parent) {
  var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11;
  t1 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t1, [X.GwenEventHandler]);
  t2 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t2, [X.GwenEventHandler]);
  t3 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t3, [X.GwenEventHandler]);
  t4 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t4, [X.GwenEventHandler]);
  t5 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t5, [X.GwenEventHandler]);
  t6 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t6, [X.GwenEventHandler]);
  t7 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t7, [X.GwenEventHandler]);
  t8 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t8, [X.GwenEventHandler]);
  t9 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t9, [X.GwenEventHandler]);
  t10 = new P.Point(1, 1);
  H.setRuntimeTypeInfo(t10, [J.JSInt]);
  t11 = new P.Point(4096, 4096);
  H.setRuntimeTypeInfo(t11, [J.JSInt]);
  t11 = new X.Resizer(null, new X.GwenEventHandlerList(t1, null, null), null, null, null, new X.GwenEventHandlerList(t2, null, null), null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, new X.GwenEventHandlerList(t3, null, null), new X.GwenEventHandlerList(t4, null, null), new X.GwenEventHandlerList(t5, null, null), new X.GwenEventHandlerList(t6, null, null), new X.GwenEventHandlerList(t7, null, null), new X.GwenEventHandlerList(t8, null, null), new X.GwenEventHandlerList(t9, null, null), null, t10, t11, null, null, null);
  t11.GwenControlBase$1($parent);
  t11.Dragger$1($parent);
  t11.Resizer$1($parent);
  return t11;
}}

},

Single: {"": "Object;_Texture,_uv,_width,_height",
  Draw$3: function(render, rect, col) {
    var t1, t2, t3, t4, t5, targetRect;
    col = X.Color__getDefaultColor(16777215);
    t1 = render._cvsr;
    J.set$fillStyle$x(t1._txContext, col.get$StyleString());
    t1._color = col;
    t1 = this._Texture;
    t2 = this._uv;
    t3 = t2[0];
    t4 = t2[1];
    t5 = t2[2];
    t2 = t2[3];
    targetRect = render.translateRect$1(rect);
    render._cvsr.drawTexturedRectFromName$6(t1._gwendart$_name, targetRect, t3, t4, t5, t2);
  },
  Draw$2: function(render, rect) {
    return this.Draw$3(render, rect, null);
  },
  Single$5: function(texture, x, y, w, h) {
    var t1, texw, texh;
    this._Texture = texture;
    t1 = this._Texture;
    texw = t1._width;
    texw.toString;
    texh = t1._height;
    texh.toString;
    t1 = this._uv;
    if (typeof texw !== "number")
      throw H.iae(texw);
    t1[0] = x / texw;
    if (typeof texh !== "number")
      throw H.iae(texh);
    t1[1] = y / texh;
    t1[2] = (x + w) / texw;
    t1[3] = (y + h) / texh;
    this._width = C.JSInt_methods.toInt$0(w);
    this._height = C.JSInt_methods.toInt$0(h);
  },
  static: {
Single$: function(texture, x, y, w, h) {
  var t1 = new X.Single(null, [0, 0, 1, 1], null, null);
  t1.Single$5(texture, x, y, w, h);
  return t1;
}}

},

TextBox: {"": "Label;_selectAll,_cursorPos,_cursorEnd,m_SelectionBounds,m_CaretBounds,m_LastInputTime,TextChanged,SubmitPressed,_text,_align,_textPadding,_autoSizeToContents,_mouseEventHandlerAddedHandler,m_Disposed,m_Parent,m_ActualParent,m_InnerPanel,m_ToolTip,m_Skin,m_Bounds,m_RenderBounds,m_InnerBounds,m_Padding,m_Margin,m_Name,m_RestrictToParent,m_Disabled,m_Hidden,m_MouseInputEnabled,m_KeyboardInputEnabled,m_DrawBackground,m_Dock,m_Cursor,m_Tabable,m_NeedsLayout,m_CacheTextureDirty,m_CacheToTexture,m_DragAndDrop_Package,m_UserData,m_DrawDebugOutlines,m_Children,HoverEnter,HoverLeave,BoundsChanged,Clicked,DoubleClicked,RightClicked,DoubleRightClicked,m_Accelerators,m_MinimumSize,m_MaximumSize,PaddingOutlineColor,MarginOutlineColor,BoundsOutlineColor",
  get$AccelOnlyFocus: function() {
    return true;
  },
  set$CursorPos: function(value) {
    var t1 = this._cursorPos;
    if (t1 == null ? value == null : t1 === value)
      return;
    this._cursorPos = value;
    this.RefreshCursorBounds$0();
  },
  set$CursorEnd: function(value) {
    var t1 = this._cursorEnd;
    if (value == null ? t1 == null : value === t1)
      return;
    this._cursorEnd = value;
    this.RefreshCursorBounds$0();
  },
  RenderFocus$1: function(skin) {
  },
  OnTextChanged$0: function() {
    var t1, t2;
    X.Label.prototype.OnTextChanged$0.call(this);
    t1 = this._cursorPos;
    t2 = this._text._string.length;
    if (typeof t1 !== "number")
      throw t1.$gt();
    if (t1 > t2)
      this._cursorPos = t2;
    t1 = this._cursorEnd;
    t2 = this._text._string.length;
    if (typeof t1 !== "number")
      throw t1.$gt();
    if (t1 > t2)
      this._cursorEnd = t2;
    this.TextChanged.Invoke$2(this, $.get$GwenEventArgs_Empty());
  },
  OnChar$1: function(chr) {
    X.GwenControlBase.prototype.OnChar$1.call(this, chr);
    if (chr === "\t")
      return false;
    this.InsertText$1(chr);
    return true;
  },
  InsertText$1: function(text) {
    var t1, t2;
    t1 = this._cursorPos;
    t2 = this._cursorEnd;
    if (t1 == null ? t2 != null : t1 !== t2)
      this.EraseSelection$0();
    t1 = this._cursorPos;
    t2 = this._text._string.length;
    if (typeof t1 !== "number")
      throw t1.$gt();
    if (t1 > t2)
      this._cursorPos = t2;
    this.SetText$1(X.TextBox_insertIntoString(X.Label.prototype.get$Text.call(this), this._cursorPos, text));
    t1 = this._cursorPos;
    if (typeof t1 !== "number")
      throw t1.$add();
    this._cursorPos = t1 + text.length;
    this._cursorEnd = this._cursorPos;
    this.RefreshCursorBounds$0();
  },
  Render$1: function(skin) {
    var t1, t2, t3;
    X.GwenControlBase.prototype.Render$1.call(this, skin);
    if (this.m_DrawBackground === true)
      skin.DrawTextBox$1(this);
    if ($.InputHandler_KeyboardFocus !== this)
      return;
    t1 = this._cursorPos;
    t2 = this._cursorEnd;
    if (t1 == null ? t2 != null : t1 !== t2) {
      t1 = skin._renderer;
      t2 = new X.Color(null, null, null, null);
      t2.a = 200;
      t2.r = 50;
      t2.g = 170;
      t2.b = 255;
      t3 = t1._cvsr;
      J.set$fillStyle$x(t3._txContext, t2.get$StyleString());
      t3._color = t2;
      t1.drawFilledRect$1(this.m_SelectionBounds);
    }
    if (C.JSNumber_methods.$mod(X.Neutral_GetTimeInSeconds() - this.m_LastInputTime, 1) <= 0.5) {
      t1 = skin._renderer;
      t2 = X.Color__getDefaultColor(0);
      t3 = t1._cvsr;
      J.set$fillStyle$x(t3._txContext, t2.get$StyleString());
      t3._color = t2;
      t1.drawFilledRect$1(this.m_CaretBounds);
    }
  },
  RefreshCursorBounds$0: function() {
    var pA, t1, t2, left;
    this.m_LastInputTime = X.Neutral_GetTimeInSeconds();
    this.MakeCaretVisible$0();
    pA = this.GetCharacterPosition$1(this._cursorPos);
    t1 = pA.x;
    t2 = this.GetCharacterPosition$1(this._cursorEnd).x;
    left = P.min(t1, t2);
    t2 = new P.Rectangle(left, J.$sub$n(this._text.m_Bounds.top, 1), P.max(t1, t2) - left, J.$add$ns(this._text.m_Bounds.height, 2));
    H.setRuntimeTypeInfo(t2, [null]);
    this.m_SelectionBounds = t2;
    t1 = new P.Rectangle(t1, J.$sub$n(this._text.m_Bounds.top, 1), 1, J.$add$ns(this._text.m_Bounds.height, 2));
    H.setRuntimeTypeInfo(t1, [null]);
    this.m_CaretBounds = t1;
    this.Redraw$0();
  },
  OnMouseDoubleClickedLeft$2: function(x, y) {
    $.get$GwenEventArgs_Empty();
    this._cursorEnd = 0;
    this._cursorPos = this._text._string.length;
    this.RefreshCursorBounds$0();
  },
  OnKeyReturn$1: function(down) {
    X.GwenControlBase.prototype.OnKeyReturn$1.call(this, down);
    if (down)
      return true;
    this.OnReturn$0();
    this.OnKeyTab$1(true);
    if ($.InputHandler_KeyboardFocus === this)
      this.Blur$0();
    return true;
  },
  OnKeyBackspace$1: function(down) {
    var t1, t2;
    X.GwenControlBase.prototype.OnKeyBackspace$1.call(this, down);
    if (!down)
      return true;
    t1 = this._cursorPos;
    t2 = this._cursorEnd;
    if (t1 == null ? t2 != null : t1 !== t2) {
      this.EraseSelection$0();
      return true;
    }
    if (t1 === 0)
      return true;
    if (typeof t1 !== "number")
      throw t1.$sub();
    this.DeleteText$2(t1 - 1, 1);
    return true;
  },
  OnKeyDelete$1: function(down) {
    var t1, t2;
    X.GwenControlBase.prototype.OnKeyDelete$1.call(this, down);
    if (!down)
      return true;
    t1 = this._cursorPos;
    t2 = this._cursorEnd;
    if (t1 == null ? t2 != null : t1 !== t2) {
      this.EraseSelection$0();
      return true;
    }
    t2 = this._text._string.length;
    if (typeof t1 !== "number")
      throw t1.$ge();
    if (t1 >= t2)
      return true;
    this.DeleteText$2(t1, 1);
    return true;
  },
  OnKeyLeft$1: function(down) {
    var t1, t2;
    X.GwenControlBase.prototype.OnKeyLeft$1.call(this, down);
    if (!down)
      return true;
    t1 = this._cursorPos;
    if (typeof t1 !== "number")
      throw t1.$gt();
    if (t1 > 0)
      this._cursorPos = t1 - 1;
    t1 = $.get$InputHandler_m_KeyData().KeyState;
    t2 = C.GwenKey_6.value;
    if (t2 < 0 || t2 >= t1.length)
      throw H.ioore(t1, t2);
    if (t1[t2] !== true)
      this._cursorEnd = this._cursorPos;
    this.RefreshCursorBounds$0();
    return true;
  },
  OnKeyRight$1: function(down) {
    var t1, t2;
    X.GwenControlBase.prototype.OnKeyRight$1.call(this, down);
    if (!down)
      return true;
    t1 = this._cursorPos;
    t2 = this._text._string.length;
    if (typeof t1 !== "number")
      throw t1.$lt();
    if (t1 < t2)
      this._cursorPos = t1 + 1;
    t1 = $.get$InputHandler_m_KeyData().KeyState;
    t2 = C.GwenKey_6.value;
    if (t2 < 0 || t2 >= t1.length)
      throw H.ioore(t1, t2);
    if (t1[t2] !== true)
      this._cursorEnd = this._cursorPos;
    this.RefreshCursorBounds$0();
    return true;
  },
  OnKeyHome$1: function(down) {
    var t1, t2;
    X.GwenControlBase.prototype.OnKeyHome$1.call(this, down);
    if (!down)
      return true;
    this._cursorPos = 0;
    t1 = $.get$InputHandler_m_KeyData().KeyState;
    t2 = C.GwenKey_6.value;
    if (t2 < 0 || t2 >= t1.length)
      throw H.ioore(t1, t2);
    if (t1[t2] !== true)
      this._cursorEnd = this._cursorPos;
    this.RefreshCursorBounds$0();
    return true;
  },
  OnKeyEnd$1: function(down) {
    var t1, t2;
    X.GwenControlBase.prototype.OnKeyEnd$1.call(this, down);
    this._cursorPos = this._text._string.length;
    t1 = $.get$InputHandler_m_KeyData().KeyState;
    t2 = C.GwenKey_6.value;
    if (t2 < 0 || t2 >= t1.length)
      throw H.ioore(t1, t2);
    if (t1[t2] !== true)
      this._cursorEnd = this._cursorPos;
    this.RefreshCursorBounds$0();
    return true;
  },
  DeleteText$2: function(startPos, $length) {
    var t1;
    this.SetText$1(X.TextBox_removeFromString(X.Label.prototype.get$Text.call(this), startPos, $length));
    t1 = this._cursorPos;
    if (typeof t1 !== "number")
      throw t1.$gt();
    if (typeof startPos !== "number")
      throw H.iae(startPos);
    if (t1 > startPos)
      this.set$CursorPos(t1 - $length);
    this.set$CursorEnd(this._cursorPos);
  },
  EraseSelection$0: function() {
    var start = P.min(this._cursorPos, this._cursorEnd);
    this.DeleteText$2(start, P.max(this._cursorPos, this._cursorEnd) - start);
    this._cursorPos = start;
    this._cursorEnd = start;
  },
  OnMouseClickedLeft$3: function(x, y, down) {
    var c, t1, t2;
    X.GwenControlBase.prototype.OnMouseClickedLeft$3.call(this, x, y, down);
    if (this._selectAll) {
      $.get$GwenEventArgs_Empty();
      this._cursorEnd = 0;
      this._cursorPos = this._text._string.length;
      this.RefreshCursorBounds$0();
      return;
    }
    c = this.GetClosestCharacter$2(x, y).x;
    if (down) {
      this.set$CursorPos(c);
      t1 = $.get$InputHandler_m_KeyData().KeyState;
      t2 = C.GwenKey_6.value;
      if (t2 < 0 || t2 >= t1.length)
        throw H.ioore(t1, t2);
      if (t1[t2] !== true)
        this.set$CursorEnd(c);
      $.InputHandler_MouseFocus = this;
    } else if ($.InputHandler_MouseFocus === this) {
      this.set$CursorPos(c);
      $.InputHandler_MouseFocus = null;
    }
  },
  OnMouseMoved$4: function(x, y, dx, dy) {
    X.GwenControlBase.prototype.OnMouseMoved$4.call(this, x, y, dx, dy);
    if ($.InputHandler_MouseFocus !== this)
      return;
    this.set$CursorPos(this.GetClosestCharacter$2(x, y).x);
  },
  MakeCaretVisible$0: function() {
    var t1, t2, caretPos, realCaretPos, idealx;
    t1 = this.GetCharacterPosition$1(this._cursorPos).x;
    t2 = this._text.m_Bounds.left;
    if (typeof t1 !== "number")
      throw t1.$sub();
    if (typeof t2 !== "number")
      throw H.iae(t2);
    caretPos = t1 - t2;
    realCaretPos = caretPos + t2;
    t1 = J.$mul$n(this.m_Bounds.width, 0.1);
    if (typeof t1 !== "number")
      throw H.iae(t1);
    if (realCaretPos > t1) {
      t1 = J.$mul$n(this.m_Bounds.width, 0.9);
      if (typeof t1 !== "number")
        throw H.iae(t1);
      t1 = realCaretPos < t1;
    } else
      t1 = false;
    if (t1)
      return;
    t1 = J.$mul$n(this.m_Bounds.width, 0.5);
    if (typeof t1 !== "number")
      throw H.iae(t1);
    idealx = C.JSNumber_methods.toInt$0(-caretPos + t1);
    t1 = this._text.m_Bounds.width;
    if (typeof t1 !== "number")
      throw H.iae(t1);
    t2 = J.$sub$n(this.m_Bounds.width, this.get$TextPadding().Right);
    if (typeof t2 !== "number")
      throw H.iae(t2);
    if (idealx + t1 < t2)
      idealx = J.$add$ns(J.$negate$n(this._text.m_Bounds.width), J.$sub$n(this.m_Bounds.width, this.get$TextPadding().Right));
    t1 = this.get$TextPadding().Left;
    if (typeof idealx !== "number")
      throw idealx.$gt();
    if (idealx > t1)
      idealx = this.get$TextPadding().Left;
    t1 = this._text;
    t2 = t1.m_Bounds;
    t1.SetBounds$4(idealx, t2.top, t2.width, t2.height);
  },
  Layout$1: function(skin) {
    X.Label.prototype.Layout$1.call(this, skin);
    this.RefreshCursorBounds$0();
  },
  OnReturn$0: function() {
    this.SubmitPressed.Invoke$2(this, $.get$GwenEventArgs_Empty());
  },
  TextBox$1: function($parent) {
    var t1;
    this._autoSizeToContents = false;
    this.m_NeedsLayout = true;
    this.m_CacheTextureDirty = true;
    t1 = this.m_Bounds;
    this.SetBounds$4(t1.left, t1.top, 200, 20);
    this.m_MouseInputEnabled = true;
    this.m_KeyboardInputEnabled = true;
    this._align = new X.Pos((C.Pos_2.value | C.Pos_32.value) >>> 0);
    this.m_NeedsLayout = true;
    this.m_CacheTextureDirty = true;
    this._textPadding = new X.GwenPadding(2, 2, 4, 4);
    this.m_NeedsLayout = true;
    this.m_CacheTextureDirty = true;
    t1 = this.m_Parent;
    if (t1 != null) {
      t1.m_NeedsLayout = true;
      t1.m_CacheTextureDirty = true;
    }
    this._cursorPos = 0;
    this._cursorEnd = 0;
    t1 = new X.Color(null, null, null, null);
    t1.a = 255;
    t1.r = 50;
    t1.g = 50;
    t1.b = 50;
    this._text.TextColor = t1;
    this.m_Tabable = true;
  },
  static: {
TextBox$: function($parent) {
  var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13;
  t1 = new P.Rectangle(0, 0, 0, 0);
  H.setRuntimeTypeInfo(t1, [null]);
  t2 = new P.Rectangle(0, 0, 0, 0);
  H.setRuntimeTypeInfo(t2, [null]);
  t3 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t3, [X.GwenEventHandler]);
  t4 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t4, [X.GwenEventHandler]);
  t5 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t5, [X.GwenEventHandler]);
  t6 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t6, [X.GwenEventHandler]);
  t7 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t7, [X.GwenEventHandler]);
  t8 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t8, [X.GwenEventHandler]);
  t9 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t9, [X.GwenEventHandler]);
  t10 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t10, [X.GwenEventHandler]);
  t11 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t11, [X.GwenEventHandler]);
  t12 = new P.Point(1, 1);
  H.setRuntimeTypeInfo(t12, [J.JSInt]);
  t13 = new P.Point(4096, 4096);
  H.setRuntimeTypeInfo(t13, [J.JSInt]);
  t13 = new X.TextBox(false, 0, 0, t1, t2, 0, new X.GwenEventHandlerList(t3, null, null), new X.GwenEventHandlerList(t4, null, null), null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, new X.GwenEventHandlerList(t5, null, null), new X.GwenEventHandlerList(t6, null, null), new X.GwenEventHandlerList(t7, null, null), new X.GwenEventHandlerList(t8, null, null), new X.GwenEventHandlerList(t9, null, null), new X.GwenEventHandlerList(t10, null, null), new X.GwenEventHandlerList(t11, null, null), null, t12, t13, null, null, null);
  t13.GwenControlBase$1($parent);
  t13.Label$1($parent);
  t13.TextBox$1($parent);
  return t13;
},

TextBox_insertIntoString: function(orig, pos, strToInsert) {
  var t1;
  if (typeof pos !== "number")
    throw H.iae(pos);
  if (0 >= pos)
    return C.JSString_methods.$add(strToInsert, orig);
  t1 = orig.length;
  if (pos >= t1)
    return J.$add$ns(orig, strToInsert);
  return J.getInterceptor$s(orig).substring$2(orig, 0, pos) + strToInsert + C.JSString_methods.substring$2(orig, pos, t1);
},

TextBox_removeFromString: function(orig, startPos, $length) {
  var t1, t2;
  if ($length <= 0)
    return orig;
  t1 = orig.length;
  if (typeof startPos !== "number")
    throw startPos.$ge();
  if (startPos >= t1)
    return orig;
  if (startPos <= 0)
    return J.substring$1$s(orig, $length);
  t2 = startPos + $length;
  if (t2 >= t1)
    return J.substring$1$s(orig, startPos);
  return J.getInterceptor$s(orig).substring$2(orig, 0, startPos) + C.JSString_methods.substring$1(orig, t2);
}}

},

WindowControl: {"": "ResizableControl;_titleBar,_title,_closeButton,DeleteOnClose,_modal,ClampMovement,_resizer,Resized,_onResizeHandler,m_Disposed,m_Parent,m_ActualParent,m_InnerPanel,m_ToolTip,m_Skin,m_Bounds,m_RenderBounds,m_InnerBounds,m_Padding,m_Margin,m_Name,m_RestrictToParent,m_Disabled,m_Hidden,m_MouseInputEnabled,m_KeyboardInputEnabled,m_DrawBackground,m_Dock,m_Cursor,m_Tabable,m_NeedsLayout,m_CacheTextureDirty,m_CacheToTexture,m_DragAndDrop_Package,m_UserData,m_DrawDebugOutlines,m_Children,HoverEnter,HoverLeave,BoundsChanged,Clicked,DoubleClicked,RightClicked,DoubleRightClicked,m_Accelerators,m_MinimumSize,m_MaximumSize,PaddingOutlineColor,MarginOutlineColor,BoundsOutlineColor",
  get$IsHidden: function() {
    return X.GwenControlBase.prototype.get$IsHidden.call(this);
  },
  MakeModal$1: function(dim) {
    var t1;
    if (this._modal != null)
      return;
    this._modal = X.Modal$(this.GetCanvas$0());
    this.set$Parent(this._modal);
    t1 = this._modal;
    if (dim)
      t1.m_DrawBackground = true;
    else
      t1.m_DrawBackground = false;
  },
  MakeModal$0: function() {
    return this.MakeModal$1(false);
  },
  Render$1: function(skin) {
    var t1, hasFocus, t2;
    t1 = this.m_Parent.m_Children;
    if (0 >= t1.length)
      throw H.ioore(t1, 0);
    hasFocus = this === t1[0];
    t1 = this._title;
    if (hasFocus) {
      t2 = this.get$Skin().SkinColors.m_Window.TitleActive;
      t1._text.TextColor = t2;
    } else {
      t2 = this.get$Skin().SkinColors.m_Window.TitleInactive;
      t1._text.TextColor = t2;
    }
    t1 = this._titleBar;
    t2 = t1.m_Bounds;
    skin.DrawWindow$3(this, J.$add$ns(J.$add$ns(t2.top, t2.height), t1.m_Margin.Bottom), hasFocus);
  },
  RenderUnder$1: function(skin) {
    X.GwenControlBase.prototype.RenderUnder$1.call(this, skin);
    skin.DrawShadow$1(this);
  },
  Touch$0: function() {
    X.GwenControlBase.prototype.Touch$0.call(this);
    this.BringToFront$0();
  },
  RenderFocus$1: function(skin) {
  },
  WindowControl$3: function($parent, title, modal) {
    var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15;
    this._titleBar = X.Dragger$(this);
    t1 = this._titleBar;
    t2 = t1.m_Bounds;
    t3 = t2.width;
    t1.SetBounds$4(t2.left, t2.top, t3, 24);
    this._titleBar.set$Padding($.get$GwenPadding_Zero());
    this._titleBar.set$Margin(new X.GwenMargin(0, 4, 0, 0));
    this._titleBar._base = this;
    this._titleBar.set$Dock(C.Pos_8);
    this._title = X.Label$(this._titleBar);
    t3 = this._title;
    t3._align = new X.Pos((C.Pos_2.value | C.Pos_32.value) >>> 0);
    t3.m_NeedsLayout = true;
    t3.m_CacheTextureDirty = true;
    this._title.SetText$1(title);
    this._title.set$Dock(C.Pos_128);
    this._title.set$Padding(new X.GwenPadding(4, 0, 8, 0));
    t3 = this._title;
    t2 = this.get$Skin().SkinColors.m_Window.TitleInactive;
    t3._text.TextColor = t2;
    t2 = this._title;
    t2._autoSizeToContents = false;
    t2.m_NeedsLayout = true;
    t2.m_CacheTextureDirty = true;
    t2 = this._titleBar;
    t3 = P.List_List(null, X.GwenEventHandler);
    H.setRuntimeTypeInfo(t3, [X.GwenEventHandler]);
    t1 = P.List_List(null, X.GwenEventHandler);
    H.setRuntimeTypeInfo(t1, [X.GwenEventHandler]);
    t4 = P.List_List(null, X.GwenEventHandler);
    H.setRuntimeTypeInfo(t4, [X.GwenEventHandler]);
    t5 = P.List_List(null, X.GwenEventHandler);
    H.setRuntimeTypeInfo(t5, [X.GwenEventHandler]);
    t6 = P.List_List(null, X.GwenEventHandler);
    H.setRuntimeTypeInfo(t6, [X.GwenEventHandler]);
    t7 = P.List_List(null, X.GwenEventHandler);
    H.setRuntimeTypeInfo(t7, [X.GwenEventHandler]);
    t8 = P.List_List(null, X.GwenEventHandler);
    H.setRuntimeTypeInfo(t8, [X.GwenEventHandler]);
    t9 = P.List_List(null, X.GwenEventHandler);
    H.setRuntimeTypeInfo(t9, [X.GwenEventHandler]);
    t10 = P.List_List(null, X.GwenEventHandler);
    H.setRuntimeTypeInfo(t10, [X.GwenEventHandler]);
    t11 = P.List_List(null, X.GwenEventHandler);
    H.setRuntimeTypeInfo(t11, [X.GwenEventHandler]);
    t12 = P.List_List(null, X.GwenEventHandler);
    H.setRuntimeTypeInfo(t12, [X.GwenEventHandler]);
    t13 = P.List_List(null, X.GwenEventHandler);
    H.setRuntimeTypeInfo(t13, [X.GwenEventHandler]);
    t14 = new P.Point(1, 1);
    H.setRuntimeTypeInfo(t14, [J.JSInt]);
    t15 = new P.Point(4096, 4096);
    H.setRuntimeTypeInfo(t15, [J.JSInt]);
    t15 = new X.CloseButton(this, false, false, false, false, null, new X.GwenEventHandlerList(t3, null, null), new X.GwenEventHandlerList(t1, null, null), new X.GwenEventHandlerList(t4, null, null), new X.GwenEventHandlerList(t5, null, null), new X.GwenEventHandlerList(t6, null, null), null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, new X.GwenEventHandlerList(t7, null, null), new X.GwenEventHandlerList(t8, null, null), new X.GwenEventHandlerList(t9, null, null), new X.GwenEventHandlerList(t10, null, null), new X.GwenEventHandlerList(t11, null, null), new X.GwenEventHandlerList(t12, null, null), new X.GwenEventHandlerList(t13, null, null), null, t14, t15, null, null, null);
    t15.GwenControlBase$1(t2);
    t15.Label$1(t2);
    t15.Button$1(t2);
    this._closeButton = t15;
    t15 = this._closeButton;
    t2 = t15.m_Bounds;
    t15.SetBounds$4(t2.left, t2.top, 24, 24);
    this._closeButton.set$Dock(C.Pos_4);
    this._closeButton.Clicked;
    this.m_InnerPanel = X.GwenControlBase$(this);
    this.m_InnerPanel.set$Dock(C.Pos_128);
    this._resizer[8].set$IsHidden(true);
    this.BringToFront$0();
    this.m_Tabable = false;
    this.Focus$0();
    t2 = new P.Point(100, 40);
    H.setRuntimeTypeInfo(t2, [null]);
    this.set$MinimumSize(t2);
    this.ClampMovement = true;
    this.m_KeyboardInputEnabled = false;
    if (modal)
      this.MakeModal$0();
  },
  static: {
WindowControl$: function($parent, title, modal) {
  var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11;
  t1 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t1, [X.GwenEventHandler]);
  t2 = P.List_List(10, X.Resizer);
  H.setRuntimeTypeInfo(t2, [X.Resizer]);
  t3 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t3, [X.GwenEventHandler]);
  t4 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t4, [X.GwenEventHandler]);
  t5 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t5, [X.GwenEventHandler]);
  t6 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t6, [X.GwenEventHandler]);
  t7 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t7, [X.GwenEventHandler]);
  t8 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t8, [X.GwenEventHandler]);
  t9 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t9, [X.GwenEventHandler]);
  t10 = new P.Point(1, 1);
  H.setRuntimeTypeInfo(t10, [J.JSInt]);
  t11 = new P.Point(4096, 4096);
  H.setRuntimeTypeInfo(t11, [J.JSInt]);
  t11 = new X.WindowControl(null, null, null, null, null, null, t2, new X.GwenEventHandlerList(t1, null, null), null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, new X.GwenEventHandlerList(t3, null, null), new X.GwenEventHandlerList(t4, null, null), new X.GwenEventHandlerList(t5, null, null), new X.GwenEventHandlerList(t6, null, null), new X.GwenEventHandlerList(t7, null, null), new X.GwenEventHandlerList(t8, null, null), new X.GwenEventHandlerList(t9, null, null), null, t10, t11, null, null, null);
  t11.GwenControlBase$1($parent);
  t11.ResizableControl$1($parent);
  t11.WindowControl$3($parent, title, modal);
  return t11;
}}

}}],
["", "gwendart_test.dart", , A, {
main: function() {
  var renderer = X.CanvasRenderer$(document.querySelector("#drawHere"), document.querySelector("#skinTextureCanvas"), "DefaultSkin.png");
  renderer.preventBrowserKeyInterpretation$0();
  renderer.initialize$0().then$2$onError(new A.main_closure(renderer), new A.main_closure0());
},

main_closure: {"": "Closure;renderer_0",
  call$1: function(_) {
    var t1, grenderer, gcanvas, t2, t3, t4;
    t1 = this.renderer_0;
    grenderer = X.GwenRenderer$(t1);
    gcanvas = X.GwenControlCanvas$(X.GwenTexturedSkinBase$(grenderer, "DefaultSkin.png"));
    gcanvas.m_MouseInputEnabled = true;
    gcanvas.m_KeyboardInputEnabled = true;
    t2 = t1._textureCanvas;
    t3 = J.getInterceptor$x(t2);
    t4 = t3.get$width(t2);
    t2 = t3.get$height(t2);
    t3 = gcanvas.m_Bounds;
    gcanvas.SetBounds$4(t3.left, t3.top, t4, t2);
    gcanvas.m_DrawBackground = true;
    t2 = new X.Color(null, null, null, null);
    t2.a = 255;
    t2.r = 200;
    t2.g = 165;
    t2.b = 120;
    gcanvas._backgroundColor = t2;
    t2 = t1._textureCanvas;
    t4 = J.getInterceptor$x(t2);
    R.TestDockBase$(t1, gcanvas, t4.get$width(t2), t4.get$height(t2));
    grenderer.connectEventsToGwenCanvas$1(gcanvas);
    grenderer.notifyRedrawRequested$0();
    document.querySelector("#drawHere").focus();
  },
  $is_args1: true
},

main_closure0: {"": "Closure;",
  call$2: function(err, stacktrace) {
    P.print("Error in first render: " + H.S(err) + ", stacktrac: " + H.S(stacktrace));
  },
  $is_args2: true
}},
1],
["html_common", "dart:html_common", , P, {
convertNativeToDart_ImageData: function(nativeImageData) {
  var t1 = J.getInterceptor(nativeImageData);
  if (typeof nativeImageData === "object" && nativeImageData !== null && !!t1.$isImageData)
    return nativeImageData;
  return new P._TypedImageData(nativeImageData.data, nativeImageData.height, nativeImageData.width);
},

convertDartToNative_ImageData: function(imageData) {
  var t1 = J.getInterceptor(imageData);
  if (!!t1.$is_TypedImageData)
    return {data: imageData.data, height: imageData.height, width: imageData.width};
  return imageData;
},

_TypedImageData: {"": "Object;data>,height>,width>", $is_TypedImageData: true, $isImageData: true}}],
["", "testdockbase.dart", , R, {
TestDockBase: {"": "DockBase;_lastControl,Fps,Note,_testdockbase$_cvsr,_left,_right,_top,_bottom,_sizer,_dockedTabControl,_drawHover,_dropFar,_hoverRect,_dockBaseEventHandler,m_Disposed,m_Parent,m_ActualParent,m_InnerPanel,m_ToolTip,m_Skin,m_Bounds,m_RenderBounds,m_InnerBounds,m_Padding,m_Margin,m_Name,m_RestrictToParent,m_Disabled,m_Hidden,m_MouseInputEnabled,m_KeyboardInputEnabled,m_DrawBackground,m_Dock,m_Cursor,m_Tabable,m_NeedsLayout,m_CacheTextureDirty,m_CacheToTexture,m_DragAndDrop_Package,m_UserData,m_DrawDebugOutlines,m_Children,HoverEnter,HoverLeave,BoundsChanged,Clicked,DoubleClicked,RightClicked,DoubleRightClicked,m_Accelerators,m_MinimumSize,m_MaximumSize,PaddingOutlineColor,MarginOutlineColor,BoundsOutlineColor",
  TestDockBase$4: function(cvsr, $parent, width, height) {
    var t1, label, button, $window, textBox, ckbox, gb, radio;
    this.set$Dock(C.Pos_128);
    t1 = this.m_Bounds;
    this.SetBounds$4(t1.left, t1.top, width, height);
    label = X.Label$(this);
    t1 = label.m_Bounds;
    label.SetBounds$4(200, 50, t1.width, t1.height);
    label.SetText$1("Hello, Label!");
    button = X.Button$(this);
    t1 = button.m_Bounds;
    button.SetBounds$4(t1.left, t1.top, 24, 24);
    button.SetText$1("ok");
    t1 = button.m_Bounds;
    button.SetBounds$4(300, 10, t1.width, t1.height);
    button.m_MouseInputEnabled = true;
    button.m_KeyboardInputEnabled = true;
    $window = X.WindowControl$(this, "My Window", false);
    t1 = $window.m_Bounds;
    $window.SetBounds$4(t1.left, t1.top, 300, 400);
    t1 = $window.m_Bounds;
    $window.SetBounds$4(10, 15, t1.width, t1.height);
    textBox = X.TextBox$(this);
    textBox.SetText$1("Hello");
    textBox._autoSizeToContents = false;
    textBox.m_NeedsLayout = true;
    textBox.m_CacheTextureDirty = true;
    t1 = textBox.m_Bounds;
    textBox.SetBounds$4(13, 490, t1.width, t1.height);
    ckbox = X.LabeledCheckBox$(this);
    ckbox._label.SetText$1("Awesomeness");
    t1 = ckbox.m_Bounds;
    ckbox.SetBounds$4(12, 470, t1.width, t1.height);
    gb = X.GroupBox$(this);
    gb.SetText$1("Group Box!");
    gb.SetBounds$4(250, 350, 220, 150);
    radio = X.LabeledRadioButton$(this);
    radio._label.SetText$1("Radio Button!");
    t1 = radio.m_Bounds;
    radio.SetBounds$4(120, 440, t1.width, t1.height);
  },
  static: {
"": "TestDockBase_SkinImageFilename",
TestDockBase$: function(cvsr, $parent, width, height) {
  var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10;
  t1 = new P.Rectangle(0, 0, 0, 0);
  H.setRuntimeTypeInfo(t1, [null]);
  t2 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t2, [X.GwenEventHandler]);
  t3 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t3, [X.GwenEventHandler]);
  t4 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t4, [X.GwenEventHandler]);
  t5 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t5, [X.GwenEventHandler]);
  t6 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t6, [X.GwenEventHandler]);
  t7 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t7, [X.GwenEventHandler]);
  t8 = P.List_List(null, X.GwenEventHandler);
  H.setRuntimeTypeInfo(t8, [X.GwenEventHandler]);
  t9 = new P.Point(1, 1);
  H.setRuntimeTypeInfo(t9, [J.JSInt]);
  t10 = new P.Point(4096, 4096);
  H.setRuntimeTypeInfo(t10, [J.JSInt]);
  t10 = new R.TestDockBase(null, null, null, cvsr, null, null, null, null, null, null, false, false, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, new X.GwenEventHandlerList(t2, null, null), new X.GwenEventHandlerList(t3, null, null), new X.GwenEventHandlerList(t4, null, null), new X.GwenEventHandlerList(t5, null, null), new X.GwenEventHandlerList(t6, null, null), new X.GwenEventHandlerList(t7, null, null), new X.GwenEventHandlerList(t8, null, null), null, t9, t10, null, null, null);
  t10.GwenControlBase$1($parent);
  t10.DockBase$1($parent);
  t10.TestDockBase$4(cvsr, $parent, width, height);
  return t10;
}}

}}],
["vector_math", "package:vector_math/vector_math.dart", , T, {
setOrthographicMatrix: function(orthographicMatrix, left, right, bottom, $top, near, far) {
  var rml, tmb, fmn, t1;
  rml = right - left;
  tmb = $top - bottom;
  fmn = far - near;
  t1 = orthographicMatrix.setZero$0().storage;
  t1[0] = 2 / rml;
  t1[5] = 2 / tmb;
  t1[10] = -2 / fmn;
  t1[12] = -(right + left) / rml;
  t1[13] = -($top + bottom) / tmb;
  t1[14] = -(far + near) / fmn;
  t1[15] = 1;
},

Matrix4: {"": "Object;storage<",
  toString$0: function(_) {
    return "[0] " + H.S(this.getRow$1(0)) + "\n[1] " + H.S(this.getRow$1(1)) + "\n[2] " + H.S(this.getRow$1(2)) + "\n[3] " + H.S(this.getRow$1(3)) + "\n";
  },
  $index: function(_, i) {
    var t1 = this.storage;
    if (i >>> 0 !== i || i >= 16)
      throw H.ioore(t1, i);
    return t1[i];
  },
  $indexSet: function(_, i, v) {
    var t1 = this.storage;
    if (i >>> 0 !== i || i >= 16)
      throw H.ioore(t1, i);
    t1[i] = v;
  },
  getRow$1: function(row) {
    var t1, r, t2, t3;
    t1 = new Float32Array(4);
    t1.$dartCachedLength = t1.length;
    r = new T.Vector4(t1);
    t1 = r.storage;
    t2 = this.storage;
    t3 = 0 + row;
    if (t3 < 0 || t3 >= 16)
      throw H.ioore(t2, t3);
    t1[0] = t2[t3];
    t3 = 4 + row;
    if (t3 < 0 || t3 >= 16)
      throw H.ioore(t2, t3);
    t1[1] = t2[t3];
    t3 = 8 + row;
    if (t3 < 0 || t3 >= 16)
      throw H.ioore(t2, t3);
    t1[2] = t2[t3];
    t3 = 12 + row;
    if (t3 < 0 || t3 >= 16)
      throw H.ioore(t2, t3);
    t1[3] = t2[t3];
    return r;
  },
  _mul_scale$1: function(arg) {
    var t1, r, t2;
    t1 = new Float32Array(16);
    t1.$dartCachedLength = t1.length;
    r = new T.Matrix4(t1);
    t1 = r.storage;
    t2 = this.storage;
    t1[15] = t2[15] * arg;
    t1[14] = t2[14] * arg;
    t1[13] = t2[13] * arg;
    t1[12] = t2[12] * arg;
    t1[11] = t2[11] * arg;
    t1[10] = t2[10] * arg;
    t1[9] = t2[9] * arg;
    t1[8] = t2[8] * arg;
    t1[7] = t2[7] * arg;
    t1[6] = t2[6] * arg;
    t1[5] = t2[5] * arg;
    t1[4] = t2[4] * arg;
    t1[3] = t2[3] * arg;
    t1[2] = t2[2] * arg;
    t1[1] = t2[1] * arg;
    t1[0] = t2[0] * arg;
    return r;
  },
  $mul: function(_, arg) {
    if (typeof arg === "number")
      return this._mul_scale$1(arg);
    arg.get$dimension();
    throw H.wrapException(new P.ArgumentError(arg));
  },
  $add: function(_, arg) {
    var t1, r, t2, t3, t4;
    t1 = new Float32Array(16);
    t1.$dartCachedLength = t1.length;
    r = new T.Matrix4(t1);
    t1 = r.storage;
    t2 = this.storage;
    t3 = t2[0];
    t4 = arg.get$storage();
    if (0 >= C.JS_CONST_ZYJ(t4))
      throw H.ioore(t4, 0);
    t1[0] = t3 + t4[0];
    t4 = t2[1];
    t3 = arg.get$storage();
    if (1 >= C.JS_CONST_ZYJ(t3))
      throw H.ioore(t3, 1);
    t1[1] = t4 + t3[1];
    t3 = t2[2];
    t4 = arg.get$storage();
    if (2 >= C.JS_CONST_ZYJ(t4))
      throw H.ioore(t4, 2);
    t1[2] = t3 + t4[2];
    t4 = t2[3];
    t3 = arg.get$storage();
    if (3 >= C.JS_CONST_ZYJ(t3))
      throw H.ioore(t3, 3);
    t1[3] = t4 + t3[3];
    t3 = t2[4];
    t4 = arg.get$storage();
    if (4 >= C.JS_CONST_ZYJ(t4))
      throw H.ioore(t4, 4);
    t1[4] = t3 + t4[4];
    t4 = t2[5];
    t3 = arg.get$storage();
    if (5 >= C.JS_CONST_ZYJ(t3))
      throw H.ioore(t3, 5);
    t1[5] = t4 + t3[5];
    t3 = t2[6];
    t4 = arg.get$storage();
    if (6 >= C.JS_CONST_ZYJ(t4))
      throw H.ioore(t4, 6);
    t1[6] = t3 + t4[6];
    t4 = t2[7];
    t3 = arg.get$storage();
    if (7 >= C.JS_CONST_ZYJ(t3))
      throw H.ioore(t3, 7);
    t1[7] = t4 + t3[7];
    t3 = t2[8];
    t4 = arg.get$storage();
    if (8 >= C.JS_CONST_ZYJ(t4))
      throw H.ioore(t4, 8);
    t1[8] = t3 + t4[8];
    t4 = t2[9];
    t3 = arg.get$storage();
    if (9 >= C.JS_CONST_ZYJ(t3))
      throw H.ioore(t3, 9);
    t1[9] = t4 + t3[9];
    t3 = t2[10];
    t4 = arg.get$storage();
    if (10 >= C.JS_CONST_ZYJ(t4))
      throw H.ioore(t4, 10);
    t1[10] = t3 + t4[10];
    t4 = t2[11];
    t3 = arg.get$storage();
    if (11 >= C.JS_CONST_ZYJ(t3))
      throw H.ioore(t3, 11);
    t1[11] = t4 + t3[11];
    t3 = t2[12];
    t4 = arg.get$storage();
    if (12 >= C.JS_CONST_ZYJ(t4))
      throw H.ioore(t4, 12);
    t1[12] = t3 + t4[12];
    t4 = t2[13];
    t3 = arg.get$storage();
    if (13 >= C.JS_CONST_ZYJ(t3))
      throw H.ioore(t3, 13);
    t1[13] = t4 + t3[13];
    t3 = t2[14];
    t4 = arg.get$storage();
    if (14 >= C.JS_CONST_ZYJ(t4))
      throw H.ioore(t4, 14);
    t1[14] = t3 + t4[14];
    t2 = t2[15];
    t4 = arg.get$storage();
    if (15 >= C.JS_CONST_ZYJ(t4))
      throw H.ioore(t4, 15);
    t1[15] = t2 + t4[15];
    return r;
  },
  $sub: function(_, arg) {
    var t1, r, t2, t3, t4;
    t1 = new Float32Array(16);
    t1.$dartCachedLength = t1.length;
    r = new T.Matrix4(t1);
    t1 = r.storage;
    t2 = this.storage;
    t3 = t2[0];
    t4 = arg.get$storage();
    if (0 >= C.JS_CONST_ZYJ(t4))
      throw H.ioore(t4, 0);
    t1[0] = t3 - t4[0];
    t4 = t2[1];
    t3 = arg.get$storage();
    if (1 >= C.JS_CONST_ZYJ(t3))
      throw H.ioore(t3, 1);
    t1[1] = t4 - t3[1];
    t3 = t2[2];
    t4 = arg.get$storage();
    if (2 >= C.JS_CONST_ZYJ(t4))
      throw H.ioore(t4, 2);
    t1[2] = t3 - t4[2];
    t4 = t2[3];
    t3 = arg.get$storage();
    if (3 >= C.JS_CONST_ZYJ(t3))
      throw H.ioore(t3, 3);
    t1[3] = t4 - t3[3];
    t3 = t2[4];
    t4 = arg.get$storage();
    if (4 >= C.JS_CONST_ZYJ(t4))
      throw H.ioore(t4, 4);
    t1[4] = t3 - t4[4];
    t4 = t2[5];
    t3 = arg.get$storage();
    if (5 >= C.JS_CONST_ZYJ(t3))
      throw H.ioore(t3, 5);
    t1[5] = t4 - t3[5];
    t3 = t2[6];
    t4 = arg.get$storage();
    if (6 >= C.JS_CONST_ZYJ(t4))
      throw H.ioore(t4, 6);
    t1[6] = t3 - t4[6];
    t4 = t2[7];
    t3 = arg.get$storage();
    if (7 >= C.JS_CONST_ZYJ(t3))
      throw H.ioore(t3, 7);
    t1[7] = t4 - t3[7];
    t3 = t2[8];
    t4 = arg.get$storage();
    if (8 >= C.JS_CONST_ZYJ(t4))
      throw H.ioore(t4, 8);
    t1[8] = t3 - t4[8];
    t4 = t2[9];
    t3 = arg.get$storage();
    if (9 >= C.JS_CONST_ZYJ(t3))
      throw H.ioore(t3, 9);
    t1[9] = t4 - t3[9];
    t3 = t2[10];
    t4 = arg.get$storage();
    if (10 >= C.JS_CONST_ZYJ(t4))
      throw H.ioore(t4, 10);
    t1[10] = t3 - t4[10];
    t4 = t2[11];
    t3 = arg.get$storage();
    if (11 >= C.JS_CONST_ZYJ(t3))
      throw H.ioore(t3, 11);
    t1[11] = t4 - t3[11];
    t3 = t2[12];
    t4 = arg.get$storage();
    if (12 >= C.JS_CONST_ZYJ(t4))
      throw H.ioore(t4, 12);
    t1[12] = t3 - t4[12];
    t4 = t2[13];
    t3 = arg.get$storage();
    if (13 >= C.JS_CONST_ZYJ(t3))
      throw H.ioore(t3, 13);
    t1[13] = t4 - t3[13];
    t3 = t2[14];
    t4 = arg.get$storage();
    if (14 >= C.JS_CONST_ZYJ(t4))
      throw H.ioore(t4, 14);
    t1[14] = t3 - t4[14];
    t2 = t2[15];
    t4 = arg.get$storage();
    if (15 >= C.JS_CONST_ZYJ(t4))
      throw H.ioore(t4, 15);
    t1[15] = t2 - t4[15];
    return r;
  },
  translate$3: function(_, x, y, z) {
    var t1, tx, ty, tz, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17;
    t1 = x.storage;
    tx = t1[0];
    ty = t1[1];
    tz = t1[2];
    t1 = this.storage;
    t2 = t1[0];
    if (typeof tx !== "number")
      throw H.iae(tx);
    t3 = t1[4];
    t4 = t1[8];
    t5 = t1[12];
    t6 = t1[1];
    t7 = t1[5];
    t8 = t1[9];
    t9 = t1[13];
    t10 = t1[2];
    t11 = t1[6];
    t12 = t1[10];
    t13 = t1[14];
    t14 = t1[3];
    t15 = t1[7];
    t16 = t1[11];
    t17 = t1[15];
    t1[12] = t2 * tx + t3 * ty + t4 * tz + t5 * 1;
    t1[13] = t6 * tx + t7 * ty + t8 * tz + t9 * 1;
    t1[14] = t10 * tx + t11 * ty + t12 * tz + t13 * 1;
    t1[15] = t14 * tx + t15 * ty + t16 * tz + t17 * 1;
    return this;
  },
  translate$1: function($receiver, x) {
    return this.translate$3($receiver, x, 0, 0);
  },
  $negate: function(_) {
    var t1, r, t2;
    t1 = new Float32Array(16);
    t1.$dartCachedLength = t1.length;
    r = new T.Matrix4(t1);
    t1 = this.storage;
    t2 = r.storage;
    t2[0] = -t1[0];
    t2[1] = -t1[1];
    t2[2] = -t1[2];
    t2[3] = -t1[3];
    return r;
  },
  setZero$0: function() {
    var t1 = this.storage;
    t1[0] = 0;
    t1[1] = 0;
    t1[2] = 0;
    t1[3] = 0;
    t1[4] = 0;
    t1[5] = 0;
    t1[6] = 0;
    t1[7] = 0;
    t1[8] = 0;
    t1[9] = 0;
    t1[10] = 0;
    t1[11] = 0;
    t1[12] = 0;
    t1[13] = 0;
    t1[14] = 0;
    t1[15] = 0;
    return this;
  },
  setIdentity$0: function() {
    var t1 = this.storage;
    t1[0] = 1;
    t1[1] = 0;
    t1[2] = 0;
    t1[3] = 0;
    t1[4] = 0;
    t1[5] = 1;
    t1[6] = 0;
    t1[7] = 0;
    t1[8] = 0;
    t1[9] = 0;
    t1[10] = 1;
    t1[11] = 0;
    t1[12] = 0;
    t1[13] = 0;
    t1[14] = 0;
    t1[15] = 1;
    return this;
  },
  copyIntoArray$2: function(array, offset) {
    var t1, t2, t3;
    t1 = offset + 15;
    t2 = this.storage;
    t3 = t2[15];
    if (t1 < 0 || t1 >= 16)
      throw H.ioore(array, t1);
    array[t1] = t3;
    t3 = offset + 14;
    t1 = t2[14];
    if (t3 < 0 || t3 >= 16)
      throw H.ioore(array, t3);
    array[t3] = t1;
    t1 = offset + 13;
    t3 = t2[13];
    if (t1 < 0 || t1 >= 16)
      throw H.ioore(array, t1);
    array[t1] = t3;
    t3 = offset + 12;
    t1 = t2[12];
    if (t3 < 0 || t3 >= 16)
      throw H.ioore(array, t3);
    array[t3] = t1;
    t1 = offset + 11;
    t3 = t2[11];
    if (t1 < 0 || t1 >= 16)
      throw H.ioore(array, t1);
    array[t1] = t3;
    t3 = offset + 10;
    t1 = t2[10];
    if (t3 < 0 || t3 >= 16)
      throw H.ioore(array, t3);
    array[t3] = t1;
    t1 = offset + 9;
    t3 = t2[9];
    if (t1 < 0 || t1 >= 16)
      throw H.ioore(array, t1);
    array[t1] = t3;
    t3 = offset + 8;
    t1 = t2[8];
    if (t3 < 0 || t3 >= 16)
      throw H.ioore(array, t3);
    array[t3] = t1;
    t1 = offset + 7;
    t3 = t2[7];
    if (t1 < 0 || t1 >= 16)
      throw H.ioore(array, t1);
    array[t1] = t3;
    t3 = offset + 6;
    t1 = t2[6];
    if (t3 < 0 || t3 >= 16)
      throw H.ioore(array, t3);
    array[t3] = t1;
    t1 = offset + 5;
    t3 = t2[5];
    if (t1 < 0 || t1 >= 16)
      throw H.ioore(array, t1);
    array[t1] = t3;
    t3 = offset + 4;
    t1 = t2[4];
    if (t3 < 0 || t3 >= 16)
      throw H.ioore(array, t3);
    array[t3] = t1;
    t1 = offset + 3;
    t3 = t2[3];
    if (t1 < 0 || t1 >= 16)
      throw H.ioore(array, t1);
    array[t1] = t3;
    t3 = offset + 2;
    t1 = t2[2];
    if (t3 < 0 || t3 >= 16)
      throw H.ioore(array, t3);
    array[t3] = t1;
    t1 = offset + 1;
    t3 = t2[1];
    if (t1 < 0 || t1 >= 16)
      throw H.ioore(array, t1);
    array[t1] = t3;
    t3 = offset + 0;
    t2 = t2[0];
    if (t3 < 0 || t3 >= 16)
      throw H.ioore(array, t3);
    array[t3] = t2;
  },
  copyIntoArray$1: function(array) {
    return this.copyIntoArray$2(array, 0);
  }
},

Vector3: {"": "Object;storage<",
  setValues$3: function(x_, y_, z_) {
    var t1 = this.storage;
    t1[0] = x_;
    t1[1] = y_;
    t1[2] = z_;
    return this;
  },
  toString$0: function(_) {
    var t1 = this.storage;
    return "[" + H.S(t1[0]) + "," + H.S(t1[1]) + "," + H.S(t1[2]) + "]";
  },
  $negate: function(_) {
    var t1, t2, t3, t4;
    t1 = this.storage;
    t2 = t1[0];
    t3 = t1[1];
    t1 = t1[2];
    t4 = new Float32Array(3);
    t4.$dartCachedLength = t4.length;
    t4 = new T.Vector3(t4);
    t4.setValues$3(-t2, -t3, -t1);
    return t4;
  },
  $sub: function(_, other) {
    var t1, t2, t3, t4, t5, t6, t7;
    t1 = this.storage;
    t2 = t1[0];
    t3 = other.get$storage();
    t4 = C.JS_CONST_ZYJ(t3);
    if (0 >= t4)
      throw H.ioore(t3, 0);
    t5 = t3[0];
    t6 = t1[1];
    if (1 >= t4)
      throw H.ioore(t3, 1);
    t7 = t3[1];
    t1 = t1[2];
    if (2 >= t4)
      throw H.ioore(t3, 2);
    t3 = t3[2];
    t4 = new Float32Array(3);
    t4.$dartCachedLength = t4.length;
    t4 = new T.Vector3(t4);
    t4.setValues$3(t2 - t5, t6 - t7, t1 - t3);
    return t4;
  },
  $add: function(_, other) {
    var t1, t2, t3, t4, t5, t6, t7;
    t1 = this.storage;
    t2 = t1[0];
    t3 = other.get$storage();
    t4 = C.JS_CONST_ZYJ(t3);
    if (0 >= t4)
      throw H.ioore(t3, 0);
    t5 = t3[0];
    t6 = t1[1];
    if (1 >= t4)
      throw H.ioore(t3, 1);
    t7 = t3[1];
    t1 = t1[2];
    if (2 >= t4)
      throw H.ioore(t3, 2);
    t3 = t3[2];
    t4 = new Float32Array(3);
    t4.$dartCachedLength = t4.length;
    t4 = new T.Vector3(t4);
    t4.setValues$3(t2 + t5, t6 + t7, t1 + t3);
    return t4;
  },
  $div: function(_, scale) {
    var o, t1, t2, t3, t4;
    o = 1 / scale;
    t1 = this.storage;
    t2 = t1[0];
    t3 = t1[1];
    t1 = t1[2];
    t4 = new Float32Array(3);
    t4.$dartCachedLength = t4.length;
    t4 = new T.Vector3(t4);
    t4.setValues$3(t2 * o, t3 * o, t1 * o);
    return t4;
  },
  $mul: function(_, scale) {
    var t1, t2, t3, t4;
    t1 = this.storage;
    t2 = t1[0];
    if (typeof scale !== "number")
      throw H.iae(scale);
    t3 = t1[1];
    t1 = t1[2];
    t4 = new Float32Array(3);
    t4.$dartCachedLength = t4.length;
    t4 = new T.Vector3(t4);
    t4.setValues$3(t2 * scale, t3 * scale, t1 * scale);
    return t4;
  },
  $index: function(_, i) {
    var t1 = this.storage;
    if (i >>> 0 !== i || i >= 3)
      throw H.ioore(t1, i);
    return t1[i];
  },
  $indexSet: function(_, i, v) {
    var t1 = this.storage;
    if (i >>> 0 !== i || i >= 3)
      throw H.ioore(t1, i);
    t1[i] = v;
  },
  get$length: function(_) {
    var t1, t2, t3;
    t1 = this.storage;
    t2 = t1[0];
    t3 = t1[1];
    t1 = t1[2];
    return Math.sqrt(t2 * t2 + t3 * t3 + t1 * t1);
  },
  get$x: function(_) {
    return this.storage[0];
  },
  get$y: function(_) {
    return this.storage[1];
  }
},

Vector4: {"": "Object;storage<",
  setValues$4: function(x_, y_, z_, w_) {
    var t1 = this.storage;
    t1[3] = w_;
    t1[2] = z_;
    t1[1] = y_;
    t1[0] = x_;
    return this;
  },
  toString$0: function(_) {
    var t1 = this.storage;
    return H.S(t1[0]) + "," + H.S(t1[1]) + "," + H.S(t1[2]) + "," + H.S(t1[3]);
  },
  $negate: function(_) {
    var t1, t2, t3, t4, t5;
    t1 = this.storage;
    t2 = t1[0];
    t3 = t1[1];
    t4 = t1[2];
    t1 = t1[3];
    t5 = new Float32Array(4);
    t5.$dartCachedLength = t5.length;
    t5 = new T.Vector4(t5);
    t5.setValues$4(-t2, -t3, -t4, -t1);
    return t5;
  },
  $sub: function(_, other) {
    var t1, t2, t3, t4, t5, t6, t7, t8, t9;
    t1 = this.storage;
    t2 = t1[0];
    t3 = other.get$storage();
    t4 = C.JS_CONST_ZYJ(t3);
    if (0 >= t4)
      throw H.ioore(t3, 0);
    t5 = t3[0];
    t6 = t1[1];
    if (1 >= t4)
      throw H.ioore(t3, 1);
    t7 = t3[1];
    t8 = t1[2];
    if (2 >= t4)
      throw H.ioore(t3, 2);
    t9 = t3[2];
    t1 = t1[3];
    if (3 >= t4)
      throw H.ioore(t3, 3);
    t3 = t3[3];
    t4 = new Float32Array(4);
    t4.$dartCachedLength = t4.length;
    t4 = new T.Vector4(t4);
    t4.setValues$4(t2 - t5, t6 - t7, t8 - t9, t1 - t3);
    return t4;
  },
  $add: function(_, other) {
    var t1, t2, t3, t4, t5, t6, t7, t8, t9;
    t1 = this.storage;
    t2 = t1[0];
    t3 = other.get$storage();
    t4 = C.JS_CONST_ZYJ(t3);
    if (0 >= t4)
      throw H.ioore(t3, 0);
    t5 = t3[0];
    t6 = t1[1];
    if (1 >= t4)
      throw H.ioore(t3, 1);
    t7 = t3[1];
    t8 = t1[2];
    if (2 >= t4)
      throw H.ioore(t3, 2);
    t9 = t3[2];
    t1 = t1[3];
    if (3 >= t4)
      throw H.ioore(t3, 3);
    t3 = t3[3];
    t4 = new Float32Array(4);
    t4.$dartCachedLength = t4.length;
    t4 = new T.Vector4(t4);
    t4.setValues$4(t2 + t5, t6 + t7, t8 + t9, t1 + t3);
    return t4;
  },
  $div: function(_, scale) {
    var o, t1, t2, t3, t4, t5;
    o = 1 / scale;
    t1 = this.storage;
    t2 = t1[0];
    t3 = t1[1];
    t4 = t1[2];
    t1 = t1[3];
    t5 = new Float32Array(4);
    t5.$dartCachedLength = t5.length;
    t5 = new T.Vector4(t5);
    t5.setValues$4(t2 * o, t3 * o, t4 * o, t1 * o);
    return t5;
  },
  $mul: function(_, scale) {
    var t1, t2, t3, t4, t5;
    t1 = this.storage;
    t2 = t1[0];
    if (typeof scale !== "number")
      throw H.iae(scale);
    t3 = t1[1];
    t4 = t1[2];
    t1 = t1[3];
    t5 = new Float32Array(4);
    t5.$dartCachedLength = t5.length;
    t5 = new T.Vector4(t5);
    t5.setValues$4(t2 * scale, t3 * scale, t4 * scale, t1 * scale);
    return t5;
  },
  $index: function(_, i) {
    var t1 = this.storage;
    if (i >>> 0 !== i || i >= 4)
      throw H.ioore(t1, i);
    return t1[i];
  },
  $indexSet: function(_, i, v) {
    var t1 = this.storage;
    if (i >>> 0 !== i || i >= 4)
      throw H.ioore(t1, i);
    t1[i] = v;
  },
  get$length: function(_) {
    var t1, t2, t3, t4;
    t1 = this.storage;
    t2 = t1[0];
    t3 = t1[1];
    t4 = t1[2];
    t1 = t1[3];
    return Math.sqrt(t2 * t2 + t3 * t3 + t4 * t4 + t1 * t1);
  },
  get$x: function(_) {
    return this.storage[0];
  },
  get$y: function(_) {
    return this.storage[1];
  }
}}],
]);
Isolate.$finishClasses($$, $, null);
$$ = null;

// Static function getters
init.globalFunctions.IsolateNatives__processWorkerMessage$closure = H.IsolateNatives__processWorkerMessage$closure = new H.Closure$2(H.IsolateNatives__processWorkerMessage, "IsolateNatives__processWorkerMessage$closure");
init.globalFunctions.toStringWrapper$closure = H.toStringWrapper$closure = new H.Closure$0(H.toStringWrapper, "toStringWrapper$closure");
init.globalFunctions.invokeClosure$closure = H.invokeClosure$closure = new H.Closure$7(H.invokeClosure, "invokeClosure$closure");
init.globalFunctions._asyncRunCallback$closure = P._asyncRunCallback$closure = new H.Closure$0(P._asyncRunCallback, "_asyncRunCallback$closure");
init.globalFunctions._nullDataHandler$closure = P._nullDataHandler$closure = new P.Closure$1(P._nullDataHandler, "_nullDataHandler$closure");
init.globalFunctions._nullErrorHandler$closure = P._nullErrorHandler$closure = new P.Closure$20(P._nullErrorHandler, "_nullErrorHandler$closure");
init.globalFunctions._nullDoneHandler$closure = P._nullDoneHandler$closure = new H.Closure$0(P._nullDoneHandler, "_nullDoneHandler$closure");
init.globalFunctions._defaultEquals$closure = P._defaultEquals$closure = new H.Closure$2(P._defaultEquals, "_defaultEquals$closure");
init.globalFunctions._defaultHashCode$closure = P._defaultHashCode$closure = new P.Closure$1(P._defaultHashCode, "_defaultHashCode$closure");
init.globalFunctions.identical$closure = P.identical$closure = new H.Closure$2(P.identical, "identical$closure");
init.globalFunctions.identityHashCode$closure = P.identityHashCode$closure = new P.Closure$1(P.identityHashCode, "identityHashCode$closure");
init.globalFunctions.main$closure = A.main$closure = new H.Closure$0(A.main, "main$closure");
// Runtime type support
J.JSDouble.$isdouble = true;
J.JSDouble.$isObject = true;
J.JSInt.$isint = true;
J.JSInt.$isObject = true;
J.JSString.$isString = true;
J.JSString.$isObject = true;
J.JSNumber.$isObject = true;
P.Duration.$isObject = true;
J.JSArray.$isObject = true;
X.Color.$isObject = true;
X.RenderRequest.$isRenderRequest = true;
X.RenderRequest.$isObject = true;
J.JSBool.$isbool = true;
J.JSBool.$isObject = true;
W.MouseEvent.$isMouseEvent = true;
W.MouseEvent.$isObject = true;
W.KeyboardEvent.$isKeyboardEvent = true;
W.KeyboardEvent.$isObject = true;
X.GwenEventHandler.$isObject = true;
X.GwenControlBase.$isGwenControlBase = true;
X.GwenControlBase.$isObject = true;
X.Resizer.$isGwenControlBase = true;
X.Resizer.$isObject = true;
X.Bordered.$isObject = true;
X.SubRect.$isObject = true;
W.Event.$isObject = true;
P.DateTime.$isObject = true;
P.Object.$isObject = true;
W.ImageElement.$isObject = true;
P.Future.$isFuture = true;
P.Future.$isObject = true;
P.ReceivePort.$isObject = true;
H._IsolateEvent.$isObject = true;
H._IsolateContext.$isObject = true;
P.Symbol.$isSymbol = true;
P.Symbol.$isObject = true;
P.StackTrace.$isStackTrace = true;
P.StackTrace.$isObject = true;
P.Function.$isFunction = true;
P.Function.$isObject = true;
P._EventSink.$is_EventSink = true;
P._EventSink.$isObject = true;
P.StreamSubscription.$isStreamSubscription = true;
P.StreamSubscription.$isObject = true;
// getInterceptor methods
J.getInterceptor = function(receiver) {
  if (typeof receiver == "number") {
    if (Math.floor(receiver) == receiver)
      return J.JSInt.prototype;
    return J.JSDouble.prototype;
  }
  if (typeof receiver == "string")
    return J.JSString.prototype;
  if (receiver == null)
    return J.JSNull.prototype;
  if (typeof receiver == "boolean")
    return J.JSBool.prototype;
  if (receiver.constructor == Array)
    return J.JSArray.prototype;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof P.Object)
    return receiver;
  return J.getNativeInterceptor(receiver);
};
J.getInterceptor$asx = function(receiver) {
  if (typeof receiver == "string")
    return J.JSString.prototype;
  if (receiver == null)
    return receiver;
  if (receiver.constructor == Array)
    return J.JSArray.prototype;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof P.Object)
    return receiver;
  return J.getNativeInterceptor(receiver);
};
J.getInterceptor$ax = function(receiver) {
  if (receiver == null)
    return receiver;
  if (receiver.constructor == Array)
    return J.JSArray.prototype;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof P.Object)
    return receiver;
  return J.getNativeInterceptor(receiver);
};
J.getInterceptor$n = function(receiver) {
  if (typeof receiver == "number")
    return J.JSNumber.prototype;
  if (receiver == null)
    return receiver;
  if (!(receiver instanceof P.Object))
    return J.UnknownJavaScriptObject.prototype;
  return receiver;
};
J.getInterceptor$ns = function(receiver) {
  if (typeof receiver == "number")
    return J.JSNumber.prototype;
  if (typeof receiver == "string")
    return J.JSString.prototype;
  if (receiver == null)
    return receiver;
  if (!(receiver instanceof P.Object))
    return J.UnknownJavaScriptObject.prototype;
  return receiver;
};
J.getInterceptor$s = function(receiver) {
  if (typeof receiver == "string")
    return J.JSString.prototype;
  if (receiver == null)
    return receiver;
  if (!(receiver instanceof P.Object))
    return J.UnknownJavaScriptObject.prototype;
  return receiver;
};
J.getInterceptor$x = function(receiver) {
  if (receiver == null)
    return receiver;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof P.Object)
    return receiver;
  return J.getNativeInterceptor(receiver);
};
C.C__DelayedDone = new P._DelayedDone();
C.C__RootZone = new P._RootZone();
C.CssCursor_I9i = new X.CssCursor("nwse-resize");
C.CssCursor_auto = new X.CssCursor("auto");
C.CssCursor_oyU = new X.CssCursor("nesw-resize");
C.CssCursor_sww = new X.CssCursor("ns-resize");
C.CssCursor_wp3 = new X.CssCursor("ew-resize");
C.Duration_0 = new P.Duration(0);
C.EventStreamProvider_error = new W.EventStreamProvider("error");
C.EventStreamProvider_keydown = new W.EventStreamProvider("keydown");
C.EventStreamProvider_keypress = new W.EventStreamProvider("keypress");
C.EventStreamProvider_keyup = new W.EventStreamProvider("keyup");
C.EventStreamProvider_load = new W.EventStreamProvider("load");
C.EventStreamProvider_mousedown = new W.EventStreamProvider("mousedown");
C.EventStreamProvider_mousemove = new W.EventStreamProvider("mousemove");
C.EventStreamProvider_mouseup = new W.EventStreamProvider("mouseup");
C.GwenKey_0 = new X.GwenKey(0);
C.GwenKey_1 = new X.GwenKey(1);
C.GwenKey_10 = new X.GwenKey(10);
C.GwenKey_11 = new X.GwenKey(11);
C.GwenKey_12 = new X.GwenKey(12);
C.GwenKey_13 = new X.GwenKey(13);
C.GwenKey_14 = new X.GwenKey(14);
C.GwenKey_15 = new X.GwenKey(15);
C.GwenKey_16 = new X.GwenKey(16);
C.GwenKey_2 = new X.GwenKey(2);
C.GwenKey_3 = new X.GwenKey(3);
C.GwenKey_4 = new X.GwenKey(4);
C.GwenKey_5 = new X.GwenKey(5);
C.GwenKey_6 = new X.GwenKey(6);
C.GwenKey_7 = new X.GwenKey(7);
C.GwenKey_8 = new X.GwenKey(8);
C.GwenKey_9 = new X.GwenKey(9);
C.JSArray_methods = J.JSArray.prototype;
C.JSDouble_methods = J.JSDouble.prototype;
C.JSInt_methods = J.JSInt.prototype;
C.JSNumber_methods = J.JSNumber.prototype;
C.JSString_methods = J.JSString.prototype;
C.JS_CONST_0 = function(hooks) {
  if (typeof dartExperimentalFixupGetTag != "function") return hooks;
  hooks.getTag = dartExperimentalFixupGetTag(hooks.getTag);
};
C.JS_CONST_6qb = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Firefox") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "GeoGeolocation": "Geolocation",
    "WorkerMessageEvent": "MessageEvent",
    "XMLDocument": "Document"};
  function getTagFirefox(o) {
    var tag = getTag(o);
    return quickMap[tag] || tag;
  }
  hooks.getTag = getTagFirefox;
};
C.JS_CONST_86y = function getTagFallback(o) {
  if (o == null) return "Null";
  var constructor = o.constructor;
  if (typeof constructor == "function") {
    var name = constructor.builtin$cls;
    if (typeof name == "string") return name;
    name = constructor.name;
    if (typeof name == "string"
        && name !== ""
        && name !== "Object"
        && name !== "Function.prototype") {
      return name;
    }
  }
  var s = Object.prototype.toString.call(o);
  return s.substring(8, s.length - 1);
};
C.JS_CONST_Cbr = function(getTagFallback) {
  return function(hooks) {
    if (typeof navigator != "object") return hooks;
    var userAgent = navigator.userAgent;
    if (userAgent.indexOf("Chrome") >= 0 ||
        userAgent.indexOf("DumpRenderTree") >= 0) {
      return hooks;
    }
    hooks.getTag = getTagFallback;
  };
};
C.JS_CONST_Fs4 = function(hooks) { return hooks; }
;
C.JS_CONST_TtD = function() {
  function typeNameInChrome(obj) { return obj.constructor.name; }
  function getUnknownTag(object, tag) {
    if (/^HTML[A-Z].*Element$/.test(tag)) {
      var name = Object.prototype.toString.call(object);
      if (name == "[object Object]") return null;
      return "HTMLElement";
    }
  }
  function getUnknownTagGenericBrowser(object, tag) {
    if (object instanceof HTMLElement) return "HTMLElement";
    return getUnknownTag(object, tag);
  }
  function prototypeForTag(tag) {
    if (typeof window == "undefined") return null;
    if (typeof window[tag] == "undefined") return null;
    var constructor = window[tag];
    if (typeof constructor != "function") return null;
    return constructor.prototype;
  }
  function discriminator(tag) { return null; }
  var isBrowser = typeof navigator == "object";
  return {
    getTag: typeNameInChrome,
    getUnknownTag: isBrowser ? getUnknownTagGenericBrowser : getUnknownTag,
    prototypeForTag: prototypeForTag,
    discriminator: discriminator };
};
C.JS_CONST_ZYJ =     ((typeof version == "function" && typeof os == "object" && "system" in os)
    || (typeof navigator == "object"
        && navigator.userAgent.indexOf('Chrome') != -1))
        ? function(x) { return x.$dartCachedLength || x.length; }
        : function(x) { return x.length; };
;
C.JS_CONST_rD3 = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Trident/") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "HTMLDDElement": "HTMLElement",
    "HTMLDTElement": "HTMLElement",
    "HTMLPhraseElement": "HTMLElement",
    "Position": "Geoposition"
  };
  function getTagIE(o) {
    var tag = getTag(o);
    var newTag = quickMap[tag];
    if (newTag) return newTag;
    if (tag == "Document") {
      if (!!o.xmlVersion) return "!Document";
      return "!HTMLDocument";
    }
    if (tag == "Object") {
      if (window.DataView && (o instanceof window.DataView)) return "DataView";
    }
    return tag;
  }
  function prototypeForTagIE(tag) {
    if (tag == "Document") return null;
    var constructor = window[tag];
    if (constructor == null) return null;
    return constructor.prototype;
  }
  hooks.getTag = getTagIE;
  hooks.prototypeForTag = prototypeForTagIE;
};
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
C.List_empty = Isolate.makeConstantList([]);
C.Pos_0 = new X.Pos(0);
C.Pos_128 = new X.Pos(128);
C.Pos_16 = new X.Pos(16);
C.Pos_2 = new X.Pos(2);
C.Pos_32 = new X.Pos(32);
C.Pos_4 = new X.Pos(4);
C.Pos_64 = new X.Pos(64);
C.Pos_8 = new X.Pos(8);
C.Pos_96 = new X.Pos(96);
C.Type_oqh = H.createRuntimeType('Uint64List');
C.Type_qxd = H.createRuntimeType('Int64List');
C.UnknownJavaScriptObject_methods = J.UnknownJavaScriptObject.prototype;
$.lazyPort = null;
$.ReceivePortImpl__nextFreeId = 1;
$.Primitives_mirrorFunctionCacheName = "$cachedFunction";
$.Primitives_mirrorInvokeCacheName = "$cachedInvocation";
$.getTagFunction = null;
$.alternateTagFunction = null;
$.prototypeForTagFunction = null;
$.dispatchRecordsForInstanceTags = null;
$.interceptorsForUncacheableTags = null;
$.initNativeDispatchFlag = null;
$.printToZone = null;
$._callbacksAreEnqueued = false;
$.Zone__current = C.C__RootZone;
$.Expando__keyCount = 0;
$.GwenRenderer_g_bShiftKeyDown = false;
$.InputHandler_HoveredControl = null;
$.InputHandler_KeyboardFocus = null;
$.InputHandler_MouseFocus = null;
$.InputHandler__lastClickTime = null;
$.Device__isOpera = null;
$.Device__isWebKit = null;
J.$add$ns = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver + a0;
  return J.getInterceptor$ns(receiver).$add(receiver, a0);
};
J.$div$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver / a0;
  return J.getInterceptor$n(receiver).$div(receiver, a0);
};
J.$eq = function(receiver, a0) {
  if (receiver == null)
    return a0 == null;
  if (typeof receiver != "object")
    return a0 != null && receiver === a0;
  return J.getInterceptor(receiver).$eq(receiver, a0);
};
J.$ge$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver >= a0;
  return J.getInterceptor$n(receiver).$ge(receiver, a0);
};
J.$gt$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver > a0;
  return J.getInterceptor$n(receiver).$gt(receiver, a0);
};
J.$index$asx = function(receiver, a0) {
  if (receiver.constructor == Array || typeof receiver == "string" || H.isJsIndexable(receiver, receiver[init.dispatchPropertyName]))
    if (a0 >>> 0 === a0 && a0 < receiver.length)
      return receiver[a0];
  return J.getInterceptor$asx(receiver).$index(receiver, a0);
};
J.$indexSet$ax = function(receiver, a0, a1) {
  if ((receiver.constructor == Array || H.isJsIndexable(receiver, receiver[init.dispatchPropertyName])) && !receiver.immutable$list && a0 >>> 0 === a0 && a0 < receiver.length)
    return receiver[a0] = a1;
  return J.getInterceptor$ax(receiver).$indexSet(receiver, a0, a1);
};
J.$lt$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver < a0;
  return J.getInterceptor$n(receiver).$lt(receiver, a0);
};
J.$mul$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver * a0;
  return J.getInterceptor$n(receiver).$mul(receiver, a0);
};
J.$negate$n = function(receiver) {
  if (typeof receiver == "number")
    return -receiver;
  return J.getInterceptor$n(receiver).$negate(receiver);
};
J.$sub$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver - a0;
  return J.getInterceptor$n(receiver).$sub(receiver, a0);
};
J.$tdiv$n = function(receiver, a0) {
  return J.getInterceptor$n(receiver).$tdiv(receiver, a0);
};
J.abs$0$n = function(receiver) {
  return J.getInterceptor$n(receiver).abs$0(receiver);
};
J.activeTexture$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).activeTexture$1(receiver, a0);
};
J.addEventListener$3$x = function(receiver, a0, a1, a2) {
  return J.getInterceptor$x(receiver).addEventListener$3(receiver, a0, a1, a2);
};
J.attachShader$2$x = function(receiver, a0, a1) {
  return J.getInterceptor$x(receiver).attachShader$2(receiver, a0, a1);
};
J.beginPath$0$x = function(receiver) {
  return J.getInterceptor$x(receiver).beginPath$0(receiver);
};
J.bindBuffer$2$x = function(receiver, a0, a1) {
  return J.getInterceptor$x(receiver).bindBuffer$2(receiver, a0, a1);
};
J.bindTexture$2$x = function(receiver, a0, a1) {
  return J.getInterceptor$x(receiver).bindTexture$2(receiver, a0, a1);
};
J.bufferDataTyped$3$x = function(receiver, a0, a1, a2) {
  return J.getInterceptor$x(receiver).bufferDataTyped$3(receiver, a0, a1, a2);
};
J.ceil$0$n = function(receiver) {
  return J.getInterceptor$n(receiver).ceil$0(receiver);
};
J.clear$1$ax = function(receiver, a0) {
  return J.getInterceptor$ax(receiver).clear$1(receiver, a0);
};
J.clearColor$4$x = function(receiver, a0, a1, a2, a3) {
  return J.getInterceptor$x(receiver).clearColor$4(receiver, a0, a1, a2, a3);
};
J.compileShader$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).compileShader$1(receiver, a0);
};
J.contains$1$asx = function(receiver, a0) {
  return J.getInterceptor$asx(receiver).contains$1(receiver, a0);
};
J.createBuffer$0$x = function(receiver) {
  return J.getInterceptor$x(receiver).createBuffer$0(receiver);
};
J.createProgram$0$x = function(receiver) {
  return J.getInterceptor$x(receiver).createProgram$0(receiver);
};
J.createShader$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).createShader$1(receiver, a0);
};
J.createTexture$0$x = function(receiver) {
  return J.getInterceptor$x(receiver).createTexture$0(receiver);
};
J.disableVertexAttribArray$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).disableVertexAttribArray$1(receiver, a0);
};
J.drawElements$4$x = function(receiver, a0, a1, a2, a3) {
  return J.getInterceptor$x(receiver).drawElements$4(receiver, a0, a1, a2, a3);
};
J.drawImage$3$x = function(receiver, a0, a1, a2) {
  return J.getInterceptor$x(receiver).drawImage$3(receiver, a0, a1, a2);
};
J.drawImageToRect$2$x = function(receiver, a0, a1) {
  return J.getInterceptor$x(receiver).drawImageToRect$2(receiver, a0, a1);
};
J.drawImageToRect$3$sourceRect$x = function(receiver, a0, a1, a2) {
  return J.getInterceptor$x(receiver).drawImageToRect$3$sourceRect(receiver, a0, a1, a2);
};
J.enable$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).enable$1(receiver, a0);
};
J.enableVertexAttribArray$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).enableVertexAttribArray$1(receiver, a0);
};
J.fillRect$4$x = function(receiver, a0, a1, a2, a3) {
  return J.getInterceptor$x(receiver).fillRect$4(receiver, a0, a1, a2, a3);
};
J.fillText$4$x = function(receiver, a0, a1, a2, a3) {
  return J.getInterceptor$x(receiver).fillText$4(receiver, a0, a1, a2, a3);
};
J.flush$0$x = function(receiver) {
  return J.getInterceptor$x(receiver).flush$0(receiver);
};
J.forEach$1$ax = function(receiver, a0) {
  return J.getInterceptor$ax(receiver).forEach$1(receiver, a0);
};
J.get$charCode$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$charCode(receiver);
};
J.get$error$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$error(receiver);
};
J.get$font$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$font(receiver);
};
J.get$hashCode$ = function(receiver) {
  return J.getInterceptor(receiver).get$hashCode(receiver);
};
J.get$iterator$ax = function(receiver) {
  return J.getInterceptor$ax(receiver).get$iterator(receiver);
};
J.get$keyCode$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$keyCode(receiver);
};
J.get$left$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$left(receiver);
};
J.get$length$asx = function(receiver) {
  return J.getInterceptor$asx(receiver).get$length(receiver);
};
J.get$onError$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$onError(receiver);
};
J.get$onLoad$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$onLoad(receiver);
};
J.get$shiftKey$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$shiftKey(receiver);
};
J.get$top$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$top(receiver);
};
J.get$value$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$value(receiver);
};
J.getAttribLocation$2$x = function(receiver, a0, a1) {
  return J.getInterceptor$x(receiver).getAttribLocation$2(receiver, a0, a1);
};
J.getContext$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).getContext$1(receiver, a0);
};
J.getImageData$4$x = function(receiver, a0, a1, a2, a3) {
  return J.getInterceptor$x(receiver).getImageData$4(receiver, a0, a1, a2, a3);
};
J.getProgramInfoLog$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).getProgramInfoLog$1(receiver, a0);
};
J.getProgramParameter$2$x = function(receiver, a0, a1) {
  return J.getInterceptor$x(receiver).getProgramParameter$2(receiver, a0, a1);
};
J.getShaderInfoLog$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).getShaderInfoLog$1(receiver, a0);
};
J.getShaderParameter$2$x = function(receiver, a0, a1) {
  return J.getInterceptor$x(receiver).getShaderParameter$2(receiver, a0, a1);
};
J.getUniformLocation$2$x = function(receiver, a0, a1) {
  return J.getInterceptor$x(receiver).getUniformLocation$2(receiver, a0, a1);
};
J.lineTo$2$x = function(receiver, a0, a1) {
  return J.getInterceptor$x(receiver).lineTo$2(receiver, a0, a1);
};
J.linkProgram$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).linkProgram$1(receiver, a0);
};
J.measureText$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).measureText$1(receiver, a0);
};
J.moveTo$2$x = function(receiver, a0, a1) {
  return J.getInterceptor$x(receiver).moveTo$2(receiver, a0, a1);
};
J.pixelStorei$2$x = function(receiver, a0, a1) {
  return J.getInterceptor$x(receiver).pixelStorei$2(receiver, a0, a1);
};
J.rect$4$x = function(receiver, a0, a1, a2, a3) {
  return J.getInterceptor$x(receiver).rect$4(receiver, a0, a1, a2, a3);
};
J.removeEventListener$3$x = function(receiver, a0, a1, a2) {
  return J.getInterceptor$x(receiver).removeEventListener$3(receiver, a0, a1, a2);
};
J.restore$0$x = function(receiver) {
  return J.getInterceptor$x(receiver).restore$0(receiver);
};
J.round$0$n = function(receiver) {
  return J.getInterceptor$n(receiver).round$0(receiver);
};
J.save$0$x = function(receiver) {
  return J.getInterceptor$x(receiver).save$0(receiver);
};
J.set$backgroundColor$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$backgroundColor(receiver, value);
};
J.set$color$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$color(receiver, value);
};
J.set$cursor$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$cursor(receiver, value);
};
J.set$fillStyle$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$fillStyle(receiver, value);
};
J.set$height$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$height(receiver, value);
};
J.set$src$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$src(receiver, value);
};
J.set$strokeStyle$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$strokeStyle(receiver, value);
};
J.set$textAlign$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$textAlign(receiver, value);
};
J.set$textBaseline$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$textBaseline(receiver, value);
};
J.set$width$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$width(receiver, value);
};
J.shaderSource$2$x = function(receiver, a0, a1) {
  return J.getInterceptor$x(receiver).shaderSource$2(receiver, a0, a1);
};
J.stroke$0$x = function(receiver) {
  return J.getInterceptor$x(receiver).stroke$0(receiver);
};
J.strokeRect$4$x = function(receiver, a0, a1, a2, a3) {
  return J.getInterceptor$x(receiver).strokeRect$4(receiver, a0, a1, a2, a3);
};
J.substring$1$s = function(receiver, a0) {
  return J.getInterceptor$s(receiver).substring$1(receiver, a0);
};
J.substring$2$s = function(receiver, a0, a1) {
  return J.getInterceptor$s(receiver).substring$2(receiver, a0, a1);
};
J.texImage2DImage$6$x = function(receiver, a0, a1, a2, a3, a4, a5) {
  return J.getInterceptor$x(receiver).texImage2DImage$6(receiver, a0, a1, a2, a3, a4, a5);
};
J.texParameteri$3$x = function(receiver, a0, a1, a2) {
  return J.getInterceptor$x(receiver).texParameteri$3(receiver, a0, a1, a2);
};
J.texSubImage2DImageData$7$x = function(receiver, a0, a1, a2, a3, a4, a5, a6) {
  return J.getInterceptor$x(receiver).texSubImage2DImageData$7(receiver, a0, a1, a2, a3, a4, a5, a6);
};
J.toDouble$0$n = function(receiver) {
  return J.getInterceptor$n(receiver).toDouble$0(receiver);
};
J.toInt$0$n = function(receiver) {
  return J.getInterceptor$n(receiver).toInt$0(receiver);
};
J.toString$0 = function(receiver) {
  return J.getInterceptor(receiver).toString$0(receiver);
};
J.uniform1i$2$x = function(receiver, a0, a1) {
  return J.getInterceptor$x(receiver).uniform1i$2(receiver, a0, a1);
};
J.uniformMatrix4fv$3$x = function(receiver, a0, a1, a2) {
  return J.getInterceptor$x(receiver).uniformMatrix4fv$3(receiver, a0, a1, a2);
};
J.useProgram$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).useProgram$1(receiver, a0);
};
J.vertexAttribPointer$6$x = function(receiver, a0, a1, a2, a3, a4, a5) {
  return J.getInterceptor$x(receiver).vertexAttribPointer$6(receiver, a0, a1, a2, a3, a4, a5);
};
J.viewport$4$x = function(receiver, a0, a1, a2, a3) {
  return J.getInterceptor$x(receiver).viewport$4(receiver, a0, a1, a2, a3);
};
Isolate.$lazy($, "globalThis", "globalThis", "get$globalThis", function() {
  return function() { return this; }();
});
Isolate.$lazy($, "globalWindow", "globalWindow", "get$globalWindow", function() {
  return $.get$globalThis().window;
});
Isolate.$lazy($, "globalWorker", "globalWorker", "get$globalWorker", function() {
  return $.get$globalThis().Worker;
});
Isolate.$lazy($, "globalPostMessageDefined", "globalPostMessageDefined", "get$globalPostMessageDefined", function() {
  return $.get$globalThis().postMessage !== void 0;
});
Isolate.$lazy($, "thisScript", "IsolateNatives_thisScript", "get$IsolateNatives_thisScript", function() {
  return H.IsolateNatives_computeThisScript();
});
Isolate.$lazy($, "workerIds", "IsolateNatives_workerIds", "get$IsolateNatives_workerIds", function() {
  return new P.Expando(null);
});
Isolate.$lazy($, "noSuchMethodPattern", "TypeErrorDecoder_noSuchMethodPattern", "get$TypeErrorDecoder_noSuchMethodPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn({ toString: function() { return "$receiver$"; } }));
});
Isolate.$lazy($, "notClosurePattern", "TypeErrorDecoder_notClosurePattern", "get$TypeErrorDecoder_notClosurePattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn({ $method$: null, toString: function() { return "$receiver$"; } }));
});
Isolate.$lazy($, "nullCallPattern", "TypeErrorDecoder_nullCallPattern", "get$TypeErrorDecoder_nullCallPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(null));
});
Isolate.$lazy($, "nullLiteralCallPattern", "TypeErrorDecoder_nullLiteralCallPattern", "get$TypeErrorDecoder_nullLiteralCallPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOnNull());
});
Isolate.$lazy($, "undefinedCallPattern", "TypeErrorDecoder_undefinedCallPattern", "get$TypeErrorDecoder_undefinedCallPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(void 0));
});
Isolate.$lazy($, "undefinedLiteralCallPattern", "TypeErrorDecoder_undefinedLiteralCallPattern", "get$TypeErrorDecoder_undefinedLiteralCallPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOnUndefined());
});
Isolate.$lazy($, "nullPropertyPattern", "TypeErrorDecoder_nullPropertyPattern", "get$TypeErrorDecoder_nullPropertyPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOn(null));
});
Isolate.$lazy($, "nullLiteralPropertyPattern", "TypeErrorDecoder_nullLiteralPropertyPattern", "get$TypeErrorDecoder_nullLiteralPropertyPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOnNull());
});
Isolate.$lazy($, "undefinedPropertyPattern", "TypeErrorDecoder_undefinedPropertyPattern", "get$TypeErrorDecoder_undefinedPropertyPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOn(void 0));
});
Isolate.$lazy($, "undefinedLiteralPropertyPattern", "TypeErrorDecoder_undefinedLiteralPropertyPattern", "get$TypeErrorDecoder_undefinedLiteralPropertyPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOnUndefined());
});
Isolate.$lazy($, "_toStringList", "IterableMixinWorkaround__toStringList", "get$IterableMixinWorkaround__toStringList", function() {
  return P.List_List(null, null);
});
Isolate.$lazy($, "_asyncCallbacks", "_asyncCallbacks", "get$_asyncCallbacks", function() {
  return P.ListQueue$(null, {func: "void_", void: true});
});
Isolate.$lazy($, "_toStringVisiting", "_toStringVisiting", "get$_toStringVisiting", function() {
  return P.HashSet_HashSet$identity(null);
});
Isolate.$lazy($, "_toStringList", "Maps__toStringList", "get$Maps__toStringList", function() {
  return P.List_List(null, null);
});
Isolate.$lazy($, "_listKeyCodesToPrevent", "CanvasRenderer__listKeyCodesToPrevent", "get$CanvasRenderer__listKeyCodesToPrevent", function() {
  var t1 = P.List_List(null, J.JSInt);
  H.setRuntimeTypeInfo(t1, [J.JSInt]);
  return t1;
});
Isolate.$lazy($, "Empty", "GwenEventArgs_Empty", "get$GwenEventArgs_Empty", function() {
  return new X.GwenEventArgs();
});
Isolate.$lazy($, "Zero", "GwenMargin_Zero", "get$GwenMargin_Zero", function() {
  return new X.GwenMargin(0, 0, 0, 0);
});
Isolate.$lazy($, "One", "GwenMargin_One", "get$GwenMargin_One", function() {
  return new X.GwenMargin(1, 1, 1, 1);
});
Isolate.$lazy($, "Two", "GwenMargin_Two", "get$GwenMargin_Two", function() {
  return new X.GwenMargin(2, 2, 2, 2);
});
Isolate.$lazy($, "Four", "GwenMargin_Four", "get$GwenMargin_Four", function() {
  return new X.GwenMargin(4, 4, 4, 4);
});
Isolate.$lazy($, "Eight", "GwenMargin_Eight", "get$GwenMargin_Eight", function() {
  return new X.GwenMargin(8, 8, 8, 8);
});
Isolate.$lazy($, "_firstTime", "Neutral__firstTime", "get$Neutral__firstTime", function() {
  return P.DateTime$_now();
});
Isolate.$lazy($, "KeyXlateDict", "GwenRenderer_KeyXlateDict", "get$GwenRenderer_KeyXlateDict", function() {
  return P.HashMap_HashMap(null, null, null, J.JSInt, J.JSString);
});
Isolate.$lazy($, "KeyXlateDictShift", "GwenRenderer_KeyXlateDictShift", "get$GwenRenderer_KeyXlateDictShift", function() {
  return P.HashMap_HashMap(null, null, null, J.JSInt, J.JSString);
});
Isolate.$lazy($, "KeyXlateDictCtrl", "GwenRenderer_KeyXlateDictCtrl", "get$GwenRenderer_KeyXlateDictCtrl", function() {
  return P.HashMap_HashMap(null, null, null, J.JSInt, J.JSString);
});
Isolate.$lazy($, "_map", "Color__map", "get$Color__map", function() {
  return P.HashMap_HashMap(null, null, null, J.JSInt, X.Color);
});
Isolate.$lazy($, "MousePosition", "InputHandler_MousePosition", "get$InputHandler_MousePosition", function() {
  var t1 = new P.Point(0, 0);
  H.setRuntimeTypeInfo(t1, [null]);
  return t1;
});
Isolate.$lazy($, "m_KeyData", "InputHandler_m_KeyData", "get$InputHandler_m_KeyData", function() {
  return X.KeyData$();
});
Isolate.$lazy($, "_lastClickPos", "InputHandler__lastClickPos", "get$InputHandler__lastClickPos", function() {
  var t1 = new P.Point(0, 0);
  H.setRuntimeTypeInfo(t1, [J.JSInt]);
  return t1;
});
Isolate.$lazy($, "Zero", "GwenPadding_Zero", "get$GwenPadding_Zero", function() {
  return new X.GwenPadding(0, 0, 0, 0);
});
Isolate.$lazy($, "One", "GwenPadding_One", "get$GwenPadding_One", function() {
  return new X.GwenPadding(1, 1, 1, 1);
});
// Native classes

init.functionAliases = {};
;
init.metadata = [];
$ = null;
Isolate = Isolate.$finishIsolateConstructor(Isolate);
$ = new Isolate();
function convertToFastObject(properties) {
  function MyClass() {};
  MyClass.prototype = properties;
  new MyClass();
  return properties;
}
A = convertToFastObject(A);
B = convertToFastObject(B);
C = convertToFastObject(C);
D = convertToFastObject(D);
E = convertToFastObject(E);
F = convertToFastObject(F);
G = convertToFastObject(G);
H = convertToFastObject(H);
J = convertToFastObject(J);
K = convertToFastObject(K);
L = convertToFastObject(L);
M = convertToFastObject(M);
N = convertToFastObject(N);
O = convertToFastObject(O);
P = convertToFastObject(P);
Q = convertToFastObject(Q);
R = convertToFastObject(R);
S = convertToFastObject(S);
T = convertToFastObject(T);
U = convertToFastObject(U);
V = convertToFastObject(V);
W = convertToFastObject(W);
X = convertToFastObject(X);
Y = convertToFastObject(Y);
Z = convertToFastObject(Z);
!function() {
  var objectProto = Object.prototype;
  for (var i = 0;; i++) {
    var property = "___dart_dispatch_record_ZxYxX_0_";
    if (i > 0)
      property = rootProperty + "_" + i;
    if (!(property in objectProto))
      return init.dispatchPropertyName = property;
  }
}();
// BEGIN invoke [main].
;(function (callback) {
  if (typeof document === "undefined") {
    callback(null);
    return;
  }
  if (document.currentScript) {
    callback(document.currentScript);
    return;
  }

  var scripts = document.scripts;
  function onLoad(event) {
    for (var i = 0; i < scripts.length; ++i) {
      scripts[i].removeEventListener("load", onLoad, false);
    }
    callback(event.target);
  }
  for (var i = 0; i < scripts.length; ++i) {
    scripts[i].addEventListener("load", onLoad, false);
  }
})(function(currentScript) {
  init.currentScript = currentScript;

  if (typeof dartMainRunner === "function") {
    dartMainRunner(function() { H.startRootIsolate(A.main$closure); });
  } else {
    H.startRootIsolate(A.main$closure);
  }
});
// END invoke [main].
function init() {
  Isolate.$isolateProperties = {};
  function generateAccessor(field, accessors, cls) {
    var len = field.length;
    var code = field.charCodeAt(len - 1);
    var reflectable = false;
    if (code == 45) {
      len--;
      code = field.charCodeAt(len - 1);
      field = field.substring(0, len);
      reflectable = true;
    }
    code = code >= 60 && code <= 64 ? code - 59 : code >= 123 && code <= 126 ? code - 117 : code >= 37 && code <= 43 ? code - 27 : 0;
    if (code) {
      var getterCode = code & 3;
      var setterCode = code >> 2;
      var accessorName = field = field.substring(0, len - 1);
      var divider = field.indexOf(":");
      if (divider > 0) {
        accessorName = field.substring(0, divider);
        field = field.substring(divider + 1);
      }
      if (getterCode) {
        var args = getterCode & 2 ? "receiver" : "";
        var receiver = getterCode & 1 ? "this" : "receiver";
        var body = "return " + receiver + "." + field;
        var property = cls + ".prototype.get$" + accessorName + "=";
        var fn = "function(" + args + "){" + body + "}";
        if (reflectable)
          accessors.push(property + "$reflectable(" + fn + ");\n");
        else
          accessors.push(property + fn + ";\n");
      }
      if (setterCode) {
        var args = setterCode & 2 ? "receiver, value" : "value";
        var receiver = setterCode & 1 ? "this" : "receiver";
        var body = receiver + "." + field + " = value";
        var property = cls + ".prototype.set$" + accessorName + "=";
        var fn = "function(" + args + "){" + body + "}";
        if (reflectable)
          accessors.push(property + "$reflectable(" + fn + ");\n");
        else
          accessors.push(property + fn + ";\n");
      }
    }
    return field;
  }
  Isolate.$isolateProperties.$generateAccessor = generateAccessor;
  function defineClass(name, cls, fields) {
    var accessors = [];
    var str = "function " + cls + "(";
    var body = "";
    for (var i = 0; i < fields.length; i++) {
      if (i != 0)
        str += ", ";
      var field = generateAccessor(fields[i], accessors, cls);
      var parameter = "parameter_" + field;
      str += parameter;
      body += "this." + field + " = " + parameter + ";\n";
    }
    str += ") {\n" + body + "}\n";
    str += cls + ".builtin$cls=\"" + name + "\";\n";
    str += "$desc=$collectedClasses." + cls + ";\n";
    str += "if($desc instanceof Array) $desc = $desc[1];\n";
    str += cls + ".prototype = $desc;\n";
    if (typeof defineClass.name != "string") {
      str += cls + ".name=\"" + cls + "\";\n";
    }
    str += accessors.join("");
    return str;
  }
  var inheritFrom = function() {
    function tmp() {
    }
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    return function(constructor, superConstructor) {
      tmp.prototype = superConstructor.prototype;
      var object = new tmp();
      var properties = constructor.prototype;
      for (var member in properties)
        if (hasOwnProperty.call(properties, member))
          object[member] = properties[member];
      object.constructor = constructor;
      constructor.prototype = object;
      return object;
    };
  }();
  Isolate.$finishClasses = function(collectedClasses, isolateProperties, existingIsolateProperties) {
    var pendingClasses = {};
    if (!init.allClasses)
      init.allClasses = {};
    var allClasses = init.allClasses;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    if (typeof dart_precompiled == "function") {
      var constructors = dart_precompiled(collectedClasses);
    } else {
      var combinedConstructorFunction = "function $reflectable(fn){fn.$reflectable=1;return fn};\n" + "var $desc;\n";
      var constructorsList = [];
    }
    for (var cls in collectedClasses) {
      if (hasOwnProperty.call(collectedClasses, cls)) {
        var desc = collectedClasses[cls];
        if (desc instanceof Array)
          desc = desc[1];
        var classData = desc[""], supr, name = cls, fields = classData;
        if (typeof classData == "string") {
          var split = classData.split("/");
          if (split.length == 2) {
            name = split[0];
            fields = split[1];
          }
        }
        var s = fields.split(";");
        fields = s[1] == "" ? [] : s[1].split(",");
        supr = s[0];
        if (supr && supr.indexOf("+") > 0) {
          s = supr.split("+");
          supr = s[0];
          var mixin = collectedClasses[s[1]];
          if (mixin instanceof Array)
            mixin = mixin[1];
          for (var d in mixin) {
            if (hasOwnProperty.call(mixin, d) && !hasOwnProperty.call(desc, d))
              desc[d] = mixin[d];
          }
        }
        if (typeof dart_precompiled != "function") {
          combinedConstructorFunction += defineClass(name, cls, fields);
          constructorsList.push(cls);
        }
        if (supr)
          pendingClasses[cls] = supr;
      }
    }
    if (typeof dart_precompiled != "function") {
      combinedConstructorFunction += "return [\n  " + constructorsList.join(",\n  ") + "\n]";
      var constructors = new Function("$collectedClasses", combinedConstructorFunction)(collectedClasses);
      combinedConstructorFunction = null;
    }
    for (var i = 0; i < constructors.length; i++) {
      var constructor = constructors[i];
      var cls = constructor.name;
      var desc = collectedClasses[cls];
      var globalObject = isolateProperties;
      if (desc instanceof Array) {
        globalObject = desc[0] || isolateProperties;
        desc = desc[1];
      }
      allClasses[cls] = constructor;
      globalObject[cls] = constructor;
    }
    constructors = null;
    var finishedClasses = {};
    init.interceptorsByTag = Object.create(null);
    init.leafTags = {};
    function finishClass(cls) {
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      if (hasOwnProperty.call(finishedClasses, cls))
        return;
      finishedClasses[cls] = true;
      var superclass = pendingClasses[cls];
      if (!superclass || typeof superclass != "string")
        return;
      finishClass(superclass);
      var constructor = allClasses[cls];
      var superConstructor = allClasses[superclass];
      if (!superConstructor)
        superConstructor = existingIsolateProperties[superclass];
      var prototype = inheritFrom(constructor, superConstructor);
      if (hasOwnProperty.call(prototype, "%")) {
        var nativeSpec = prototype["%"].split(";");
        if (nativeSpec[0]) {
          var tags = nativeSpec[0].split("|");
          for (var i = 0; i < tags.length; i++) {
            init.interceptorsByTag[tags[i]] = constructor;
            init.leafTags[tags[i]] = true;
          }
        }
        if (nativeSpec[1]) {
          tags = nativeSpec[1].split("|");
          if (nativeSpec[2]) {
            var subclasses = nativeSpec[2].split("|");
            for (var i = 0; i < subclasses.length; i++) {
              var subclass = allClasses[subclasses[i]];
              subclass.$nativeSuperclassTag = tags[0];
            }
          }
          for (i = 0; i < tags.length; i++) {
            init.interceptorsByTag[tags[i]] = constructor;
            init.leafTags[tags[i]] = false;
          }
        }
      }
    }
    for (var cls in pendingClasses)
      finishClass(cls);
  };
  Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
    var sentinelUndefined = {};
    var sentinelInProgress = {};
    prototype[fieldName] = sentinelUndefined;
    prototype[getterName] = function() {
      var result = $[fieldName];
      try {
        if (result === sentinelUndefined) {
          $[fieldName] = sentinelInProgress;
          try {
            result = $[fieldName] = lazyValue();
          } finally {
            if (result === sentinelUndefined) {
              if ($[fieldName] === sentinelInProgress) {
                $[fieldName] = null;
              }
            }
          }
        } else {
          if (result === sentinelInProgress)
            H.throwCyclicInit(staticName);
        }
        return result;
      } finally {
        $[getterName] = function() {
          return this[fieldName];
        };
      }
    };
  };
  Isolate.$finishIsolateConstructor = function(oldIsolate) {
    var isolateProperties = oldIsolate.$isolateProperties;
    function Isolate() {
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      for (var staticName in isolateProperties)
        if (hasOwnProperty.call(isolateProperties, staticName))
          this[staticName] = isolateProperties[staticName];
      function ForceEfficientMap() {
      }
      ForceEfficientMap.prototype = this;
      new ForceEfficientMap();
    }
    Isolate.prototype = oldIsolate.prototype;
    Isolate.prototype.constructor = Isolate;
    Isolate.$isolateProperties = isolateProperties;
    Isolate.$finishClasses = oldIsolate.$finishClasses;
    Isolate.makeConstantList = oldIsolate.makeConstantList;
    return Isolate;
  };
}
})()

//# sourceMappingURL=gwendart_test.dart.js.map
//@ sourceMappingURL=gwendart_test.dart.js.map
